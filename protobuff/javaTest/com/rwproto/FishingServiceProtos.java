// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FishingService.proto

package com.rwproto;

public final class FishingServiceProtos {
  private FishingServiceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EFishingRequestType}
   */
  public enum EFishingRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FISHING = 1;</code>
     *
     * <pre>
     *垂钓
     * </pre>
     */
    FISHING(0, 1),
    /**
     * <code>FISHING_DATA = 2;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    FISHING_DATA(1, 2),
    ;

    /**
     * <code>FISHING = 1;</code>
     *
     * <pre>
     *垂钓
     * </pre>
     */
    public static final int FISHING_VALUE = 1;
    /**
     * <code>FISHING_DATA = 2;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public static final int FISHING_DATA_VALUE = 2;


    public final int getNumber() { return value; }

    public static EFishingRequestType valueOf(int value) {
      switch (value) {
        case 1: return FISHING;
        case 2: return FISHING_DATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EFishingRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EFishingRequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EFishingRequestType>() {
            public EFishingRequestType findValueByNumber(int number) {
              return EFishingRequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final EFishingRequestType[] VALUES = values();

    public static EFishingRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EFishingRequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EFishingRequestType)
  }

  /**
   * Protobuf enum {@code EFishingResultType}
   */
  public enum EFishingResultType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 1;</code>
     *
     * <pre>
     *请求成功
     * </pre>
     */
    SUCCESS(0, 1),
    /**
     * <code>FAIL = 2;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    FAIL(1, 2),
    ;

    /**
     * <code>SUCCESS = 1;</code>
     *
     * <pre>
     *请求成功
     * </pre>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <code>FAIL = 2;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    public static final int FAIL_VALUE = 2;


    public final int getNumber() { return value; }

    public static EFishingResultType valueOf(int value) {
      switch (value) {
        case 1: return SUCCESS;
        case 2: return FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EFishingResultType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EFishingResultType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EFishingResultType>() {
            public EFishingResultType findValueByNumber(int number) {
              return EFishingResultType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final EFishingResultType[] VALUES = values();

    public static EFishingResultType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EFishingResultType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EFishingResultType)
  }

  /**
   * Protobuf enum {@code EFishingType}
   */
  public enum EFishingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRIMARY = 1;</code>
     *
     * <pre>
     *普通祭坛
     * </pre>
     */
    PRIMARY(0, 1),
    /**
     * <code>ADVANCED = 2;</code>
     *
     * <pre>
     *高级祭坛
     * </pre>
     */
    ADVANCED(1, 2),
    /**
     * <code>DIVINE = 3;</code>
     *
     * <pre>
     *神圣祭坛
     * </pre>
     */
    DIVINE(2, 3),
    ;

    /**
     * <code>PRIMARY = 1;</code>
     *
     * <pre>
     *普通祭坛
     * </pre>
     */
    public static final int PRIMARY_VALUE = 1;
    /**
     * <code>ADVANCED = 2;</code>
     *
     * <pre>
     *高级祭坛
     * </pre>
     */
    public static final int ADVANCED_VALUE = 2;
    /**
     * <code>DIVINE = 3;</code>
     *
     * <pre>
     *神圣祭坛
     * </pre>
     */
    public static final int DIVINE_VALUE = 3;


    public final int getNumber() { return value; }

    public static EFishingType valueOf(int value) {
      switch (value) {
        case 1: return PRIMARY;
        case 2: return ADVANCED;
        case 3: return DIVINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EFishingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EFishingType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EFishingType>() {
            public EFishingType findValueByNumber(int number) {
              return EFishingType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final EFishingType[] VALUES = values();

    public static EFishingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EFishingType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EFishingType)
  }

  /**
   * Protobuf enum {@code ELotteryType}
   */
  public enum ELotteryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ONE = 1;</code>
     *
     * <pre>
     *单抽
     * </pre>
     */
    ONE(0, 1),
    /**
     * <code>SIX = 2;</code>
     *
     * <pre>
     *6连
     * </pre>
     */
    SIX(1, 2),
    /**
     * <code>TEN = 3;</code>
     *
     * <pre>
     *10连
     * </pre>
     */
    TEN(2, 3),
    ;

    /**
     * <code>ONE = 1;</code>
     *
     * <pre>
     *单抽
     * </pre>
     */
    public static final int ONE_VALUE = 1;
    /**
     * <code>SIX = 2;</code>
     *
     * <pre>
     *6连
     * </pre>
     */
    public static final int SIX_VALUE = 2;
    /**
     * <code>TEN = 3;</code>
     *
     * <pre>
     *10连
     * </pre>
     */
    public static final int TEN_VALUE = 3;


    public final int getNumber() { return value; }

    public static ELotteryType valueOf(int value) {
      switch (value) {
        case 1: return ONE;
        case 2: return SIX;
        case 3: return TEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELotteryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ELotteryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELotteryType>() {
            public ELotteryType findValueByNumber(int number) {
              return ELotteryType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final ELotteryType[] VALUES = values();

    public static ELotteryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ELotteryType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ELotteryType)
  }

  public interface FishingRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .EFishingRequestType requestType = 1;
    /**
     * <code>required .EFishingRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    boolean hasRequestType();
    /**
     * <code>required .EFishingRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType();

    // optional .EFishingType fishingType = 2;
    /**
     * <code>optional .EFishingType fishingType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    boolean hasFishingType();
    /**
     * <code>optional .EFishingType fishingType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    com.rwproto.FishingServiceProtos.EFishingType getFishingType();

    // optional .ELotteryType lotteryType = 3;
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    boolean hasLotteryType();
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    com.rwproto.FishingServiceProtos.ELotteryType getLotteryType();
  }
  /**
   * Protobuf type {@code FishingRequest}
   */
  public static final class FishingRequest extends
      com.google.protobuf.GeneratedMessage
      implements FishingRequestOrBuilder {
    // Use FishingRequest.newBuilder() to construct.
    private FishingRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingRequest defaultInstance;
    public static FishingRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.FishingServiceProtos.EFishingRequestType value = com.rwproto.FishingServiceProtos.EFishingRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                requestType_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.rwproto.FishingServiceProtos.EFishingType value = com.rwproto.FishingServiceProtos.EFishingType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                fishingType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.rwproto.FishingServiceProtos.ELotteryType value = com.rwproto.FishingServiceProtos.ELotteryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                lotteryType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.FishingServiceProtos.FishingRequest.class, com.rwproto.FishingServiceProtos.FishingRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingRequest>() {
      public FishingRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .EFishingRequestType requestType = 1;
    public static final int REQUESTTYPE_FIELD_NUMBER = 1;
    private com.rwproto.FishingServiceProtos.EFishingRequestType requestType_;
    /**
     * <code>required .EFishingRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public boolean hasRequestType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EFishingRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType() {
      return requestType_;
    }

    // optional .EFishingType fishingType = 2;
    public static final int FISHINGTYPE_FIELD_NUMBER = 2;
    private com.rwproto.FishingServiceProtos.EFishingType fishingType_;
    /**
     * <code>optional .EFishingType fishingType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    public boolean hasFishingType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .EFishingType fishingType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.EFishingType getFishingType() {
      return fishingType_;
    }

    // optional .ELotteryType lotteryType = 3;
    public static final int LOTTERYTYPE_FIELD_NUMBER = 3;
    private com.rwproto.FishingServiceProtos.ELotteryType lotteryType_;
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    public boolean hasLotteryType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.ELotteryType getLotteryType() {
      return lotteryType_;
    }

    private void initFields() {
      requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
      fishingType_ = com.rwproto.FishingServiceProtos.EFishingType.PRIMARY;
      lotteryType_ = com.rwproto.FishingServiceProtos.ELotteryType.ONE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRequestType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, fishingType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, lotteryType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, fishingType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, lotteryType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.FishingServiceProtos.FishingRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FishingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.FishingServiceProtos.FishingRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.FishingServiceProtos.FishingRequest.class, com.rwproto.FishingServiceProtos.FishingRequest.Builder.class);
      }

      // Construct using com.rwproto.FishingServiceProtos.FishingRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
        bitField0_ = (bitField0_ & ~0x00000001);
        fishingType_ = com.rwproto.FishingServiceProtos.EFishingType.PRIMARY;
        bitField0_ = (bitField0_ & ~0x00000002);
        lotteryType_ = com.rwproto.FishingServiceProtos.ELotteryType.ONE;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRequest_descriptor;
      }

      public com.rwproto.FishingServiceProtos.FishingRequest getDefaultInstanceForType() {
        return com.rwproto.FishingServiceProtos.FishingRequest.getDefaultInstance();
      }

      public com.rwproto.FishingServiceProtos.FishingRequest build() {
        com.rwproto.FishingServiceProtos.FishingRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.FishingServiceProtos.FishingRequest buildPartial() {
        com.rwproto.FishingServiceProtos.FishingRequest result = new com.rwproto.FishingServiceProtos.FishingRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestType_ = requestType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fishingType_ = fishingType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lotteryType_ = lotteryType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.FishingServiceProtos.FishingRequest) {
          return mergeFrom((com.rwproto.FishingServiceProtos.FishingRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.FishingServiceProtos.FishingRequest other) {
        if (other == com.rwproto.FishingServiceProtos.FishingRequest.getDefaultInstance()) return this;
        if (other.hasRequestType()) {
          setRequestType(other.getRequestType());
        }
        if (other.hasFishingType()) {
          setFishingType(other.getFishingType());
        }
        if (other.hasLotteryType()) {
          setLotteryType(other.getLotteryType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequestType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.FishingServiceProtos.FishingRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.FishingServiceProtos.FishingRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .EFishingRequestType requestType = 1;
      private com.rwproto.FishingServiceProtos.EFishingRequestType requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
      /**
       * <code>required .EFishingRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public boolean hasRequestType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EFishingRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType() {
        return requestType_;
      }
      /**
       * <code>required .EFishingRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder setRequestType(com.rwproto.FishingServiceProtos.EFishingRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        requestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EFishingRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder clearRequestType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
        onChanged();
        return this;
      }

      // optional .EFishingType fishingType = 2;
      private com.rwproto.FishingServiceProtos.EFishingType fishingType_ = com.rwproto.FishingServiceProtos.EFishingType.PRIMARY;
      /**
       * <code>optional .EFishingType fishingType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public boolean hasFishingType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .EFishingType fishingType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.EFishingType getFishingType() {
        return fishingType_;
      }
      /**
       * <code>optional .EFishingType fishingType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public Builder setFishingType(com.rwproto.FishingServiceProtos.EFishingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        fishingType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EFishingType fishingType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public Builder clearFishingType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fishingType_ = com.rwproto.FishingServiceProtos.EFishingType.PRIMARY;
        onChanged();
        return this;
      }

      // optional .ELotteryType lotteryType = 3;
      private com.rwproto.FishingServiceProtos.ELotteryType lotteryType_ = com.rwproto.FishingServiceProtos.ELotteryType.ONE;
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public boolean hasLotteryType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.ELotteryType getLotteryType() {
        return lotteryType_;
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public Builder setLotteryType(com.rwproto.FishingServiceProtos.ELotteryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        lotteryType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public Builder clearLotteryType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lotteryType_ = com.rwproto.FishingServiceProtos.ELotteryType.ONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FishingRequest)
    }

    static {
      defaultInstance = new FishingRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FishingRequest)
  }

  public interface FishingResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .EFishingResultType resultType = 1;
    /**
     * <code>required .EFishingResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    boolean hasResultType();
    /**
     * <code>required .EFishingResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    com.rwproto.FishingServiceProtos.EFishingResultType getResultType();

    // optional .EFishingRequestType requestType = 2;
    /**
     * <code>optional .EFishingRequestType requestType = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    boolean hasRequestType();
    /**
     * <code>optional .EFishingRequestType requestType = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType();

    // repeated .FishingRewardData itemList = 3;
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData> 
        getItemListList();
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    com.rwproto.FishingServiceProtos.FishingRewardData getItemList(int index);
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    int getItemListCount();
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder> 
        getItemListOrBuilderList();
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder getItemListOrBuilder(
        int index);

    // repeated string heroList = 4;
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    java.util.List<java.lang.String>
    getHeroListList();
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    int getHeroListCount();
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    java.lang.String getHeroList(int index);
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeroListBytes(int index);

    // optional .FishingData fishingData = 5;
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    boolean hasFishingData();
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    com.rwproto.FishingServiceProtos.FishingData getFishingData();
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    com.rwproto.FishingServiceProtos.FishingDataOrBuilder getFishingDataOrBuilder();
  }
  /**
   * Protobuf type {@code FishingResponse}
   */
  public static final class FishingResponse extends
      com.google.protobuf.GeneratedMessage
      implements FishingResponseOrBuilder {
    // Use FishingResponse.newBuilder() to construct.
    private FishingResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingResponse defaultInstance;
    public static FishingResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.FishingServiceProtos.EFishingResultType value = com.rwproto.FishingServiceProtos.EFishingResultType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                resultType_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.rwproto.FishingServiceProtos.EFishingRequestType value = com.rwproto.FishingServiceProtos.EFishingRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                requestType_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                itemList_ = new java.util.ArrayList<com.rwproto.FishingServiceProtos.FishingRewardData>();
                mutable_bitField0_ |= 0x00000004;
              }
              itemList_.add(input.readMessage(com.rwproto.FishingServiceProtos.FishingRewardData.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                heroList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              heroList_.add(input.readBytes());
              break;
            }
            case 42: {
              com.rwproto.FishingServiceProtos.FishingData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = fishingData_.toBuilder();
              }
              fishingData_ = input.readMessage(com.rwproto.FishingServiceProtos.FishingData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fishingData_);
                fishingData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          itemList_ = java.util.Collections.unmodifiableList(itemList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.UnmodifiableLazyStringList(heroList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.FishingServiceProtos.FishingResponse.class, com.rwproto.FishingServiceProtos.FishingResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingResponse>() {
      public FishingResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .EFishingResultType resultType = 1;
    public static final int RESULTTYPE_FIELD_NUMBER = 1;
    private com.rwproto.FishingServiceProtos.EFishingResultType resultType_;
    /**
     * <code>required .EFishingResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    public boolean hasResultType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EFishingResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.EFishingResultType getResultType() {
      return resultType_;
    }

    // optional .EFishingRequestType requestType = 2;
    public static final int REQUESTTYPE_FIELD_NUMBER = 2;
    private com.rwproto.FishingServiceProtos.EFishingRequestType requestType_;
    /**
     * <code>optional .EFishingRequestType requestType = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    public boolean hasRequestType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .EFishingRequestType requestType = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType() {
      return requestType_;
    }

    // repeated .FishingRewardData itemList = 3;
    public static final int ITEMLIST_FIELD_NUMBER = 3;
    private java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData> itemList_;
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData> getItemListList() {
      return itemList_;
    }
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder> 
        getItemListOrBuilderList() {
      return itemList_;
    }
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public int getItemListCount() {
      return itemList_.size();
    }
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.FishingRewardData getItemList(int index) {
      return itemList_.get(index);
    }
    /**
     * <code>repeated .FishingRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder getItemListOrBuilder(
        int index) {
      return itemList_.get(index);
    }

    // repeated string heroList = 4;
    public static final int HEROLIST_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList heroList_;
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public java.util.List<java.lang.String>
        getHeroListList() {
      return heroList_;
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public int getHeroListCount() {
      return heroList_.size();
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public java.lang.String getHeroList(int index) {
      return heroList_.get(index);
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeroListBytes(int index) {
      return heroList_.getByteString(index);
    }

    // optional .FishingData fishingData = 5;
    public static final int FISHINGDATA_FIELD_NUMBER = 5;
    private com.rwproto.FishingServiceProtos.FishingData fishingData_;
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public boolean hasFishingData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.FishingData getFishingData() {
      return fishingData_;
    }
    /**
     * <code>optional .FishingData fishingData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public com.rwproto.FishingServiceProtos.FishingDataOrBuilder getFishingDataOrBuilder() {
      return fishingData_;
    }

    private void initFields() {
      resultType_ = com.rwproto.FishingServiceProtos.EFishingResultType.SUCCESS;
      requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
      itemList_ = java.util.Collections.emptyList();
      heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      fishingData_ = com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResultType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getItemListCount(); i++) {
        if (!getItemList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, resultType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, requestType_.getNumber());
      }
      for (int i = 0; i < itemList_.size(); i++) {
        output.writeMessage(3, itemList_.get(i));
      }
      for (int i = 0; i < heroList_.size(); i++) {
        output.writeBytes(4, heroList_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, fishingData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, resultType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, requestType_.getNumber());
      }
      for (int i = 0; i < itemList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, itemList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(heroList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getHeroListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, fishingData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.FishingServiceProtos.FishingResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FishingResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.FishingServiceProtos.FishingResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.FishingServiceProtos.FishingResponse.class, com.rwproto.FishingServiceProtos.FishingResponse.Builder.class);
      }

      // Construct using com.rwproto.FishingServiceProtos.FishingResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemListFieldBuilder();
          getFishingDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resultType_ = com.rwproto.FishingServiceProtos.EFishingResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          itemListBuilder_.clear();
        }
        heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fishingDataBuilder_ == null) {
          fishingData_ = com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance();
        } else {
          fishingDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingResponse_descriptor;
      }

      public com.rwproto.FishingServiceProtos.FishingResponse getDefaultInstanceForType() {
        return com.rwproto.FishingServiceProtos.FishingResponse.getDefaultInstance();
      }

      public com.rwproto.FishingServiceProtos.FishingResponse build() {
        com.rwproto.FishingServiceProtos.FishingResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.FishingServiceProtos.FishingResponse buildPartial() {
        com.rwproto.FishingServiceProtos.FishingResponse result = new com.rwproto.FishingServiceProtos.FishingResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultType_ = resultType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requestType_ = requestType_;
        if (itemListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            itemList_ = java.util.Collections.unmodifiableList(itemList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.itemList_ = itemList_;
        } else {
          result.itemList_ = itemListBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              heroList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.heroList_ = heroList_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        if (fishingDataBuilder_ == null) {
          result.fishingData_ = fishingData_;
        } else {
          result.fishingData_ = fishingDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.FishingServiceProtos.FishingResponse) {
          return mergeFrom((com.rwproto.FishingServiceProtos.FishingResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.FishingServiceProtos.FishingResponse other) {
        if (other == com.rwproto.FishingServiceProtos.FishingResponse.getDefaultInstance()) return this;
        if (other.hasResultType()) {
          setResultType(other.getResultType());
        }
        if (other.hasRequestType()) {
          setRequestType(other.getRequestType());
        }
        if (itemListBuilder_ == null) {
          if (!other.itemList_.isEmpty()) {
            if (itemList_.isEmpty()) {
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureItemListIsMutable();
              itemList_.addAll(other.itemList_);
            }
            onChanged();
          }
        } else {
          if (!other.itemList_.isEmpty()) {
            if (itemListBuilder_.isEmpty()) {
              itemListBuilder_.dispose();
              itemListBuilder_ = null;
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              itemListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemListFieldBuilder() : null;
            } else {
              itemListBuilder_.addAllMessages(other.itemList_);
            }
          }
        }
        if (!other.heroList_.isEmpty()) {
          if (heroList_.isEmpty()) {
            heroList_ = other.heroList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHeroListIsMutable();
            heroList_.addAll(other.heroList_);
          }
          onChanged();
        }
        if (other.hasFishingData()) {
          mergeFishingData(other.getFishingData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResultType()) {
          
          return false;
        }
        for (int i = 0; i < getItemListCount(); i++) {
          if (!getItemList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.FishingServiceProtos.FishingResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.FishingServiceProtos.FishingResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .EFishingResultType resultType = 1;
      private com.rwproto.FishingServiceProtos.EFishingResultType resultType_ = com.rwproto.FishingServiceProtos.EFishingResultType.SUCCESS;
      /**
       * <code>required .EFishingResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public boolean hasResultType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EFishingResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.EFishingResultType getResultType() {
        return resultType_;
      }
      /**
       * <code>required .EFishingResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public Builder setResultType(com.rwproto.FishingServiceProtos.EFishingResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        resultType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EFishingResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public Builder clearResultType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultType_ = com.rwproto.FishingServiceProtos.EFishingResultType.SUCCESS;
        onChanged();
        return this;
      }

      // optional .EFishingRequestType requestType = 2;
      private com.rwproto.FishingServiceProtos.EFishingRequestType requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
      /**
       * <code>optional .EFishingRequestType requestType = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public boolean hasRequestType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .EFishingRequestType requestType = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.EFishingRequestType getRequestType() {
        return requestType_;
      }
      /**
       * <code>optional .EFishingRequestType requestType = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder setRequestType(com.rwproto.FishingServiceProtos.EFishingRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        requestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EFishingRequestType requestType = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder clearRequestType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requestType_ = com.rwproto.FishingServiceProtos.EFishingRequestType.FISHING;
        onChanged();
        return this;
      }

      // repeated .FishingRewardData itemList = 3;
      private java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData> itemList_ =
        java.util.Collections.emptyList();
      private void ensureItemListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          itemList_ = new java.util.ArrayList<com.rwproto.FishingServiceProtos.FishingRewardData>(itemList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.FishingServiceProtos.FishingRewardData, com.rwproto.FishingServiceProtos.FishingRewardData.Builder, com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder> itemListBuilder_;

      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData> getItemListList() {
        if (itemListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemList_);
        } else {
          return itemListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public int getItemListCount() {
        if (itemListBuilder_ == null) {
          return itemList_.size();
        } else {
          return itemListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingRewardData getItemList(int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);
        } else {
          return itemListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.FishingServiceProtos.FishingRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.set(index, value);
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.FishingServiceProtos.FishingRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(com.rwproto.FishingServiceProtos.FishingRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.FishingServiceProtos.FishingRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(index, value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          com.rwproto.FishingServiceProtos.FishingRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.FishingServiceProtos.FishingRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addAllItemList(
          java.lang.Iterable<? extends com.rwproto.FishingServiceProtos.FishingRewardData> values) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          super.addAll(values, itemList_);
          onChanged();
        } else {
          itemListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder clearItemList() {
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          itemListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder removeItemList(int index) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.remove(index);
          onChanged();
        } else {
          itemListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingRewardData.Builder getItemListBuilder(
          int index) {
        return getItemListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder getItemListOrBuilder(
          int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);  } else {
          return itemListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder> 
           getItemListOrBuilderList() {
        if (itemListBuilder_ != null) {
          return itemListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemList_);
        }
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingRewardData.Builder addItemListBuilder() {
        return getItemListFieldBuilder().addBuilder(
            com.rwproto.FishingServiceProtos.FishingRewardData.getDefaultInstance());
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingRewardData.Builder addItemListBuilder(
          int index) {
        return getItemListFieldBuilder().addBuilder(
            index, com.rwproto.FishingServiceProtos.FishingRewardData.getDefaultInstance());
      }
      /**
       * <code>repeated .FishingRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<com.rwproto.FishingServiceProtos.FishingRewardData.Builder> 
           getItemListBuilderList() {
        return getItemListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.FishingServiceProtos.FishingRewardData, com.rwproto.FishingServiceProtos.FishingRewardData.Builder, com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder> 
          getItemListFieldBuilder() {
        if (itemListBuilder_ == null) {
          itemListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.FishingServiceProtos.FishingRewardData, com.rwproto.FishingServiceProtos.FishingRewardData.Builder, com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder>(
                  itemList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          itemList_ = null;
        }
        return itemListBuilder_;
      }

      // repeated string heroList = 4;
      private com.google.protobuf.LazyStringList heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHeroListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.LazyStringArrayList(heroList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public java.util.List<java.lang.String>
          getHeroListList() {
        return java.util.Collections.unmodifiableList(heroList_);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public int getHeroListCount() {
        return heroList_.size();
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public java.lang.String getHeroList(int index) {
        return heroList_.get(index);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeroListBytes(int index) {
        return heroList_.getByteString(index);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder setHeroList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addHeroList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addAllHeroList(
          java.lang.Iterable<java.lang.String> values) {
        ensureHeroListIsMutable();
        super.addAll(values, heroList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder clearHeroList() {
        heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addHeroListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.add(value);
        onChanged();
        return this;
      }

      // optional .FishingData fishingData = 5;
      private com.rwproto.FishingServiceProtos.FishingData fishingData_ = com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.FishingServiceProtos.FishingData, com.rwproto.FishingServiceProtos.FishingData.Builder, com.rwproto.FishingServiceProtos.FishingDataOrBuilder> fishingDataBuilder_;
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public boolean hasFishingData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingData getFishingData() {
        if (fishingDataBuilder_ == null) {
          return fishingData_;
        } else {
          return fishingDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder setFishingData(com.rwproto.FishingServiceProtos.FishingData value) {
        if (fishingDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fishingData_ = value;
          onChanged();
        } else {
          fishingDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder setFishingData(
          com.rwproto.FishingServiceProtos.FishingData.Builder builderForValue) {
        if (fishingDataBuilder_ == null) {
          fishingData_ = builderForValue.build();
          onChanged();
        } else {
          fishingDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder mergeFishingData(com.rwproto.FishingServiceProtos.FishingData value) {
        if (fishingDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              fishingData_ != com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance()) {
            fishingData_ =
              com.rwproto.FishingServiceProtos.FishingData.newBuilder(fishingData_).mergeFrom(value).buildPartial();
          } else {
            fishingData_ = value;
          }
          onChanged();
        } else {
          fishingDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder clearFishingData() {
        if (fishingDataBuilder_ == null) {
          fishingData_ = com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance();
          onChanged();
        } else {
          fishingDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingData.Builder getFishingDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getFishingDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.FishingServiceProtos.FishingDataOrBuilder getFishingDataOrBuilder() {
        if (fishingDataBuilder_ != null) {
          return fishingDataBuilder_.getMessageOrBuilder();
        } else {
          return fishingData_;
        }
      }
      /**
       * <code>optional .FishingData fishingData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.FishingServiceProtos.FishingData, com.rwproto.FishingServiceProtos.FishingData.Builder, com.rwproto.FishingServiceProtos.FishingDataOrBuilder> 
          getFishingDataFieldBuilder() {
        if (fishingDataBuilder_ == null) {
          fishingDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.FishingServiceProtos.FishingData, com.rwproto.FishingServiceProtos.FishingData.Builder, com.rwproto.FishingServiceProtos.FishingDataOrBuilder>(
                  fishingData_,
                  getParentForChildren(),
                  isClean());
          fishingData_ = null;
        }
        return fishingDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:FishingResponse)
    }

    static {
      defaultInstance = new FishingResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FishingResponse)
  }

  public interface FishingRewardDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string itemId = 1;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    java.lang.String getItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();

    // required int32 itemNum = 2;
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    boolean hasItemNum();
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    int getItemNum();
  }
  /**
   * Protobuf type {@code FishingRewardData}
   */
  public static final class FishingRewardData extends
      com.google.protobuf.GeneratedMessage
      implements FishingRewardDataOrBuilder {
    // Use FishingRewardData.newBuilder() to construct.
    private FishingRewardData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingRewardData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingRewardData defaultInstance;
    public static FishingRewardData getDefaultInstance() {
      return defaultInstance;
    }

    public FishingRewardData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingRewardData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingRewardData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingRewardData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.FishingServiceProtos.FishingRewardData.class, com.rwproto.FishingServiceProtos.FishingRewardData.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingRewardData> PARSER =
        new com.google.protobuf.AbstractParser<FishingRewardData>() {
      public FishingRewardData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingRewardData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingRewardData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string itemId = 1;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private java.lang.Object itemId_;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 itemNum = 2;
    public static final int ITEMNUM_FIELD_NUMBER = 2;
    private int itemNum_;
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    public boolean hasItemNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    public int getItemNum() {
      return itemNum_;
    }

    private void initFields() {
      itemId_ = "";
      itemNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingRewardData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.FishingServiceProtos.FishingRewardData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FishingRewardData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.FishingServiceProtos.FishingRewardDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRewardData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRewardData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.FishingServiceProtos.FishingRewardData.class, com.rwproto.FishingServiceProtos.FishingRewardData.Builder.class);
      }

      // Construct using com.rwproto.FishingServiceProtos.FishingRewardData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        itemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingRewardData_descriptor;
      }

      public com.rwproto.FishingServiceProtos.FishingRewardData getDefaultInstanceForType() {
        return com.rwproto.FishingServiceProtos.FishingRewardData.getDefaultInstance();
      }

      public com.rwproto.FishingServiceProtos.FishingRewardData build() {
        com.rwproto.FishingServiceProtos.FishingRewardData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.FishingServiceProtos.FishingRewardData buildPartial() {
        com.rwproto.FishingServiceProtos.FishingRewardData result = new com.rwproto.FishingServiceProtos.FishingRewardData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemNum_ = itemNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.FishingServiceProtos.FishingRewardData) {
          return mergeFrom((com.rwproto.FishingServiceProtos.FishingRewardData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.FishingServiceProtos.FishingRewardData other) {
        if (other == com.rwproto.FishingServiceProtos.FishingRewardData.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          bitField0_ |= 0x00000001;
          itemId_ = other.itemId_;
          onChanged();
        }
        if (other.hasItemNum()) {
          setItemNum(other.getItemNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasItemNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.FishingServiceProtos.FishingRewardData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.FishingServiceProtos.FishingRewardData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string itemId = 1;
      private java.lang.Object itemId_ = "";
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }

      // required int32 itemNum = 2;
      private int itemNum_ ;
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public boolean hasItemNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public int getItemNum() {
        return itemNum_;
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public Builder setItemNum(int value) {
        bitField0_ |= 0x00000002;
        itemNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public Builder clearItemNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FishingRewardData)
    }

    static {
      defaultInstance = new FishingRewardData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FishingRewardData)
  }

  public interface FishingDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 ordinaryTime = 1;
    /**
     * <code>optional int32 ordinaryTime = 1;</code>
     *
     * <pre>
     *普通祈祷免费剩余时间
     * </pre>
     */
    boolean hasOrdinaryTime();
    /**
     * <code>optional int32 ordinaryTime = 1;</code>
     *
     * <pre>
     *普通祈祷免费剩余时间
     * </pre>
     */
    int getOrdinaryTime();

    // optional int32 ordinaryCount = 2;
    /**
     * <code>optional int32 ordinaryCount = 2;</code>
     *
     * <pre>
     *普通祈祷免费已用次数
     * </pre>
     */
    boolean hasOrdinaryCount();
    /**
     * <code>optional int32 ordinaryCount = 2;</code>
     *
     * <pre>
     *普通祈祷免费已用次数
     * </pre>
     */
    int getOrdinaryCount();

    // optional int32 prayTime = 3;
    /**
     * <code>optional int32 prayTime = 3;</code>
     *
     * <pre>
     *高级祈祷免费剩余时间
     * </pre>
     */
    boolean hasPrayTime();
    /**
     * <code>optional int32 prayTime = 3;</code>
     *
     * <pre>
     *高级祈祷免费剩余时间
     * </pre>
     */
    int getPrayTime();

    // optional int32 prayCount = 4;
    /**
     * <code>optional int32 prayCount = 4;</code>
     *
     * <pre>
     *高级祈祷免费已用次数
     * </pre>
     */
    boolean hasPrayCount();
    /**
     * <code>optional int32 prayCount = 4;</code>
     *
     * <pre>
     *高级祈祷免费已用次数
     * </pre>
     */
    int getPrayCount();
  }
  /**
   * Protobuf type {@code FishingData}
   */
  public static final class FishingData extends
      com.google.protobuf.GeneratedMessage
      implements FishingDataOrBuilder {
    // Use FishingData.newBuilder() to construct.
    private FishingData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingData defaultInstance;
    public static FishingData getDefaultInstance() {
      return defaultInstance;
    }

    public FishingData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ordinaryTime_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ordinaryCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              prayTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              prayCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.FishingServiceProtos.internal_static_FishingData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.FishingServiceProtos.FishingData.class, com.rwproto.FishingServiceProtos.FishingData.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingData> PARSER =
        new com.google.protobuf.AbstractParser<FishingData>() {
      public FishingData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 ordinaryTime = 1;
    public static final int ORDINARYTIME_FIELD_NUMBER = 1;
    private int ordinaryTime_;
    /**
     * <code>optional int32 ordinaryTime = 1;</code>
     *
     * <pre>
     *普通祈祷免费剩余时间
     * </pre>
     */
    public boolean hasOrdinaryTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 ordinaryTime = 1;</code>
     *
     * <pre>
     *普通祈祷免费剩余时间
     * </pre>
     */
    public int getOrdinaryTime() {
      return ordinaryTime_;
    }

    // optional int32 ordinaryCount = 2;
    public static final int ORDINARYCOUNT_FIELD_NUMBER = 2;
    private int ordinaryCount_;
    /**
     * <code>optional int32 ordinaryCount = 2;</code>
     *
     * <pre>
     *普通祈祷免费已用次数
     * </pre>
     */
    public boolean hasOrdinaryCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 ordinaryCount = 2;</code>
     *
     * <pre>
     *普通祈祷免费已用次数
     * </pre>
     */
    public int getOrdinaryCount() {
      return ordinaryCount_;
    }

    // optional int32 prayTime = 3;
    public static final int PRAYTIME_FIELD_NUMBER = 3;
    private int prayTime_;
    /**
     * <code>optional int32 prayTime = 3;</code>
     *
     * <pre>
     *高级祈祷免费剩余时间
     * </pre>
     */
    public boolean hasPrayTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 prayTime = 3;</code>
     *
     * <pre>
     *高级祈祷免费剩余时间
     * </pre>
     */
    public int getPrayTime() {
      return prayTime_;
    }

    // optional int32 prayCount = 4;
    public static final int PRAYCOUNT_FIELD_NUMBER = 4;
    private int prayCount_;
    /**
     * <code>optional int32 prayCount = 4;</code>
     *
     * <pre>
     *高级祈祷免费已用次数
     * </pre>
     */
    public boolean hasPrayCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 prayCount = 4;</code>
     *
     * <pre>
     *高级祈祷免费已用次数
     * </pre>
     */
    public int getPrayCount() {
      return prayCount_;
    }

    private void initFields() {
      ordinaryTime_ = 0;
      ordinaryCount_ = 0;
      prayTime_ = 0;
      prayCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, ordinaryTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, ordinaryCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, prayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, prayCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ordinaryTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ordinaryCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, prayTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, prayCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.FishingServiceProtos.FishingData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.FishingServiceProtos.FishingData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code FishingData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.FishingServiceProtos.FishingDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.FishingServiceProtos.FishingData.class, com.rwproto.FishingServiceProtos.FishingData.Builder.class);
      }

      // Construct using com.rwproto.FishingServiceProtos.FishingData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ordinaryTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ordinaryCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        prayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        prayCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.FishingServiceProtos.internal_static_FishingData_descriptor;
      }

      public com.rwproto.FishingServiceProtos.FishingData getDefaultInstanceForType() {
        return com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance();
      }

      public com.rwproto.FishingServiceProtos.FishingData build() {
        com.rwproto.FishingServiceProtos.FishingData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.FishingServiceProtos.FishingData buildPartial() {
        com.rwproto.FishingServiceProtos.FishingData result = new com.rwproto.FishingServiceProtos.FishingData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ordinaryTime_ = ordinaryTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ordinaryCount_ = ordinaryCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.prayTime_ = prayTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.prayCount_ = prayCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.FishingServiceProtos.FishingData) {
          return mergeFrom((com.rwproto.FishingServiceProtos.FishingData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.FishingServiceProtos.FishingData other) {
        if (other == com.rwproto.FishingServiceProtos.FishingData.getDefaultInstance()) return this;
        if (other.hasOrdinaryTime()) {
          setOrdinaryTime(other.getOrdinaryTime());
        }
        if (other.hasOrdinaryCount()) {
          setOrdinaryCount(other.getOrdinaryCount());
        }
        if (other.hasPrayTime()) {
          setPrayTime(other.getPrayTime());
        }
        if (other.hasPrayCount()) {
          setPrayCount(other.getPrayCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.FishingServiceProtos.FishingData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.FishingServiceProtos.FishingData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 ordinaryTime = 1;
      private int ordinaryTime_ ;
      /**
       * <code>optional int32 ordinaryTime = 1;</code>
       *
       * <pre>
       *普通祈祷免费剩余时间
       * </pre>
       */
      public boolean hasOrdinaryTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ordinaryTime = 1;</code>
       *
       * <pre>
       *普通祈祷免费剩余时间
       * </pre>
       */
      public int getOrdinaryTime() {
        return ordinaryTime_;
      }
      /**
       * <code>optional int32 ordinaryTime = 1;</code>
       *
       * <pre>
       *普通祈祷免费剩余时间
       * </pre>
       */
      public Builder setOrdinaryTime(int value) {
        bitField0_ |= 0x00000001;
        ordinaryTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ordinaryTime = 1;</code>
       *
       * <pre>
       *普通祈祷免费剩余时间
       * </pre>
       */
      public Builder clearOrdinaryTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ordinaryTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 ordinaryCount = 2;
      private int ordinaryCount_ ;
      /**
       * <code>optional int32 ordinaryCount = 2;</code>
       *
       * <pre>
       *普通祈祷免费已用次数
       * </pre>
       */
      public boolean hasOrdinaryCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 ordinaryCount = 2;</code>
       *
       * <pre>
       *普通祈祷免费已用次数
       * </pre>
       */
      public int getOrdinaryCount() {
        return ordinaryCount_;
      }
      /**
       * <code>optional int32 ordinaryCount = 2;</code>
       *
       * <pre>
       *普通祈祷免费已用次数
       * </pre>
       */
      public Builder setOrdinaryCount(int value) {
        bitField0_ |= 0x00000002;
        ordinaryCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ordinaryCount = 2;</code>
       *
       * <pre>
       *普通祈祷免费已用次数
       * </pre>
       */
      public Builder clearOrdinaryCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ordinaryCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prayTime = 3;
      private int prayTime_ ;
      /**
       * <code>optional int32 prayTime = 3;</code>
       *
       * <pre>
       *高级祈祷免费剩余时间
       * </pre>
       */
      public boolean hasPrayTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 prayTime = 3;</code>
       *
       * <pre>
       *高级祈祷免费剩余时间
       * </pre>
       */
      public int getPrayTime() {
        return prayTime_;
      }
      /**
       * <code>optional int32 prayTime = 3;</code>
       *
       * <pre>
       *高级祈祷免费剩余时间
       * </pre>
       */
      public Builder setPrayTime(int value) {
        bitField0_ |= 0x00000004;
        prayTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prayTime = 3;</code>
       *
       * <pre>
       *高级祈祷免费剩余时间
       * </pre>
       */
      public Builder clearPrayTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prayTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 prayCount = 4;
      private int prayCount_ ;
      /**
       * <code>optional int32 prayCount = 4;</code>
       *
       * <pre>
       *高级祈祷免费已用次数
       * </pre>
       */
      public boolean hasPrayCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 prayCount = 4;</code>
       *
       * <pre>
       *高级祈祷免费已用次数
       * </pre>
       */
      public int getPrayCount() {
        return prayCount_;
      }
      /**
       * <code>optional int32 prayCount = 4;</code>
       *
       * <pre>
       *高级祈祷免费已用次数
       * </pre>
       */
      public Builder setPrayCount(int value) {
        bitField0_ |= 0x00000008;
        prayCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prayCount = 4;</code>
       *
       * <pre>
       *高级祈祷免费已用次数
       * </pre>
       */
      public Builder clearPrayCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        prayCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FishingData)
    }

    static {
      defaultInstance = new FishingData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:FishingData)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FishingRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FishingRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FishingResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FishingResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FishingRewardData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FishingRewardData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FishingData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FishingData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024FishingService.proto\"\203\001\n\016FishingReques" +
      "t\022)\n\013requestType\030\001 \002(\0162\024.EFishingRequest" +
      "Type\022\"\n\013fishingType\030\002 \001(\0162\r.EFishingType" +
      "\022\"\n\013lotteryType\030\003 \001(\0162\r.ELotteryType\"\300\001\n" +
      "\017FishingResponse\022\'\n\nresultType\030\001 \002(\0162\023.E" +
      "FishingResultType\022)\n\013requestType\030\002 \001(\0162\024" +
      ".EFishingRequestType\022$\n\010itemList\030\003 \003(\0132\022" +
      ".FishingRewardData\022\020\n\010heroList\030\004 \003(\t\022!\n\013" +
      "fishingData\030\005 \001(\0132\014.FishingData\"4\n\021Fishi" +
      "ngRewardData\022\016\n\006itemId\030\001 \002(\t\022\017\n\007itemNum\030",
      "\002 \002(\005\"_\n\013FishingData\022\024\n\014ordinaryTime\030\001 \001" +
      "(\005\022\025\n\rordinaryCount\030\002 \001(\005\022\020\n\010prayTime\030\003 " +
      "\001(\005\022\021\n\tprayCount\030\004 \001(\005*4\n\023EFishingReques" +
      "tType\022\013\n\007FISHING\020\001\022\020\n\014FISHING_DATA\020\002*+\n\022" +
      "EFishingResultType\022\013\n\007SUCCESS\020\001\022\010\n\004FAIL\020" +
      "\002*5\n\014EFishingType\022\013\n\007PRIMARY\020\001\022\014\n\010ADVANC" +
      "ED\020\002\022\n\n\006DIVINE\020\003*)\n\014ELotteryType\022\007\n\003ONE\020" +
      "\001\022\007\n\003SIX\020\002\022\007\n\003TEN\020\003B#\n\013com.rwprotoB\024Fish" +
      "ingServiceProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FishingRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FishingRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FishingRequest_descriptor,
              new java.lang.String[] { "RequestType", "FishingType", "LotteryType", });
          internal_static_FishingResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_FishingResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FishingResponse_descriptor,
              new java.lang.String[] { "ResultType", "RequestType", "ItemList", "HeroList", "FishingData", });
          internal_static_FishingRewardData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_FishingRewardData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FishingRewardData_descriptor,
              new java.lang.String[] { "ItemId", "ItemNum", });
          internal_static_FishingData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_FishingData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FishingData_descriptor,
              new java.lang.String[] { "OrdinaryTime", "OrdinaryCount", "PrayTime", "PrayCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
