// -*- Java -*- This Cup file was machine-generated by BNFC
package ProtobufExp;

parser code {:
  public ProtobufExp.Absyn.ExpList pExpList() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (ProtobufExp.Absyn.ExpList) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal ProtobufExp.Absyn.ExpList ExpList;
nonterminal ProtobufExp.Absyn.Exp Exp;
nonterminal ProtobufExp.Absyn.Field Field;
nonterminal ProtobufExp.Absyn.FieldModifier FieldModifier;
nonterminal ProtobufExp.Absyn.FieldType FieldType;
nonterminal ProtobufExp.Absyn.FieldList FieldList;

terminal _SYMB_0;    //   {
terminal _SYMB_1;    //   }
terminal _SYMB_2;    //   =
terminal _SYMB_3;    //   ;
terminal _SYMB_4;    //   bool
terminal _SYMB_5;    //   bytes
terminal _SYMB_6;    //   double
terminal _SYMB_7;    //   float
terminal _SYMB_8;    //   int32
terminal _SYMB_9;    //   int64
terminal _SYMB_10;    //   message
terminal _SYMB_11;    //   optional
terminal _SYMB_12;    //   repeated
terminal _SYMB_13;    //   required
terminal _SYMB_14;    //   string



terminal Integer _INTEGER_;

terminal String _IDENT_;



start with ExpList;


ExpList ::=  /* empty */  {: RESULT = new ProtobufExp.Absyn.NilExpList(); :} 
  | Exp:p_1 ExpList:p_2  {: RESULT = new ProtobufExp.Absyn.ConsExpList(p_1,p_2); :}
;
Exp ::= _SYMB_10 _IDENT_:p_2 _SYMB_0 FieldList:p_4 _SYMB_1  {: RESULT = new ProtobufExp.Absyn.EMsg(p_2,p_4); :} 
;
Field ::= FieldModifier:p_1 FieldType:p_2 _IDENT_:p_3 _SYMB_2 _INTEGER_:p_5 _SYMB_3  {: RESULT = new ProtobufExp.Absyn.SimpleField(p_1,p_2,p_3,p_5); :} 
;
FieldModifier ::= _SYMB_13  {: RESULT = new ProtobufExp.Absyn.FieldModifier_required(); :} 
  | _SYMB_11  {: RESULT = new ProtobufExp.Absyn.FieldModifier_optional(); :}
  | _SYMB_12  {: RESULT = new ProtobufExp.Absyn.FieldModifier_repeated(); :}
;
FieldType ::= _SYMB_8  {: RESULT = new ProtobufExp.Absyn.FieldType_int32(); :} 
  | _SYMB_9  {: RESULT = new ProtobufExp.Absyn.FieldType_int64(); :}
  | _SYMB_7  {: RESULT = new ProtobufExp.Absyn.FieldType_float(); :}
  | _SYMB_6  {: RESULT = new ProtobufExp.Absyn.FieldType_double(); :}
  | _SYMB_14  {: RESULT = new ProtobufExp.Absyn.FieldType_string(); :}
  | _SYMB_4  {: RESULT = new ProtobufExp.Absyn.FieldType_bool(); :}
  | _SYMB_5  {: RESULT = new ProtobufExp.Absyn.FieldType_bytes(); :}
  | _IDENT_:p_1  {: RESULT = new ProtobufExp.Absyn.FieldTypeIdent(p_1); :}
;
FieldList ::= Field:p_1  {: RESULT = new ProtobufExp.Absyn.OneFieldList(p_1); :} 
  | Field:p_1 FieldList:p_2  {: RESULT = new ProtobufExp.Absyn.ConsFieldList(p_1,p_2); :}
;

