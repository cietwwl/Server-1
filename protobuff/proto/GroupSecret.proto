syntax = "proto2";
option java_package = "com.rwproto";
option java_outer_classname = "GroupSecretProto";

package groupSecret;


enum RequestType{

	GET_USER_SECRETS = 1;//获取用户参与或创建的秘境
	FIND_MATCH_SECRET = 2;//查询匹配的秘境
	OPEN_SECRET = 3;//开启秘境
	GET_DEF_REWARD = 4;//获取防守奖励
	GET_SECRET_REWARD = 5;//获取秘境奖励
}

message OpenReqMsg{
	required int32 type =1;  //秘境类型
}
message GetDefRewardMsg{
	required string secretId = 1;
	required string defLogId = 2;
}
message GetSecretRewardMsg{
	required string secretId = 1;
}
message GetUserSecretsRspMsg{
	repeated string groupSecretData = 1;
}
message FindMatchSecretRspMsg{
	optional string groupSecretData = 1;
}
message OpenSecretRspMsg{
	optional string groupSecretData = 1;
}


message CommonReqMsg{

	required RequestType reqType = 1;//请求功能协议类型
	optional OpenReqMsg openReqMsg = 2; //开启秘境所需参数
	optional GetDefRewardMsg getDefRewardMsg = 3;  //获取防守奖励的参数
	optional GetSecretRewardMsg getSecretRewardMsg = 4;  //获取秘境奖励的参数
}


message CommonRspMsg{
	required RequestType reqType = 1;//回应的功能协议类型
	required bool isSuccess = 2;//是否成功处理
	optional string tipMsg = 3;//提示消息，可以是成功，也可以是失败的提示消息
	optional GetUserSecretsRspMsg getUserSecretsRspMsg = 4; //GET_USER_SECRETS 返回
	optional FindMatchSecretRspMsg findMatchSecretRspMsg = 5; //FIND_MATCH_SECRET 返回
	optional OpenSecretRspMsg OpenSecretRspMsg = 6; //OPEN_SECRET 返回

}