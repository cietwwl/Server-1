syntax = "proto2";
option java_package = "com.rwproto";
option java_outer_classname = "GroupProto";

/**
* 文档简单说明
* 1、多个长'/'代表的是区域划分（包括公用枚举类型区，通用收发协议定义区，对应功能协议定义区）
* 2、多个长'-'代表的是一个小区域类型的分界（比如创建帮派的Req和Rsp定义前后，都会用这个隔开其他）
* 3、中文符号的【】主要是着重显示描述，明确看到内容的开头位置
* '/'的模版：///////////////////////////////////////////////////
* '-'的模版：-----------------------
*/

///////////////////////////////////////////////////前后端公用的枚举类型区

//【加入帮派的验证类型】
enum GroupValidateType{
	FIRST_VALIDATE = 1;//验证通过
	NON_VALIDATE = 2;//毋须验证
	JOIN_REFUSED = 3;//拒绝加入
}

//【帮派中的职位】
enum GroupPost{
	LEADER = 1;//帮主
	ASSISTANT_LEADER = 2;//副帮主
	OFFICEHOLDER = 3;//官员
	MEMBER = 4;//成员
}

//【帮派状态】
enum GroupState{
	NORMAL = 0;//正常状态
	DISOLUTION = 1;//解散状态
}

//【帮派推荐类型】
enum GroupRecommentType{
	RANK_RECOMMENT = 1;//排行榜推荐
	RANDOM_RECOMMENT = 2;//随机推荐
}

//【帮派技能的类型】
enum GroupSkillType{
	ATTACK = 1;//攻击系
	DEFENCE = 2;//防御系
	UNIVERSAL = 3;//通用系
}

//【帮派日志的类型】
enum GroupLogType{
	NEW_JOIN_GROUP = 1;//新加入帮派
	QUIT_GROUP = 2;//退去帮派
	CHANGE_POST = 3;//职位变动
	GROUP_UPGRADE = 4;//帮派等级提升
	GROUP_SKILL_REASERCH = 5;//技能研发
}

//【帮派功能的枚举】
enum GroupFunction{
	TRANSFER_LEADER_POST = 1;//转让帮主
	NOMINATE_ASSISTANT_LEADER = 2;//任命副帮主
	NOMINATE_OFFICEHOLDER = 3;//任命官员
	CANCEL_NOMINATE = 4;//取消任命
	KICK_OF_GROUP = 5;//踢出帮派
	MODIFY_ANNOUNCEMENT = 6;//修改帮派公告
	GROUP_SETTING = 7;//帮派设置
	GROUP_EMAIL_ALL = 8;//全员帮派邮件
	MEMBER_RECEIVE = 9;//成员接受
	GROUP_DONATE = 10;//帮派贡献
	RESEARCH_GROUP_SKILL = 11;//研发帮派技能
	STUDY_GROUP_SKILL = 12;//学习帮派技能
	GROUP_STORE = 13;//帮派商店
	JOIN_SECERT_AREA = 14;//参加帮派密境
	OPEN_GROUP_DUPLICATE = 15;//开启帮派副本
	JOIN_GROUP_DUPLICATE = 16;//参加帮派副本
	JOIN_GROUP_BATTLE = 17;//参加帮派战
	MODIFY_GROUP_NAME = 18;//修改帮派名字
	DISMISS_THE_GROUP = 19;//解散帮派
	CANCEL_DISMISS_THE_GROUP = 20;//取消解散帮派
}

//-----------------------【功能协议类型枚举】-----------------------
enum RequestType{
	CREATE_GROUP_TYPE = 1;//创建帮派
	GET_GROUP_INFO_TYPE = 2;//获取帮派的信息
	GET_GROUP_RANK_INFO_TYPE = 3;//获取帮派排行榜信息
	MODIFY_ANNOUNCEMENT_TYPE = 4;//修改帮派公告
	MODIFY_GROUP_NAME_TYPE = 5;//修改帮派名字
	GROUP_SETTING_TYPE = 6;//帮派设置
	FIND_GROUP_TYPE = 7;//查找帮派
	APPLY_JOIN_GROUP_TYPE = 8;//申请加入帮派
	GROUP_MEMBER_RECEIVE_TYPE = 9;//接受帮派成员
	NOMINATE_POST_TYPE = 10;//成员任命
	CANCEL_NOMINATE_TYPE = 11;//任命取消
	OPEN_DONATE_VIEW_TYPE = 12;//打开捐献界面
	GROUP_DONATE_TYPE = 13;//帮派捐献
	TRANSFER_LEADER_POST_TYPE = 14;//转让帮主
	GROUP_EMAIL_FOR_ALL_TYPE = 15;//全员邮件
	RESEARCH_GROUP_SKILL_TYPE = 16;//技能研发
	STUDY_GROUP_SKILL_TYPE = 17;//学习技能
	THE_LOG_OF_GROUP_TYPE = 18;//帮派日志
	QUIT_GROUP_TYPE = 19;//退出帮派
	KICK_MEMBER_TYPE = 20;//踢出帮派成员
	DISMISS_THE_GROUP_TYPE = 21;//解散帮派
	CANCEL_DISMISS_THE_GROUP_TYPE = 22;//取消解散帮派
	GROUP_RECOMMENT_TYPE = 23;//帮派推荐
	GET_APPLY_MEMBER_LIST_TYPE = 24;//获取帮派申请成员列表
	CHECK_GROUP_DATA_TYPE = 25;//打开帮派建筑就请求这个信息
	OPEN_RESEARCH_SKILL_VIEW_TYPE = 26;//打开研发帮派技能界面
	OPEN_STUDY_SKILL_VIEW_TYPE = 27;//打开学习帮派技能界面
}

///////////////////////////////////////////////////协议中要用到的对象定义区

//【帮派成员的信息】
message MemberInfo{
	required string headIcon = 1;//成员的头像Id
	required int32 level = 2;//成员的等级
	required int32 job = 3;//职业类型
	required int32 vipLevel = 4;//Vip等级
	required string memberName = 5;//成员的名字
	required GroupPost memberPost = 6;//成员职位
	required int32 privateContribution = 7;//个人贡献
	required string memberId = 8;//成员的Id
	optional int32 logoutTime = 9;//登出游戏的秒数，没有该字段就是在线
	required string templateId = 10;//角色对应的模版Id
}

//【申请成员的信息】
message ApplyMemberInfo{
	required string headIcon = 1;//申请的成员头像Id
	required int32 level = 2;//申请成员的等级
	required string name = 3;//申请成员的名字
	required int32 fighting = 4;//申请时的战斗力
	required int64 applyTime = 5;//申请时间
	required string memberId = 6;//申请成员的Id
}

//【帮派排行榜信息】
message GroupRankEntryInfo{
	required int32 rankIndex = 1;//排行榜中排名
	required string groupIcon = 2;//帮派图标
	required string groupName = 3;//帮派名字
	required int32 groupLevel = 4;//帮派等级
	required int32 groupExp = 5;//帮派经验
	required int32 groupMemberNum = 6;//帮派成员的数量
}

//【帮派的简单信息】
message GroupSimpleInfo{
	required string groupId = 1;//帮派的Id
	required string groupName = 2;//帮派的名字
	required string headIcon = 3;//帮派的图标
	required int32 groupLevel = 4;//帮派的等级
	required int32 groupMemberNum = 5;//帮派成员的数量
	required string groupDeclaration = 6;//帮派的宣言
	optional int32 rankIndex = 7;//帮派的排行榜名次，如果没有这个字段或者是-1就代表未进榜
}

//【帮派的基础信息】
message GroupBaseInfo{
	required string groupName = 1;//帮派的名字
	required string groupIcon = 2;//帮派的图标
	required string groupId = 3;//帮派的编号
	optional int32 groupRankIndex = 4;//帮派排行中的排名，如果没有这个字段或者是-1，表示当前未进榜
	required int32 groupLevel = 5;//帮派的等级
	required int32 groupExp = 6;//帮派的经验
	required int32 groupMemberNum = 7;//帮派的成员数量
	required int32 groupSupplies = 8;//帮派的物资
	required string announcement = 9;//帮派的公告内容
	repeated MemberInfo memberInfo = 10;//帮派的成员信息
	required GroupPost post = 11;//成员在帮派中的职位
	required GroupValidateType validateType = 12;//验证类型
	required int32 applyLevel = 13;//验证等级
	required string declaration = 14;//帮派宣言
}

//【帮派日志要用到的参数】
message GroupLogInfo{
	required int64 logDistanceTime = 1;//日志发生距离现在过了过少秒（秒为单位）
	optional string name = 2;//成员名字
	optional GroupPost post = 3;//改变的职位
	optional int32 groupLevel = 4;//帮派的等级
	optional string skillName = 5;//技能的名字
	optional string skillLevel = 6;//技能的等级
	required GroupLogType logType = 7;//日志类型
}

//【研发帮派技能信息】
message ResearchSkillInfo{
	required string skillId = 1;//技能Id
	required int32 skillLevel = 2;//技能已经研发的等级
}

//【学习帮派技能信息】
message StudySkillInfo{
	required string skillId = 1;//技能Id
	required int32 skillLevel = 2;//技能已经学习的等级
	required int32 skillResearchLevel = 3;//技能已经研发的等级
}

///////////////////////////////////////////////////功能协议区

//START-----------------------创建帮派的功能协议

//【创建帮派请求的协议-CREATE_GROUP_TYPE】
message CreateGroupReqMsg{
	required string groupName = 1;//帮派的名字
	required string icon = 2;//帮派的图标
}

//【创建帮派响应的协议-CREATE_GROUP_TYPE】
message CreateGroupRspMsg{
	required GroupBaseInfo groupBaseInfo = 1;
}

//START-----------------------获取帮派信息的功能协议

//【获取帮派信息请求的协议-GET_GROUP_INFO_TYPE】

/**
* 该消息直接用通用的请求消息【GroupCommonReqMsg】，无需任何参数
*/

//【获取帮派信息的响应消息-GET_GROUP_INFO_TYPE】
message GetGroupInfoRspMsg{
	required GroupBaseInfo groupBaseInfo = 1;//帮派的基础信息
	optional int32 dismissLeftTime = 2;//解散剩余时间(秒为单位)
}

//START-----------------------获取帮派排行榜信息的功能协议

//【获取帮派信息的请求消息-GET_GROUP_RANK_INFO_TYPE】

/**
* 该消息直接用通用的请求消息【GroupCommonReqMsg】，无需任何参数
*/

//【获取帮派信息的响应消息-GET_GROUP_RANK_INFO_TYPE】
message GetGroupRankRspMsg{
	repeated GroupRankEntryInfo groupRankEntryInfo = 1;//帮派排行中的排行数据
}

//START-----------------------修改帮派公告的功能协议

//【修改帮派公告的请求消息-MODIFY_ANNOUNCEMENT_TYPE】
message ModifyAnnouncementReqMsg{
	required string announcement = 1;//修改的公告内容
}

//【修改帮派公告的响应消息-MODIFY_ANNOUNCEMENT_TYPE】
message ModifyAnnouncementRspMsg{
	required string announcement = 1;//新的公告内容
}

//START-----------------------修改帮派名字的功能协议

//【修改帮派名字的请求消息-MODIFY_GROUP_NAME_TYPE】
message ModifyGroupNameReqMsg{
	required string groupName = 1;//修改的帮派名字
}

//【修改帮派名字的响应消息-MODIFY_GROUP_NAME_TYPE】

/**
* 设置这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------请求帮派设置的功能协议

//【帮派设置的请求消息-GROUP_SETTING_TYPE】
/**
* 请求协议里所有的都是optional，如果客户端控制的设置中只是改了一个点，就只
* 发修改的点到服务器验证就行了。减少流量浪费
*/
message GroupSettingReqMsg{
	optional string groupIcon = 1;//帮派的图标
	optional string declaration = 2;//帮派宣言
	optional GroupValidateType validateType = 3;//验证类型
	optional int32 applyLevel = 4;//验证等级
}

//【帮派设置的响应消息-GROUP_SETTING_TYPE】

/**
* 设置这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------查找帮派的功能协议

//【查找帮派的请求消息-FIND_GROUP_TYPE】
message FindGroupReqMsg{
	required string groupId = 1;//要查找帮派的Id
}

//【查找帮派的响应消息-FIND_GROUP_TYPE】
message FindGroupRspMsg{
	required GroupSimpleInfo groupSimpleInfo = 1;//查找帮派的信息
}

//START-----------------------申请加入帮派的功能协议

//【申请加入帮派的请求消息-APPLY_JOIN_GROUP_TYPE】
message ApplyJoinGroupReqMsg{
	required string groupId = 1;//申请加入的帮派Id
}

//【申请加入帮派的响应消息-APPLY_JOIN_GROUP_TYPE】

/**
* 这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------接受帮派成员的功能协议

//【接受帮派成员的请求信息-GROUP_MEMBER_RECEIVE_TYPE】
message GroupMemberReceiveReqMsg{
	required bool isReceive = 1;//是否接受入帮申请
	optional string applyMemberId = 2;//申请的成员的Id。【如果缺省就当作一键接受/拒绝】
}

//【接受帮派成员的响应信息-GROUP_MEMBER_RECEIVE_TYPE】
message GroupMemberReceiveRspMsg{
	/**
	* 有可能在一键接受的时候，会成员满，那这个时候需要移除那些记录就通过这个通知。
	* 如果客户端接收到的GroupCommonRspMsg中的rspBody是null的时候，就清除客户端的请求列表数据
	*/
	repeated string removeMemberId = 1;//清除客户端那些界面上的记录
}

//START-----------------------成员任命的功能协议

//【成员任命的请求协议-NOMINATE_POST_TYPE】
message GroupNominatePostReqMsg{
	required string memberId = 1;//要任命的角色Id
	required GroupPost post = 2;//要任命的官职
}

//【成员任命的响应协议-NOMINATE_POST_TYPE】

/**
* 这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------成员任命取消的功能协议

//【成员取消任命的请求协议-CANCEL_NOMINATE_TYPE】
message GroupCancelNominatePostReqMsg{
	required string memberId = 1;//要取消任命的角色Id
}

//【成员取消任命的响应协议-CANCEL_NOMINATE_TYPE】

/**
* 这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------打开帮派捐献界面的功能协议

//【打开帮派捐献界面的请求协议-OPEN_DONATE_VIEW_TYPE】

/**
* 这里发送通用的请求协议【GroupCommonReqMsg】
*/

//【打开帮派捐献界面的响应协议-OPEN_DONATE_VIEW_TYPE】
message OpenDonateViewRspMsg{
	required int32 leftDonateTimes = 1;//当前剩余的捐献次数
	required int32 privateContribution = 2;//个人贡献
	repeated int32 openDonateId = 3;//解锁的捐献Id
	required int32 totalDonateTimes = 4;//捐献的总次数
}

//START-----------------------帮派捐献的功能协议

//【帮派捐献的请求协议-GROUP_DONATE_TYPE】
message GroupDonateReqMsg{
	required int32 donateId = 1;//捐献类型
}

//【帮派捐献的响应协议-GROUP_DONATE_TYPE】
message GroupDonateRspMsg{
	required int32 groupLevel = 1;//捐献之后帮派的等级
	required int32 groupExp = 2;//捐献之后帮派的经验
	required int32 groupSupplies = 3;//捐献之后帮派的物资
	required int32 leftDonateTimes = 4;//剩下的捐献次数
	required int32 privateContribution = 5;//捐献之后个人的贡献
	required int32 totalDonateTimes = 6;//捐献的总次数
}

//START-----------------------转让帮主的功能协议

//【转让帮主的请求协议-TRANSFER_LEADER_POST_TYPE】
message TransferGroupLeaderPostReqMsg{
	required string memberId = 1;//转让给哪个成员
}

//【转让帮主的响应协议-TRANSFER_LEADER_POST_TYPE】

/**
* 这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------全员邮件的功能协议

//【全员邮件的请求协议-GROUP_EMAIL_FOR_ALL_TYPE】
message GroupEmailForAllReqMsg{
	required string emailTitle = 1;//邮件标题
	required string emailContent = 2;//邮件内容
}

//【全员邮件的响应协议-GROUP_EMAIL_FOR_ALL_TYPE】

/**
* 这里只返回通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------技能研发的功能协议

//【技能研发的请求协议-RESEARCH_GROUP_SKILL_TYPE】
message ResearchGroupSkillReqMsg{
	required string skillId = 1;//研发的技能Id
	required int32 skillLevel = 2;//研发的技能等级
}

//【技能研发的响应协议-RESEARCH_GROUP_SKILL_TYPE】
message ResearchGroupSkillRspMsg{
	required string skillId = 1;//研发的技能Id
	required int32 skillLevel = 2;//研发的技能等级
}

//START-----------------------技能学习的功能协议

//【技能学习的请求协议-STUDY_GROUP_SKILL_TYPE】
message StudyGroupSkillReqMsg{
	required string skillId = 1;//学习的技能Id
	required int32 skillLevel = 2;//学习的技能等级
}

//【技能学习的响应协议-STUDY_GROUP_SKILL_TYPE】
message StudyGroupSkillRspMsg{
	required string skillId = 1;//学习的技能Id
	required int32 skillLevel = 2;//学习的技能等级
}

//START-----------------------帮派日志的功能协议

//【帮派日志的请求协议-THE_LOG_OF_GROUP_TYPE】

/**
* 请求发送的协议是通用的请求协议【GroupCommonReqMsg】
*/

//【帮派日志的响应协议-THE_LOG_OF_GROUP_TYPE】
message GetLogOfGroupRspMsg{
	repeated GroupLogInfo groupLog = 1;//帮派日志的所有数量
}

//START-----------------------退出帮派的功能协议

//【退出帮派的请求协议-QUIT_GROUP_TYPE】

/**
* 请求发送的协议是通用的请求协议【GroupCommonRspMsg】
*/

//【退出帮派的响应协议-QUIT_GROUP_TYPE】

/**
* 回应的消息是通用的响应协议【GroupCommonRspMsg】
*/

//START-----------------------踢出帮派的功能协议

//【踢出帮派的请求协议-KICK_MEMBER_TYPE】
message KickMemberReqMsg{
	required string memberId = 1;//请求踢出帮派的成员Id
}

//【提出帮派的响应协议-KICK_MEMBER_TYPE】
message KickMemberRspMsg{
	required string memberId = 1;//已经踢出帮派的成员的Id
}

//START-----------------------解散帮派的功能协议

//【解散帮派的请求协议-DISMISS_THE_GROUP_TYPE】
/**发送通用请求消息*/

//【解散帮派的响应协议-DISMISS_THE_GROUP_TYPE】
/**接收通用响应消息*/

//START-----------------------取消解散帮派的功能协议

//【解散帮派的请求协议-CANCEL_DISMISS_THE_GROUP_TYPE】
/**发送通用请求消息*/

//【解散帮派的响应协议-CANCEL_DISMISS_THE_GROUP_TYPE】
/**接收通用响应消息*/

//START-----------------------推荐帮派的功能协议

//【排行榜推荐的请求协议-GROUP_RECOMMENT_TYPE】
message GroupRecommentReqMsg{
	required GroupRecommentType recommentType = 1;//推荐帮派类型
}

//【排行榜推荐的响应协议-GROUP_RECOMMENT_TYPE】
message GroupRecommentRspMsg{
	repeated GroupSimpleInfo groupSimpleInfo = 1;//帮派的信息
}

//START-----------------------获取帮派申请列表的功能协议

//【获取帮派申请列表的请求协议-GET_APPLY_MEMBER_LIST_TYPE】
/**发送通用的请求消息*/

//【获取帮派申请列表的响应协议-GET_APPLY_MEMBER_LIST_TYPE】
message GetGroupApplyMemberListRspMsg{
	repeated ApplyMemberInfo applyMemberInfo = 1;//请求的成员列表
}

//START-----------------------检查个人是否有帮派的功能协议

//【检查个人是否有帮派的请求协议-CHECK_GROUP_DATA_TYPE】
/**发送通用的请求消息*/

//【检查个人是否有帮派的响应协议-CHECK_GROUP_DATA_TYPE】
message CheckGroupDataRspMsg{
	optional string groupId = 1;//帮派的Id，如果发回的消息是null或者没有就说明没有帮派
}

//START-----------------------打开研发帮派技能界面的功能协议

//【打开技能研发帮派技能界面的请求协议-OPEN_RESEARCH_SKILL_VIEW_TYPE】
message OpenResearchSkillViewReqMsg{
	required GroupSkillType skillType = 1;//请求打开研发技能的界面
}

//【打开技能研发帮派技能界面的响应协议-OPEN_RESEARCH_SKILL_VIEW_TYPE】
message OpenResearchSkillViewRspMsg{
	required GroupSkillType skillType = 1;//请求打开研发技能的界面
}

//START-----------------------打开学习帮派技能界面的功能协议

//【打开技能学习帮派技能界面的请求协议-OPEN_STUDY_SKILL_VIEW_TYPE】
message OpenStudySkillViewReqMsg{
	required GroupSkillType skillType = 1;//请求打开研发技能的界面
}

//【打开技能学习帮派技能界面的响应协议-OPEN_STUDY_SKILL_VIEW_TYPE】
message OpenStudySkillViewRspMsg{
	required GroupSkillType skillType = 1;//请求打开研发技能的界面
}

///////////////////////////////////////////////////通用收发协议区

//【帮派的通用请求消息】
message GroupCommonReqMsg{
	required RequestType reqType = 1;//请求功能协议类型
	optional bytes reqBody = 2;//请求消息的内容
}

//【帮派的通用响应消息】
message GroupCommonRspMsg{
	required RequestType reqType = 1;//回应的功能协议类型
	required bool isSuccess = 2;//是否成功处理
	optional string tipMsg = 3;//提示消息，可以是成功，也可以是失败的提示消息
	optional bytes rspBody = 4;//对应功能协议的应答内容
}