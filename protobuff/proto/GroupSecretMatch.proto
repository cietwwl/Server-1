syntax = "proto2";
option java_package = "com.rwproto";
option java_outer_classname = "GroupSecretMatchProto";
import "GroupSecret.proto";
package groupSecret;


//匹配到的秘境状态
enum MatchSecretState{
	NON_BATTLE = 1;//未开战
	IN_BATTLE = 2;//战斗中
	IN_ROB_PROTECT = 3;//掠夺保护中
	IN_MAX_ROB_COUNT = 4;//已经掠夺到了上限
}

//请求的类型
enum MatchRequestType{
	SEARCHING_ENEMY = 1;//搜索敌人
	ATTACK_ENEMY_START = 2;//攻击敌人
	ATTACK_ENEMY_END = 3;//通知战斗结果
	GET_REWARD = 4;//获取奖励
}

//参与战斗的角色的剩余血量能量信息
message HeroLeftInfo{
	required string id = 1;//英雄的Id
	required int32 leftLife = 2;//剩余的血量
	required int32 leftEnergy = 3;//剩余的能量
}

//请求攻击敌人的消息
message AttackEnemyStartReqMsg{
	required GroupSecretIndex index = 1;//挑战那个矿点的敌人
	repeated string heroList = 2;//请求参与战斗的英雄信息
}

//请求攻击敌人的回应消息
message AttackEnemyStartRspMsg{
	required string armyInfo = 1;//敌人的ArmyInfo信息
}

//请求战斗结束的消息，告知服务器剩余阵容时间
message AttackEnemyEndReqMsg{
	required GroupSecretIndex index = 1;//结束的时候打的是那一波
	repeated HeroLeftInfo myLeft = 2;//己方阵容中剩余的血量
	repeated HeroLeftInfo enemyLeft = 3;//敌人剩余的血量信息
}

message GroupSecretMatchCommonReqMsg{
	required MatchRequestType reqType = 1;//请求类型
	optional string version = 2;//客户端的数据版本<暂时不需要这个，可以忽略>
	optional AttackEnemyStartReqMsg attackStartReq = 3;//攻打敌人开始请求
	optional AttackEnemyEndReqMsg attackEndReq = 4;//结束攻打的时候，通知服务器
}

message GroupSecretMatchCommonRspMsg{
	required MatchRequestType reqType = 1;//请求类型
	required bool isSuccess = 2;//是否成功
	optional string tipMsg = 3;//提示消息
	optional AttackEnemyStartRspMsg attackStartRsp = 4;//攻击开始回应消息
	
}