syntax = "proto2";
option java_package = "com.rwproto";
option java_outer_classname = "GrouFightOnlineProto";

package groupFightOnline;

enum GFRequestType{
	GET_RESOURCE_INFO = 1;	//获取资源点信息
	GROUP_BIDDING = 2;	//帮派竞标
	PERSONAL_BIDDING = 3; //个人压标
	MODIFY_SELF_DEFENDER = 4; //备战阶段，修改个人的防守队伍
	GET_ENIMY_DEFENDER = 5;	//获取挑战对手
	CHANGE_ENIMY_DEFENDER = 6; //切换挑战对手
	START_FIGHT = 7;	//开始战斗
	INFORM_FIGHT_RESULT = 8;	//提交战斗结果
	GET_GROUP_BID_RANK = 9;	//获取帮派竞标排行
	GET_KILL_RANK = 10;	//获取杀敌数排行榜
	GET_HURT_RANK = 11;	//获取伤害排行榜
	GET_ALL_RANK_IN_GROUP = 12;	//请求四大帮派内部排行和总值数据
	GET_DEFENDER_TEAMS = 13;	//获取某页的防守队伍的简要信息
	VIEW_DEFENDER_TEAM = 14;	//获取指定一个队伍的详细信息
	GET_FIGHT_RECORD = 15;		//获取战斗记录
	GET_FIGHT_OVER_REWARD = 16;		//获取帮战结束后产生的各类奖励（包括获胜者的每日奖励，失败奖励，胜利奖励）
}

enum GFResultType {
	SUCCESS = 1; //成功
	NOT_IN_OPEN_TIME = 2;	//不在合法时间内（包括各阶段内的各种请求）
	BID_UNREACH_LEAST_COUNT = 3; //竞标数量未达到最低要求
	BID_UNREACH_LEAST_LEVEL = 4; //竞标数量需要超过某个排名（目前是第四名），但是没超过
	BID_UNREACH_GROUP_LEVEL = 5; //竞标要求的帮派等级未达到
	COST_UNENOUGH = 6; //竞标要花费的令牌数不够（或者个人竞标要求的资源不够，以及切换对手的花费不够：要消耗的资源不够）
	BID_WITHOUT_AUTHORITY = 7;	//没权限竞标（也包括最终入选的四个公会成员没资格压标）
	CANNOT_BID_IN_TWO = 8;  //不能参与两个及以上的资源点竞标和占领
	BID_NEED_VIP = 9;	//个人压标要求的vip等级不够
	BID_CANNOT_LOWER = 10;  //个人压标不能降低倍率
	DEFENDER_COUNT_MAX = 11; //防守队伍设置数量达到上限
	CANNOT_FIND_PROP_DEFENDER = 12;	//目前没有可以挑战的人（都被锁定或被挑战）
	NO_DEFENDER = 13;	//无防守队伍，已经战败
	ONLY_PLAYER = 14;	//只剩主角时不能挑战，防守队伍不能只设置主角
	OVER_TIME = 15;		//超时，选择对手后，进入战斗时间超时；或者战斗时间超时
	REWARD_NOT_EXIST = 16;	//要领取的奖励不存在
	DATA_ERROR = 17; //数据异常
}

message GroupFightOnlineReqMsg{
	required GFRequestType reqType = 1; //请求功能协议类型
	optional int32 bidCount = 2; //帮派竞标令牌数量
	optional int32 selfBidRate = 3; //个人选择的压标倍率
	repeated string heroID = 4; //个人调整的防守队伍信息（List<string> heroID）不用包括主角
	optional int32 page = 5;	//请求查看的防守队伍的页面
	optional string viewTeamGroupID = 6;	//要查看的队伍（或页面）所属的公会ID
	optional string viewTeamID = 7;	//要查看详情的队伍ID
	optional string rewardID = 8;	//要获取的奖励ID
	optional int32 resourceID = 9; //请求的资源点ID
	optional string groupID = 10;  //请求挑战的公会id(请求查看防守队伍的公会和换挑战队伍的公会id)
	optional string fightResult = 11; //战斗结果：GFightResult
	optional string clientVersion = 12; //客户端当前数据的版本（对应结构GFightDataVersion）
}

message GroupFightOnlineRspMsg{
	required GFRequestType reqType = 1; //回应的功能协议类型
	required GFResultType rstType = 2; //是否成功处理
	optional int64 systemTime = 3;	//当前系统时间
	repeated string gfResourceInfo = 4;	//各资源点对应的占有信息
	optional string enimyDefenderDetails = 5; //获取对手的详细信息（包括获取和切换对手，查看单个队伍的详细信息）
	repeated string rankData = 6;	//帮派竞标排行,杀敌排行，伤害排行和帮派内部排行（帮派内部排行：每个字符串对应repeated kill;repeated hurt;int32 total;）
	repeated string defendArmySimpleLeader = 7;	//防守队伍简要信息
	optional int32 totalPage = 8;	//防守队伍的总页数
	optional int32 currentPage = 9;	//防守队伍的总页数
	repeated string fightRecord = 10; //战斗记录
	repeated string gfRewardInfo = 11;	//可以领取的奖励
	optional string serverVersion = 12;	//服务端当前数据的版本（对应结构GFightDataVersion）
}
