// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RedPoint.proto

package com.rwproto;

public final class RedPointProtos {
  private RedPointProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RedPointPushMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .DisplayRedPoint allRedPoints = 1;
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    boolean hasAllRedPoints();
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    com.rwproto.RedPointProtos.DisplayRedPoint getAllRedPoints();
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    com.rwproto.RedPointProtos.DisplayRedPointOrBuilder getAllRedPointsOrBuilder();

    // optional .RedPointModification modification = 2;
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    boolean hasModification();
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    com.rwproto.RedPointProtos.RedPointModification getModification();
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    com.rwproto.RedPointProtos.RedPointModificationOrBuilder getModificationOrBuilder();
  }
  /**
   * Protobuf type {@code RedPointPushMsg}
   */
  public static final class RedPointPushMsg extends
      com.google.protobuf.GeneratedMessage
      implements RedPointPushMsgOrBuilder {
    // Use RedPointPushMsg.newBuilder() to construct.
    private RedPointPushMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RedPointPushMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RedPointPushMsg defaultInstance;
    public static RedPointPushMsg getDefaultInstance() {
      return defaultInstance;
    }

    public RedPointPushMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RedPointPushMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.rwproto.RedPointProtos.DisplayRedPoint.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = allRedPoints_.toBuilder();
              }
              allRedPoints_ = input.readMessage(com.rwproto.RedPointProtos.DisplayRedPoint.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(allRedPoints_);
                allRedPoints_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.rwproto.RedPointProtos.RedPointModification.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = modification_.toBuilder();
              }
              modification_ = input.readMessage(com.rwproto.RedPointProtos.RedPointModification.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modification_);
                modification_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.RedPointProtos.internal_static_RedPointPushMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.RedPointProtos.internal_static_RedPointPushMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.RedPointProtos.RedPointPushMsg.class, com.rwproto.RedPointProtos.RedPointPushMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<RedPointPushMsg> PARSER =
        new com.google.protobuf.AbstractParser<RedPointPushMsg>() {
      public RedPointPushMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RedPointPushMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RedPointPushMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .DisplayRedPoint allRedPoints = 1;
    public static final int ALLREDPOINTS_FIELD_NUMBER = 1;
    private com.rwproto.RedPointProtos.DisplayRedPoint allRedPoints_;
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    public boolean hasAllRedPoints() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    public com.rwproto.RedPointProtos.DisplayRedPoint getAllRedPoints() {
      return allRedPoints_;
    }
    /**
     * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
     *
     * <pre>
     *两个optional最少存在一个
     * </pre>
     */
    public com.rwproto.RedPointProtos.DisplayRedPointOrBuilder getAllRedPointsOrBuilder() {
      return allRedPoints_;
    }

    // optional .RedPointModification modification = 2;
    public static final int MODIFICATION_FIELD_NUMBER = 2;
    private com.rwproto.RedPointProtos.RedPointModification modification_;
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    public boolean hasModification() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    public com.rwproto.RedPointProtos.RedPointModification getModification() {
      return modification_;
    }
    /**
     * <code>optional .RedPointModification modification = 2;</code>
     */
    public com.rwproto.RedPointProtos.RedPointModificationOrBuilder getModificationOrBuilder() {
      return modification_;
    }

    private void initFields() {
      allRedPoints_ = com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance();
      modification_ = com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasAllRedPoints()) {
        if (!getAllRedPoints().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasModification()) {
        if (!getModification().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, allRedPoints_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, modification_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, allRedPoints_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, modification_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointPushMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.RedPointProtos.RedPointPushMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedPointPushMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.RedPointProtos.RedPointPushMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.RedPointProtos.internal_static_RedPointPushMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.RedPointProtos.internal_static_RedPointPushMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.RedPointProtos.RedPointPushMsg.class, com.rwproto.RedPointProtos.RedPointPushMsg.Builder.class);
      }

      // Construct using com.rwproto.RedPointProtos.RedPointPushMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllRedPointsFieldBuilder();
          getModificationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (allRedPointsBuilder_ == null) {
          allRedPoints_ = com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance();
        } else {
          allRedPointsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (modificationBuilder_ == null) {
          modification_ = com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance();
        } else {
          modificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.RedPointProtos.internal_static_RedPointPushMsg_descriptor;
      }

      public com.rwproto.RedPointProtos.RedPointPushMsg getDefaultInstanceForType() {
        return com.rwproto.RedPointProtos.RedPointPushMsg.getDefaultInstance();
      }

      public com.rwproto.RedPointProtos.RedPointPushMsg build() {
        com.rwproto.RedPointProtos.RedPointPushMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.RedPointProtos.RedPointPushMsg buildPartial() {
        com.rwproto.RedPointProtos.RedPointPushMsg result = new com.rwproto.RedPointProtos.RedPointPushMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (allRedPointsBuilder_ == null) {
          result.allRedPoints_ = allRedPoints_;
        } else {
          result.allRedPoints_ = allRedPointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (modificationBuilder_ == null) {
          result.modification_ = modification_;
        } else {
          result.modification_ = modificationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.RedPointProtos.RedPointPushMsg) {
          return mergeFrom((com.rwproto.RedPointProtos.RedPointPushMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.RedPointProtos.RedPointPushMsg other) {
        if (other == com.rwproto.RedPointProtos.RedPointPushMsg.getDefaultInstance()) return this;
        if (other.hasAllRedPoints()) {
          mergeAllRedPoints(other.getAllRedPoints());
        }
        if (other.hasModification()) {
          mergeModification(other.getModification());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasAllRedPoints()) {
          if (!getAllRedPoints().isInitialized()) {
            
            return false;
          }
        }
        if (hasModification()) {
          if (!getModification().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.RedPointProtos.RedPointPushMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.RedPointProtos.RedPointPushMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .DisplayRedPoint allRedPoints = 1;
      private com.rwproto.RedPointProtos.DisplayRedPoint allRedPoints_ = com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.RedPointProtos.DisplayRedPoint, com.rwproto.RedPointProtos.DisplayRedPoint.Builder, com.rwproto.RedPointProtos.DisplayRedPointOrBuilder> allRedPointsBuilder_;
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public boolean hasAllRedPoints() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public com.rwproto.RedPointProtos.DisplayRedPoint getAllRedPoints() {
        if (allRedPointsBuilder_ == null) {
          return allRedPoints_;
        } else {
          return allRedPointsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public Builder setAllRedPoints(com.rwproto.RedPointProtos.DisplayRedPoint value) {
        if (allRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          allRedPoints_ = value;
          onChanged();
        } else {
          allRedPointsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public Builder setAllRedPoints(
          com.rwproto.RedPointProtos.DisplayRedPoint.Builder builderForValue) {
        if (allRedPointsBuilder_ == null) {
          allRedPoints_ = builderForValue.build();
          onChanged();
        } else {
          allRedPointsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public Builder mergeAllRedPoints(com.rwproto.RedPointProtos.DisplayRedPoint value) {
        if (allRedPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              allRedPoints_ != com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance()) {
            allRedPoints_ =
              com.rwproto.RedPointProtos.DisplayRedPoint.newBuilder(allRedPoints_).mergeFrom(value).buildPartial();
          } else {
            allRedPoints_ = value;
          }
          onChanged();
        } else {
          allRedPointsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public Builder clearAllRedPoints() {
        if (allRedPointsBuilder_ == null) {
          allRedPoints_ = com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance();
          onChanged();
        } else {
          allRedPointsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public com.rwproto.RedPointProtos.DisplayRedPoint.Builder getAllRedPointsBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getAllRedPointsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      public com.rwproto.RedPointProtos.DisplayRedPointOrBuilder getAllRedPointsOrBuilder() {
        if (allRedPointsBuilder_ != null) {
          return allRedPointsBuilder_.getMessageOrBuilder();
        } else {
          return allRedPoints_;
        }
      }
      /**
       * <code>optional .DisplayRedPoint allRedPoints = 1;</code>
       *
       * <pre>
       *两个optional最少存在一个
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.RedPointProtos.DisplayRedPoint, com.rwproto.RedPointProtos.DisplayRedPoint.Builder, com.rwproto.RedPointProtos.DisplayRedPointOrBuilder> 
          getAllRedPointsFieldBuilder() {
        if (allRedPointsBuilder_ == null) {
          allRedPointsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.RedPointProtos.DisplayRedPoint, com.rwproto.RedPointProtos.DisplayRedPoint.Builder, com.rwproto.RedPointProtos.DisplayRedPointOrBuilder>(
                  allRedPoints_,
                  getParentForChildren(),
                  isClean());
          allRedPoints_ = null;
        }
        return allRedPointsBuilder_;
      }

      // optional .RedPointModification modification = 2;
      private com.rwproto.RedPointProtos.RedPointModification modification_ = com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.RedPointProtos.RedPointModification, com.rwproto.RedPointProtos.RedPointModification.Builder, com.rwproto.RedPointProtos.RedPointModificationOrBuilder> modificationBuilder_;
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public boolean hasModification() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public com.rwproto.RedPointProtos.RedPointModification getModification() {
        if (modificationBuilder_ == null) {
          return modification_;
        } else {
          return modificationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public Builder setModification(com.rwproto.RedPointProtos.RedPointModification value) {
        if (modificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modification_ = value;
          onChanged();
        } else {
          modificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public Builder setModification(
          com.rwproto.RedPointProtos.RedPointModification.Builder builderForValue) {
        if (modificationBuilder_ == null) {
          modification_ = builderForValue.build();
          onChanged();
        } else {
          modificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public Builder mergeModification(com.rwproto.RedPointProtos.RedPointModification value) {
        if (modificationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              modification_ != com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance()) {
            modification_ =
              com.rwproto.RedPointProtos.RedPointModification.newBuilder(modification_).mergeFrom(value).buildPartial();
          } else {
            modification_ = value;
          }
          onChanged();
        } else {
          modificationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public Builder clearModification() {
        if (modificationBuilder_ == null) {
          modification_ = com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance();
          onChanged();
        } else {
          modificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public com.rwproto.RedPointProtos.RedPointModification.Builder getModificationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getModificationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      public com.rwproto.RedPointProtos.RedPointModificationOrBuilder getModificationOrBuilder() {
        if (modificationBuilder_ != null) {
          return modificationBuilder_.getMessageOrBuilder();
        } else {
          return modification_;
        }
      }
      /**
       * <code>optional .RedPointModification modification = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.RedPointProtos.RedPointModification, com.rwproto.RedPointProtos.RedPointModification.Builder, com.rwproto.RedPointProtos.RedPointModificationOrBuilder> 
          getModificationFieldBuilder() {
        if (modificationBuilder_ == null) {
          modificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.RedPointProtos.RedPointModification, com.rwproto.RedPointProtos.RedPointModification.Builder, com.rwproto.RedPointProtos.RedPointModificationOrBuilder>(
                  modification_,
                  getParentForChildren(),
                  isClean());
          modification_ = null;
        }
        return modificationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:RedPointPushMsg)
    }

    static {
      defaultInstance = new RedPointPushMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RedPointPushMsg)
  }

  public interface DisplayRedPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .RedPoint redPoints = 1;
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    java.util.List<com.rwproto.RedPointProtos.RedPoint> 
        getRedPointsList();
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPoint getRedPoints(int index);
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    int getRedPointsCount();
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getRedPointsOrBuilderList();
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPointOrBuilder getRedPointsOrBuilder(
        int index);

    // required int32 version = 2;
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code DisplayRedPoint}
   *
   * <pre>
   *所有需要显示的红点
   * </pre>
   */
  public static final class DisplayRedPoint extends
      com.google.protobuf.GeneratedMessage
      implements DisplayRedPointOrBuilder {
    // Use DisplayRedPoint.newBuilder() to construct.
    private DisplayRedPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DisplayRedPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DisplayRedPoint defaultInstance;
    public static DisplayRedPoint getDefaultInstance() {
      return defaultInstance;
    }

    public DisplayRedPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DisplayRedPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                redPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              redPoints_.add(input.readMessage(com.rwproto.RedPointProtos.RedPoint.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.RedPointProtos.internal_static_DisplayRedPoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.RedPointProtos.internal_static_DisplayRedPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.RedPointProtos.DisplayRedPoint.class, com.rwproto.RedPointProtos.DisplayRedPoint.Builder.class);
    }

    public static com.google.protobuf.Parser<DisplayRedPoint> PARSER =
        new com.google.protobuf.AbstractParser<DisplayRedPoint>() {
      public DisplayRedPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DisplayRedPoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DisplayRedPoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .RedPoint redPoints = 1;
    public static final int REDPOINTS_FIELD_NUMBER = 1;
    private java.util.List<com.rwproto.RedPointProtos.RedPoint> redPoints_;
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    public java.util.List<com.rwproto.RedPointProtos.RedPoint> getRedPointsList() {
      return redPoints_;
    }
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getRedPointsOrBuilderList() {
      return redPoints_;
    }
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    public int getRedPointsCount() {
      return redPoints_.size();
    }
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPoint getRedPoints(int index) {
      return redPoints_.get(index);
    }
    /**
     * <code>repeated .RedPoint redPoints = 1;</code>
     *
     * <pre>
     *红点集合
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPointOrBuilder getRedPointsOrBuilder(
        int index) {
      return redPoints_.get(index);
    }

    // required int32 version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 2;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    private void initFields() {
      redPoints_ = java.util.Collections.emptyList();
      version_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRedPointsCount(); i++) {
        if (!getRedPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < redPoints_.size(); i++) {
        output.writeMessage(1, redPoints_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < redPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, redPoints_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.DisplayRedPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.RedPointProtos.DisplayRedPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DisplayRedPoint}
     *
     * <pre>
     *所有需要显示的红点
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.RedPointProtos.DisplayRedPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.RedPointProtos.internal_static_DisplayRedPoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.RedPointProtos.internal_static_DisplayRedPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.RedPointProtos.DisplayRedPoint.class, com.rwproto.RedPointProtos.DisplayRedPoint.Builder.class);
      }

      // Construct using com.rwproto.RedPointProtos.DisplayRedPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRedPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (redPointsBuilder_ == null) {
          redPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          redPointsBuilder_.clear();
        }
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.RedPointProtos.internal_static_DisplayRedPoint_descriptor;
      }

      public com.rwproto.RedPointProtos.DisplayRedPoint getDefaultInstanceForType() {
        return com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance();
      }

      public com.rwproto.RedPointProtos.DisplayRedPoint build() {
        com.rwproto.RedPointProtos.DisplayRedPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.RedPointProtos.DisplayRedPoint buildPartial() {
        com.rwproto.RedPointProtos.DisplayRedPoint result = new com.rwproto.RedPointProtos.DisplayRedPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (redPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            redPoints_ = java.util.Collections.unmodifiableList(redPoints_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.redPoints_ = redPoints_;
        } else {
          result.redPoints_ = redPointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.RedPointProtos.DisplayRedPoint) {
          return mergeFrom((com.rwproto.RedPointProtos.DisplayRedPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.RedPointProtos.DisplayRedPoint other) {
        if (other == com.rwproto.RedPointProtos.DisplayRedPoint.getDefaultInstance()) return this;
        if (redPointsBuilder_ == null) {
          if (!other.redPoints_.isEmpty()) {
            if (redPoints_.isEmpty()) {
              redPoints_ = other.redPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRedPointsIsMutable();
              redPoints_.addAll(other.redPoints_);
            }
            onChanged();
          }
        } else {
          if (!other.redPoints_.isEmpty()) {
            if (redPointsBuilder_.isEmpty()) {
              redPointsBuilder_.dispose();
              redPointsBuilder_ = null;
              redPoints_ = other.redPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
              redPointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRedPointsFieldBuilder() : null;
            } else {
              redPointsBuilder_.addAllMessages(other.redPoints_);
            }
          }
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getRedPointsCount(); i++) {
          if (!getRedPoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.RedPointProtos.DisplayRedPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.RedPointProtos.DisplayRedPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .RedPoint redPoints = 1;
      private java.util.List<com.rwproto.RedPointProtos.RedPoint> redPoints_ =
        java.util.Collections.emptyList();
      private void ensureRedPointsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          redPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>(redPoints_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> redPointsBuilder_;

      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint> getRedPointsList() {
        if (redPointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(redPoints_);
        } else {
          return redPointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public int getRedPointsCount() {
        if (redPointsBuilder_ == null) {
          return redPoints_.size();
        } else {
          return redPointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint getRedPoints(int index) {
        if (redPointsBuilder_ == null) {
          return redPoints_.get(index);
        } else {
          return redPointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder setRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (redPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedPointsIsMutable();
          redPoints_.set(index, value);
          onChanged();
        } else {
          redPointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder setRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (redPointsBuilder_ == null) {
          ensureRedPointsIsMutable();
          redPoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          redPointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder addRedPoints(com.rwproto.RedPointProtos.RedPoint value) {
        if (redPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedPointsIsMutable();
          redPoints_.add(value);
          onChanged();
        } else {
          redPointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder addRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (redPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRedPointsIsMutable();
          redPoints_.add(index, value);
          onChanged();
        } else {
          redPointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder addRedPoints(
          com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (redPointsBuilder_ == null) {
          ensureRedPointsIsMutable();
          redPoints_.add(builderForValue.build());
          onChanged();
        } else {
          redPointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder addRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (redPointsBuilder_ == null) {
          ensureRedPointsIsMutable();
          redPoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          redPointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder addAllRedPoints(
          java.lang.Iterable<? extends com.rwproto.RedPointProtos.RedPoint> values) {
        if (redPointsBuilder_ == null) {
          ensureRedPointsIsMutable();
          super.addAll(values, redPoints_);
          onChanged();
        } else {
          redPointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder clearRedPoints() {
        if (redPointsBuilder_ == null) {
          redPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          redPointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public Builder removeRedPoints(int index) {
        if (redPointsBuilder_ == null) {
          ensureRedPointsIsMutable();
          redPoints_.remove(index);
          onChanged();
        } else {
          redPointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder getRedPointsBuilder(
          int index) {
        return getRedPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPointOrBuilder getRedPointsOrBuilder(
          int index) {
        if (redPointsBuilder_ == null) {
          return redPoints_.get(index);  } else {
          return redPointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
           getRedPointsOrBuilderList() {
        if (redPointsBuilder_ != null) {
          return redPointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(redPoints_);
        }
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addRedPointsBuilder() {
        return getRedPointsFieldBuilder().addBuilder(
            com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addRedPointsBuilder(
          int index) {
        return getRedPointsFieldBuilder().addBuilder(
            index, com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint redPoints = 1;</code>
       *
       * <pre>
       *红点集合
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint.Builder> 
           getRedPointsBuilderList() {
        return getRedPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> 
          getRedPointsFieldBuilder() {
        if (redPointsBuilder_ == null) {
          redPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder>(
                  redPoints_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          redPoints_ = null;
        }
        return redPointsBuilder_;
      }

      // required int32 version = 2;
      private int version_ ;
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 2;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DisplayRedPoint)
    }

    static {
      defaultInstance = new DisplayRedPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DisplayRedPoint)
  }

  public interface RedPointModificationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .RedPoint newlyAddedRedPoints = 1;
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    java.util.List<com.rwproto.RedPointProtos.RedPoint> 
        getNewlyAddedRedPointsList();
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPoint getNewlyAddedRedPoints(int index);
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    int getNewlyAddedRedPointsCount();
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getNewlyAddedRedPointsOrBuilderList();
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPointOrBuilder getNewlyAddedRedPointsOrBuilder(
        int index);

    // repeated .RedPoint deletedRedPoints = 2;
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    java.util.List<com.rwproto.RedPointProtos.RedPoint> 
        getDeletedRedPointsList();
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPoint getDeletedRedPoints(int index);
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    int getDeletedRedPointsCount();
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getDeletedRedPointsOrBuilderList();
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    com.rwproto.RedPointProtos.RedPointOrBuilder getDeletedRedPointsOrBuilder(
        int index);

    // required int32 version = 3;
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code RedPointModification}
   */
  public static final class RedPointModification extends
      com.google.protobuf.GeneratedMessage
      implements RedPointModificationOrBuilder {
    // Use RedPointModification.newBuilder() to construct.
    private RedPointModification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RedPointModification(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RedPointModification defaultInstance;
    public static RedPointModification getDefaultInstance() {
      return defaultInstance;
    }

    public RedPointModification getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RedPointModification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                newlyAddedRedPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>();
                mutable_bitField0_ |= 0x00000001;
              }
              newlyAddedRedPoints_.add(input.readMessage(com.rwproto.RedPointProtos.RedPoint.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                deletedRedPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>();
                mutable_bitField0_ |= 0x00000002;
              }
              deletedRedPoints_.add(input.readMessage(com.rwproto.RedPointProtos.RedPoint.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              version_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          newlyAddedRedPoints_ = java.util.Collections.unmodifiableList(newlyAddedRedPoints_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          deletedRedPoints_ = java.util.Collections.unmodifiableList(deletedRedPoints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.RedPointProtos.internal_static_RedPointModification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.RedPointProtos.internal_static_RedPointModification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.RedPointProtos.RedPointModification.class, com.rwproto.RedPointProtos.RedPointModification.Builder.class);
    }

    public static com.google.protobuf.Parser<RedPointModification> PARSER =
        new com.google.protobuf.AbstractParser<RedPointModification>() {
      public RedPointModification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RedPointModification(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RedPointModification> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .RedPoint newlyAddedRedPoints = 1;
    public static final int NEWLYADDEDREDPOINTS_FIELD_NUMBER = 1;
    private java.util.List<com.rwproto.RedPointProtos.RedPoint> newlyAddedRedPoints_;
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    public java.util.List<com.rwproto.RedPointProtos.RedPoint> getNewlyAddedRedPointsList() {
      return newlyAddedRedPoints_;
    }
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getNewlyAddedRedPointsOrBuilderList() {
      return newlyAddedRedPoints_;
    }
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    public int getNewlyAddedRedPointsCount() {
      return newlyAddedRedPoints_.size();
    }
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPoint getNewlyAddedRedPoints(int index) {
      return newlyAddedRedPoints_.get(index);
    }
    /**
     * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
     *
     * <pre>
     *新增加的红点
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPointOrBuilder getNewlyAddedRedPointsOrBuilder(
        int index) {
      return newlyAddedRedPoints_.get(index);
    }

    // repeated .RedPoint deletedRedPoints = 2;
    public static final int DELETEDREDPOINTS_FIELD_NUMBER = 2;
    private java.util.List<com.rwproto.RedPointProtos.RedPoint> deletedRedPoints_;
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    public java.util.List<com.rwproto.RedPointProtos.RedPoint> getDeletedRedPointsList() {
      return deletedRedPoints_;
    }
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
        getDeletedRedPointsOrBuilderList() {
      return deletedRedPoints_;
    }
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    public int getDeletedRedPointsCount() {
      return deletedRedPoints_.size();
    }
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPoint getDeletedRedPoints(int index) {
      return deletedRedPoints_.get(index);
    }
    /**
     * <code>repeated .RedPoint deletedRedPoints = 2;</code>
     *
     * <pre>
     *删除的红点
     * </pre>
     */
    public com.rwproto.RedPointProtos.RedPointOrBuilder getDeletedRedPointsOrBuilder(
        int index) {
      return deletedRedPoints_.get(index);
    }

    // required int32 version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private int version_;
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 version = 3;</code>
     *
     * <pre>
     *当前红点版本号
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    private void initFields() {
      newlyAddedRedPoints_ = java.util.Collections.emptyList();
      deletedRedPoints_ = java.util.Collections.emptyList();
      version_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getNewlyAddedRedPointsCount(); i++) {
        if (!getNewlyAddedRedPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDeletedRedPointsCount(); i++) {
        if (!getDeletedRedPoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < newlyAddedRedPoints_.size(); i++) {
        output.writeMessage(1, newlyAddedRedPoints_.get(i));
      }
      for (int i = 0; i < deletedRedPoints_.size(); i++) {
        output.writeMessage(2, deletedRedPoints_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < newlyAddedRedPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newlyAddedRedPoints_.get(i));
      }
      for (int i = 0; i < deletedRedPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, deletedRedPoints_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPointModification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.RedPointProtos.RedPointModification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedPointModification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.RedPointProtos.RedPointModificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.RedPointProtos.internal_static_RedPointModification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.RedPointProtos.internal_static_RedPointModification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.RedPointProtos.RedPointModification.class, com.rwproto.RedPointProtos.RedPointModification.Builder.class);
      }

      // Construct using com.rwproto.RedPointProtos.RedPointModification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewlyAddedRedPointsFieldBuilder();
          getDeletedRedPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (newlyAddedRedPointsBuilder_ == null) {
          newlyAddedRedPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          newlyAddedRedPointsBuilder_.clear();
        }
        if (deletedRedPointsBuilder_ == null) {
          deletedRedPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          deletedRedPointsBuilder_.clear();
        }
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.RedPointProtos.internal_static_RedPointModification_descriptor;
      }

      public com.rwproto.RedPointProtos.RedPointModification getDefaultInstanceForType() {
        return com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance();
      }

      public com.rwproto.RedPointProtos.RedPointModification build() {
        com.rwproto.RedPointProtos.RedPointModification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.RedPointProtos.RedPointModification buildPartial() {
        com.rwproto.RedPointProtos.RedPointModification result = new com.rwproto.RedPointProtos.RedPointModification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (newlyAddedRedPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            newlyAddedRedPoints_ = java.util.Collections.unmodifiableList(newlyAddedRedPoints_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.newlyAddedRedPoints_ = newlyAddedRedPoints_;
        } else {
          result.newlyAddedRedPoints_ = newlyAddedRedPointsBuilder_.build();
        }
        if (deletedRedPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            deletedRedPoints_ = java.util.Collections.unmodifiableList(deletedRedPoints_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.deletedRedPoints_ = deletedRedPoints_;
        } else {
          result.deletedRedPoints_ = deletedRedPointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.RedPointProtos.RedPointModification) {
          return mergeFrom((com.rwproto.RedPointProtos.RedPointModification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.RedPointProtos.RedPointModification other) {
        if (other == com.rwproto.RedPointProtos.RedPointModification.getDefaultInstance()) return this;
        if (newlyAddedRedPointsBuilder_ == null) {
          if (!other.newlyAddedRedPoints_.isEmpty()) {
            if (newlyAddedRedPoints_.isEmpty()) {
              newlyAddedRedPoints_ = other.newlyAddedRedPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNewlyAddedRedPointsIsMutable();
              newlyAddedRedPoints_.addAll(other.newlyAddedRedPoints_);
            }
            onChanged();
          }
        } else {
          if (!other.newlyAddedRedPoints_.isEmpty()) {
            if (newlyAddedRedPointsBuilder_.isEmpty()) {
              newlyAddedRedPointsBuilder_.dispose();
              newlyAddedRedPointsBuilder_ = null;
              newlyAddedRedPoints_ = other.newlyAddedRedPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
              newlyAddedRedPointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNewlyAddedRedPointsFieldBuilder() : null;
            } else {
              newlyAddedRedPointsBuilder_.addAllMessages(other.newlyAddedRedPoints_);
            }
          }
        }
        if (deletedRedPointsBuilder_ == null) {
          if (!other.deletedRedPoints_.isEmpty()) {
            if (deletedRedPoints_.isEmpty()) {
              deletedRedPoints_ = other.deletedRedPoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDeletedRedPointsIsMutable();
              deletedRedPoints_.addAll(other.deletedRedPoints_);
            }
            onChanged();
          }
        } else {
          if (!other.deletedRedPoints_.isEmpty()) {
            if (deletedRedPointsBuilder_.isEmpty()) {
              deletedRedPointsBuilder_.dispose();
              deletedRedPointsBuilder_ = null;
              deletedRedPoints_ = other.deletedRedPoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
              deletedRedPointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDeletedRedPointsFieldBuilder() : null;
            } else {
              deletedRedPointsBuilder_.addAllMessages(other.deletedRedPoints_);
            }
          }
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getNewlyAddedRedPointsCount(); i++) {
          if (!getNewlyAddedRedPoints(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDeletedRedPointsCount(); i++) {
          if (!getDeletedRedPoints(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.RedPointProtos.RedPointModification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.RedPointProtos.RedPointModification) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .RedPoint newlyAddedRedPoints = 1;
      private java.util.List<com.rwproto.RedPointProtos.RedPoint> newlyAddedRedPoints_ =
        java.util.Collections.emptyList();
      private void ensureNewlyAddedRedPointsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          newlyAddedRedPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>(newlyAddedRedPoints_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> newlyAddedRedPointsBuilder_;

      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint> getNewlyAddedRedPointsList() {
        if (newlyAddedRedPointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newlyAddedRedPoints_);
        } else {
          return newlyAddedRedPointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public int getNewlyAddedRedPointsCount() {
        if (newlyAddedRedPointsBuilder_ == null) {
          return newlyAddedRedPoints_.size();
        } else {
          return newlyAddedRedPointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint getNewlyAddedRedPoints(int index) {
        if (newlyAddedRedPointsBuilder_ == null) {
          return newlyAddedRedPoints_.get(index);
        } else {
          return newlyAddedRedPointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder setNewlyAddedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (newlyAddedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.set(index, value);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder setNewlyAddedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (newlyAddedRedPointsBuilder_ == null) {
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder addNewlyAddedRedPoints(com.rwproto.RedPointProtos.RedPoint value) {
        if (newlyAddedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.add(value);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder addNewlyAddedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (newlyAddedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.add(index, value);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder addNewlyAddedRedPoints(
          com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (newlyAddedRedPointsBuilder_ == null) {
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.add(builderForValue.build());
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder addNewlyAddedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (newlyAddedRedPointsBuilder_ == null) {
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder addAllNewlyAddedRedPoints(
          java.lang.Iterable<? extends com.rwproto.RedPointProtos.RedPoint> values) {
        if (newlyAddedRedPointsBuilder_ == null) {
          ensureNewlyAddedRedPointsIsMutable();
          super.addAll(values, newlyAddedRedPoints_);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder clearNewlyAddedRedPoints() {
        if (newlyAddedRedPointsBuilder_ == null) {
          newlyAddedRedPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public Builder removeNewlyAddedRedPoints(int index) {
        if (newlyAddedRedPointsBuilder_ == null) {
          ensureNewlyAddedRedPointsIsMutable();
          newlyAddedRedPoints_.remove(index);
          onChanged();
        } else {
          newlyAddedRedPointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder getNewlyAddedRedPointsBuilder(
          int index) {
        return getNewlyAddedRedPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPointOrBuilder getNewlyAddedRedPointsOrBuilder(
          int index) {
        if (newlyAddedRedPointsBuilder_ == null) {
          return newlyAddedRedPoints_.get(index);  } else {
          return newlyAddedRedPointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
           getNewlyAddedRedPointsOrBuilderList() {
        if (newlyAddedRedPointsBuilder_ != null) {
          return newlyAddedRedPointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newlyAddedRedPoints_);
        }
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addNewlyAddedRedPointsBuilder() {
        return getNewlyAddedRedPointsFieldBuilder().addBuilder(
            com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addNewlyAddedRedPointsBuilder(
          int index) {
        return getNewlyAddedRedPointsFieldBuilder().addBuilder(
            index, com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint newlyAddedRedPoints = 1;</code>
       *
       * <pre>
       *新增加的红点
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint.Builder> 
           getNewlyAddedRedPointsBuilderList() {
        return getNewlyAddedRedPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> 
          getNewlyAddedRedPointsFieldBuilder() {
        if (newlyAddedRedPointsBuilder_ == null) {
          newlyAddedRedPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder>(
                  newlyAddedRedPoints_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          newlyAddedRedPoints_ = null;
        }
        return newlyAddedRedPointsBuilder_;
      }

      // repeated .RedPoint deletedRedPoints = 2;
      private java.util.List<com.rwproto.RedPointProtos.RedPoint> deletedRedPoints_ =
        java.util.Collections.emptyList();
      private void ensureDeletedRedPointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          deletedRedPoints_ = new java.util.ArrayList<com.rwproto.RedPointProtos.RedPoint>(deletedRedPoints_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> deletedRedPointsBuilder_;

      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint> getDeletedRedPointsList() {
        if (deletedRedPointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deletedRedPoints_);
        } else {
          return deletedRedPointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public int getDeletedRedPointsCount() {
        if (deletedRedPointsBuilder_ == null) {
          return deletedRedPoints_.size();
        } else {
          return deletedRedPointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint getDeletedRedPoints(int index) {
        if (deletedRedPointsBuilder_ == null) {
          return deletedRedPoints_.get(index);
        } else {
          return deletedRedPointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder setDeletedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (deletedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.set(index, value);
          onChanged();
        } else {
          deletedRedPointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder setDeletedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (deletedRedPointsBuilder_ == null) {
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          deletedRedPointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder addDeletedRedPoints(com.rwproto.RedPointProtos.RedPoint value) {
        if (deletedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.add(value);
          onChanged();
        } else {
          deletedRedPointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder addDeletedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint value) {
        if (deletedRedPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.add(index, value);
          onChanged();
        } else {
          deletedRedPointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder addDeletedRedPoints(
          com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (deletedRedPointsBuilder_ == null) {
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.add(builderForValue.build());
          onChanged();
        } else {
          deletedRedPointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder addDeletedRedPoints(
          int index, com.rwproto.RedPointProtos.RedPoint.Builder builderForValue) {
        if (deletedRedPointsBuilder_ == null) {
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          deletedRedPointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder addAllDeletedRedPoints(
          java.lang.Iterable<? extends com.rwproto.RedPointProtos.RedPoint> values) {
        if (deletedRedPointsBuilder_ == null) {
          ensureDeletedRedPointsIsMutable();
          super.addAll(values, deletedRedPoints_);
          onChanged();
        } else {
          deletedRedPointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder clearDeletedRedPoints() {
        if (deletedRedPointsBuilder_ == null) {
          deletedRedPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          deletedRedPointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public Builder removeDeletedRedPoints(int index) {
        if (deletedRedPointsBuilder_ == null) {
          ensureDeletedRedPointsIsMutable();
          deletedRedPoints_.remove(index);
          onChanged();
        } else {
          deletedRedPointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder getDeletedRedPointsBuilder(
          int index) {
        return getDeletedRedPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPointOrBuilder getDeletedRedPointsOrBuilder(
          int index) {
        if (deletedRedPointsBuilder_ == null) {
          return deletedRedPoints_.get(index);  } else {
          return deletedRedPointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public java.util.List<? extends com.rwproto.RedPointProtos.RedPointOrBuilder> 
           getDeletedRedPointsOrBuilderList() {
        if (deletedRedPointsBuilder_ != null) {
          return deletedRedPointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deletedRedPoints_);
        }
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addDeletedRedPointsBuilder() {
        return getDeletedRedPointsFieldBuilder().addBuilder(
            com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public com.rwproto.RedPointProtos.RedPoint.Builder addDeletedRedPointsBuilder(
          int index) {
        return getDeletedRedPointsFieldBuilder().addBuilder(
            index, com.rwproto.RedPointProtos.RedPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .RedPoint deletedRedPoints = 2;</code>
       *
       * <pre>
       *删除的红点
       * </pre>
       */
      public java.util.List<com.rwproto.RedPointProtos.RedPoint.Builder> 
           getDeletedRedPointsBuilderList() {
        return getDeletedRedPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder> 
          getDeletedRedPointsFieldBuilder() {
        if (deletedRedPointsBuilder_ == null) {
          deletedRedPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.RedPointProtos.RedPoint, com.rwproto.RedPointProtos.RedPoint.Builder, com.rwproto.RedPointProtos.RedPointOrBuilder>(
                  deletedRedPoints_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          deletedRedPoints_ = null;
        }
        return deletedRedPointsBuilder_;
      }

      // required int32 version = 3;
      private int version_ ;
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000004;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 3;</code>
       *
       * <pre>
       *当前红点版本号
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        version_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RedPointModification)
    }

    static {
      defaultInstance = new RedPointModification(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RedPointModification)
  }

  public interface RedPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    int getType();

    // repeated string functionIdList = 2;
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    java.util.List<java.lang.String>
    getFunctionIdListList();
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    int getFunctionIdListCount();
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    java.lang.String getFunctionIdList(int index);
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    com.google.protobuf.ByteString
        getFunctionIdListBytes(int index);
  }
  /**
   * Protobuf type {@code RedPoint}
   */
  public static final class RedPoint extends
      com.google.protobuf.GeneratedMessage
      implements RedPointOrBuilder {
    // Use RedPoint.newBuilder() to construct.
    private RedPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RedPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RedPoint defaultInstance;
    public static RedPoint getDefaultInstance() {
      return defaultInstance;
    }

    public RedPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RedPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                functionIdList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              functionIdList_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          functionIdList_ = new com.google.protobuf.UnmodifiableLazyStringList(functionIdList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.RedPointProtos.internal_static_RedPoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.RedPointProtos.internal_static_RedPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.RedPointProtos.RedPoint.class, com.rwproto.RedPointProtos.RedPoint.Builder.class);
    }

    public static com.google.protobuf.Parser<RedPoint> PARSER =
        new com.google.protobuf.AbstractParser<RedPoint>() {
      public RedPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RedPoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RedPoint> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // repeated string functionIdList = 2;
    public static final int FUNCTIONIDLIST_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList functionIdList_;
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    public java.util.List<java.lang.String>
        getFunctionIdListList() {
      return functionIdList_;
    }
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    public int getFunctionIdListCount() {
      return functionIdList_.size();
    }
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    public java.lang.String getFunctionIdList(int index) {
      return functionIdList_.get(index);
    }
    /**
     * <code>repeated string functionIdList = 2;</code>
     *
     * <pre>
     *功能ID列表，比如武将id列表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFunctionIdListBytes(int index) {
      return functionIdList_.getByteString(index);
    }

    private void initFields() {
      type_ = 0;
      functionIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      for (int i = 0; i < functionIdList_.size(); i++) {
        output.writeBytes(2, functionIdList_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < functionIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(functionIdList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFunctionIdListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.RedPointProtos.RedPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.RedPointProtos.RedPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.RedPointProtos.RedPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.RedPointProtos.internal_static_RedPoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.RedPointProtos.internal_static_RedPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.RedPointProtos.RedPoint.class, com.rwproto.RedPointProtos.RedPoint.Builder.class);
      }

      // Construct using com.rwproto.RedPointProtos.RedPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        functionIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.RedPointProtos.internal_static_RedPoint_descriptor;
      }

      public com.rwproto.RedPointProtos.RedPoint getDefaultInstanceForType() {
        return com.rwproto.RedPointProtos.RedPoint.getDefaultInstance();
      }

      public com.rwproto.RedPointProtos.RedPoint build() {
        com.rwproto.RedPointProtos.RedPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.RedPointProtos.RedPoint buildPartial() {
        com.rwproto.RedPointProtos.RedPoint result = new com.rwproto.RedPointProtos.RedPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          functionIdList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              functionIdList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.functionIdList_ = functionIdList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.RedPointProtos.RedPoint) {
          return mergeFrom((com.rwproto.RedPointProtos.RedPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.RedPointProtos.RedPoint other) {
        if (other == com.rwproto.RedPointProtos.RedPoint.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.functionIdList_.isEmpty()) {
          if (functionIdList_.isEmpty()) {
            functionIdList_ = other.functionIdList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFunctionIdListIsMutable();
            functionIdList_.addAll(other.functionIdList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.RedPointProtos.RedPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.RedPointProtos.RedPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // repeated string functionIdList = 2;
      private com.google.protobuf.LazyStringList functionIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFunctionIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          functionIdList_ = new com.google.protobuf.LazyStringArrayList(functionIdList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public java.util.List<java.lang.String>
          getFunctionIdListList() {
        return java.util.Collections.unmodifiableList(functionIdList_);
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public int getFunctionIdListCount() {
        return functionIdList_.size();
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public java.lang.String getFunctionIdList(int index) {
        return functionIdList_.get(index);
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFunctionIdListBytes(int index) {
        return functionIdList_.getByteString(index);
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public Builder setFunctionIdList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFunctionIdListIsMutable();
        functionIdList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public Builder addFunctionIdList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFunctionIdListIsMutable();
        functionIdList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public Builder addAllFunctionIdList(
          java.lang.Iterable<java.lang.String> values) {
        ensureFunctionIdListIsMutable();
        super.addAll(values, functionIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public Builder clearFunctionIdList() {
        functionIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string functionIdList = 2;</code>
       *
       * <pre>
       *功能ID列表，比如武将id列表
       * </pre>
       */
      public Builder addFunctionIdListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFunctionIdListIsMutable();
        functionIdList_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RedPoint)
    }

    static {
      defaultInstance = new RedPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RedPoint)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RedPointPushMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RedPointPushMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DisplayRedPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DisplayRedPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RedPointModification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RedPointModification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_RedPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_RedPoint_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016RedPoint.proto\"f\n\017RedPointPushMsg\022&\n\014a" +
      "llRedPoints\030\001 \001(\0132\020.DisplayRedPoint\022+\n\014m" +
      "odification\030\002 \001(\0132\025.RedPointModification" +
      "\"@\n\017DisplayRedPoint\022\034\n\tredPoints\030\001 \003(\0132\t" +
      ".RedPoint\022\017\n\007version\030\002 \002(\005\"t\n\024RedPointMo" +
      "dification\022&\n\023newlyAddedRedPoints\030\001 \003(\0132" +
      "\t.RedPoint\022#\n\020deletedRedPoints\030\002 \003(\0132\t.R" +
      "edPoint\022\017\n\007version\030\003 \002(\005\"0\n\010RedPoint\022\014\n\004" +
      "type\030\001 \002(\005\022\026\n\016functionIdList\030\002 \003(\tB\035\n\013co" +
      "m.rwprotoB\016RedPointProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_RedPointPushMsg_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_RedPointPushMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RedPointPushMsg_descriptor,
              new java.lang.String[] { "AllRedPoints", "Modification", });
          internal_static_DisplayRedPoint_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_DisplayRedPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DisplayRedPoint_descriptor,
              new java.lang.String[] { "RedPoints", "Version", });
          internal_static_RedPointModification_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_RedPointModification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RedPointModification_descriptor,
              new java.lang.String[] { "NewlyAddedRedPoints", "DeletedRedPoints", "Version", });
          internal_static_RedPoint_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_RedPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_RedPoint_descriptor,
              new java.lang.String[] { "Type", "FunctionIdList", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
