// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataSyn.proto

package com.rwproto;

public final class DataSynProtos {
  private DataSynProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code DataSyn.eSynOpType}
   *
   * <pre>
   *数据同步操作类型
   * </pre>
   */
  public enum eSynOpType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UPDATE_LIST = 1;</code>
     *
     * <pre>
     *更新一组数据，原数据删除
     * </pre>
     */
    UPDATE_LIST(0, 1),
    /**
     * <code>UPDATE_SINGLE = 2;</code>
     *
     * <pre>
     *更新一条数据
     * </pre>
     */
    UPDATE_SINGLE(1, 2),
    /**
     * <code>ADD_SINGLE = 3;</code>
     *
     * <pre>
     * 增加一条数据
     * </pre>
     */
    ADD_SINGLE(2, 3),
    /**
     * <code>REMOVE_SINGLE = 4;</code>
     *
     * <pre>
     * 删除一条数据
     * </pre>
     */
    REMOVE_SINGLE(3, 4),
    /**
     * <code>UPDATE_FIELD = 5;</code>
     *
     * <pre>
     *只更新单条记录的某些字段
     * </pre>
     */
    UPDATE_FIELD(4, 5),
    /**
     * <code>UPDATE_PART_LIST = 6;</code>
     *
     * <pre>
     *更新部分数据列表，不在列表中的不更新
     * </pre>
     */
    UPDATE_PART_LIST(5, 6),
    ;

    /**
     * <code>UPDATE_LIST = 1;</code>
     *
     * <pre>
     *更新一组数据，原数据删除
     * </pre>
     */
    public static final int UPDATE_LIST_VALUE = 1;
    /**
     * <code>UPDATE_SINGLE = 2;</code>
     *
     * <pre>
     *更新一条数据
     * </pre>
     */
    public static final int UPDATE_SINGLE_VALUE = 2;
    /**
     * <code>ADD_SINGLE = 3;</code>
     *
     * <pre>
     * 增加一条数据
     * </pre>
     */
    public static final int ADD_SINGLE_VALUE = 3;
    /**
     * <code>REMOVE_SINGLE = 4;</code>
     *
     * <pre>
     * 删除一条数据
     * </pre>
     */
    public static final int REMOVE_SINGLE_VALUE = 4;
    /**
     * <code>UPDATE_FIELD = 5;</code>
     *
     * <pre>
     *只更新单条记录的某些字段
     * </pre>
     */
    public static final int UPDATE_FIELD_VALUE = 5;
    /**
     * <code>UPDATE_PART_LIST = 6;</code>
     *
     * <pre>
     *更新部分数据列表，不在列表中的不更新
     * </pre>
     */
    public static final int UPDATE_PART_LIST_VALUE = 6;


    public final int getNumber() { return value; }

    public static eSynOpType valueOf(int value) {
      switch (value) {
        case 1: return UPDATE_LIST;
        case 2: return UPDATE_SINGLE;
        case 3: return ADD_SINGLE;
        case 4: return REMOVE_SINGLE;
        case 5: return UPDATE_FIELD;
        case 6: return UPDATE_PART_LIST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eSynOpType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eSynOpType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eSynOpType>() {
            public eSynOpType findValueByNumber(int number) {
              return eSynOpType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final eSynOpType[] VALUES = values();

    public static eSynOpType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eSynOpType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DataSyn.eSynOpType)
  }

  /**
   * Protobuf enum {@code DataSyn.eSynType}
   */
  public enum eSynType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COPY_LEVEL_RECORD = 1;</code>
     *
     * <pre>
     *关卡记录，包括精英，普通，英雄
     * </pre>
     */
    COPY_LEVEL_RECORD(0, 1),
    /**
     * <code>COPY_MAP_RECORD = 2;</code>
     *
     * <pre>
     *地图记录，包括精英，普通，英雄
     * </pre>
     */
    COPY_MAP_RECORD(1, 2),
    /**
     * <code>SECRETAREA_BASE_INFO = 3;</code>
     *
     * <pre>
     *帮派秘境-秘境基础信息
     * </pre>
     */
    SECRETAREA_BASE_INFO(2, 3),
    /**
     * <code>SECRETAREA_DEF_RECORD = 4;</code>
     *
     * <pre>
     *帮派秘境-防守记录
     * </pre>
     */
    SECRETAREA_DEF_RECORD(3, 4),
    /**
     * <code>SECRETAREA_USER_INFO = 5;</code>
     *
     * <pre>
     *帮派秘境-用户信息
     * </pre>
     */
    SECRETAREA_USER_INFO(4, 5),
    /**
     * <code>SECRETAREA_DEFEND_TEAM_INFO = 6;</code>
     *
     * <pre>
     *帮派秘境-秘境的防守信息
     * </pre>
     */
    SECRETAREA_DEFEND_TEAM_INFO(5, 6),
    /**
     * <code>SECRETAREA_USER_RECORD = 7;</code>
     *
     * <pre>
     *帮派秘境-用户的秘境记录
     * </pre>
     */
    SECRETAREA_USER_RECORD(6, 7),
    /**
     * <code>FASHION_ITEM = 8;</code>
     *
     * <pre>
     *时装数据
     * </pre>
     */
    FASHION_ITEM(7, 8),
    /**
     * <code>EQUIP_ITEM = 9;</code>
     *
     * <pre>
     *装备列表
     * </pre>
     */
    EQUIP_ITEM(8, 9),
    /**
     * <code>SKILL_ITEM = 10;</code>
     *
     * <pre>
     *技能列表
     * </pre>
     */
    SKILL_ITEM(9, 10),
    /**
     * <code>INLAY_ITEM = 11;</code>
     *
     * <pre>
     *镶嵌列表
     * </pre>
     */
    INLAY_ITEM(10, 11),
    /**
     * <code>ROLE_ATTR_ITEM = 12;</code>
     *
     * <pre>
     *人物属性列表
     * </pre>
     */
    ROLE_ATTR_ITEM(11, 12),
    /**
     * <code>ROLE_BASE_ITEM = 13;</code>
     *
     * <pre>
     *佣兵（人物）基本信息
     * </pre>
     */
    ROLE_BASE_ITEM(12, 13),
    /**
     * <code>USER_HEROS = 14;</code>
     *
     * <pre>
     *用户佣兵模块的信息
     * </pre>
     */
    USER_HEROS(13, 14),
    /**
     * <code>USER_DATA = 15;</code>
     *
     * <pre>
     *用户数据帐号，性别等
     * </pre>
     */
    USER_DATA(14, 15),
    /**
     * <code>USER_GAME_DATA = 16;</code>
     *
     * <pre>
     *用户游戏相关数据
     * </pre>
     */
    USER_GAME_DATA(15, 16),
    /**
     * <code>USER_MAGIC = 17;</code>
     *
     * <pre>
     *角色的法宝数据
     * </pre>
     */
    USER_MAGIC(16, 17),
    /**
     * <code>USER_ITEM_BAG = 18;</code>
     *
     * <pre>
     *角色的背包数据
     * </pre>
     */
    USER_ITEM_BAG(17, 18),
    /**
     * <code>DailyActivity = 19;</code>
     *
     * <pre>
     *日常活动
     * </pre>
     */
    DailyActivity(18, 19),
    /**
     * <code>Guild = 20;</code>
     *
     * <pre>
     *派帮
     * </pre>
     */
    Guild(19, 20),
    /**
     * <code>Pve_UnendingWar = 21;</code>
     *
     * <pre>
     *无尽战火
     * </pre>
     */
    Pve_UnendingWar(20, 21),
    /**
     * <code>Pve_Trial = 22;</code>
     *
     * <pre>
     *聚宝之地,练气山谷,生存幻境
     * </pre>
     */
    Pve_Trial(21, 22),
    /**
     * <code>Store_Data = 23;</code>
     *
     * <pre>
     *商店
     * </pre>
     */
    Store_Data(22, 23),
    /**
     * <code>TASK_DATA = 24;</code>
     *
     * <pre>
     *任务数据同步
     * </pre>
     */
    TASK_DATA(23, 24),
    /**
     * <code>VIP_DATA = 25;</code>
     *
     * <pre>
     *vip数据同步
     * </pre>
     */
    VIP_DATA(24, 25),
    /**
     * <code>SETTING_DATA = 26;</code>
     *
     * <pre>
     *设置数据同步
     * </pre>
     */
    SETTING_DATA(25, 26),
    /**
     * <code>GUILD_USER_INFO = 27;</code>
     *
     * <pre>
     *帮派中和个人相关的数据
     * </pre>
     */
    GUILD_USER_INFO(26, 27),
    /**
     * <code>SEVEN_DAY_GIF = 28;</code>
     *
     * <pre>
     *七日礼
     * </pre>
     */
    SEVEN_DAY_GIF(27, 28),
    /**
     * <code>FRESHER_ATIVITY_DATA = 29;</code>
     *
     * <pre>
     *开服活动
     * </pre>
     */
    FRESHER_ATIVITY_DATA(28, 29),
    /**
     * <code>ASSISTANT = 30;</code>
     *
     * <pre>
     *小秘书
     * </pre>
     */
    ASSISTANT(29, 30),
    /**
     * <code>VERSION_COPY = 31;</code>
     *
     * <pre>
     *副本版本，用来做关卡和地图的版本校验，不用做同步
     * </pre>
     */
    VERSION_COPY(30, 31),
    /**
     * <code>GroupBaseData = 32;</code>
     *
     * <pre>
     *帮派基础信息
     * </pre>
     */
    GroupBaseData(31, 32),
    /**
     * <code>GroupMemberData = 33;</code>
     *
     * <pre>
     *帮派正式成员信息
     * </pre>
     */
    GroupMemberData(32, 33),
    /**
     * <code>GroupLog = 34;</code>
     *
     * <pre>
     *帮派log
     * </pre>
     */
    GroupLog(33, 34),
    /**
     * <code>UserGroupAttributeData = 35;</code>
     *
     * <pre>
     *用户个人的帮派信息
     * </pre>
     */
    UserGroupAttributeData(34, 35),
    /**
     * <code>GROUP_COPY_LEVEL = 36;</code>
     *
     * <pre>
     *帮派关卡记录
     * </pre>
     */
    GROUP_COPY_LEVEL(35, 36),
    /**
     * <code>GROUP_COPY_MAP = 37;</code>
     *
     * <pre>
     *帮派地图记录
     * </pre>
     */
    GROUP_COPY_MAP(36, 37),
    /**
     * <code>GROUP_COPY_REWARD = 38;</code>
     *
     * <pre>
     *帮派奖励分配记录
     * </pre>
     */
    GROUP_COPY_REWARD(37, 38),
    /**
     * <code>GroupApplyMemberData = 39;</code>
     *
     * <pre>
     *申请成员信息
     * </pre>
     */
    GroupApplyMemberData(38, 39),
    /**
     * <code>GroupResearchSkill = 40;</code>
     *
     * <pre>
     *帮派技能研发
     * </pre>
     */
    GroupResearchSkill(39, 40),
    /**
     * <code>GroupStudySkill = 41;</code>
     *
     * <pre>
     *帮派技能学习
     * </pre>
     */
    GroupStudySkill(40, 41),
    /**
     * <code>Charge = 42;</code>
     *
     * <pre>
     *充值
     * </pre>
     */
    Charge(41, 42),
    /**
     * <code>POWER_INFO = 43;</code>
     *
     * <pre>
     *体力信息
     * </pre>
     */
    POWER_INFO(42, 43),
    /**
     * <code>USER_TMP_GAME_DATA = 44;</code>
     *
     * <pre>
     *用户的临时内存数据
     * </pre>
     */
    USER_TMP_GAME_DATA(43, 44),
    /**
     * <code>HERO_FETTERS = 45;</code>
     *
     * <pre>
     *英雄羁绊
     * </pre>
     */
    HERO_FETTERS(44, 45),
    /**
     * <code>FIX_NORM_EQUIP = 46;</code>
     *
     * <pre>
     *专属装备普通
     * </pre>
     */
    FIX_NORM_EQUIP(45, 46),
    /**
     * <code>FIX_EXP_EQUIP = 47;</code>
     *
     * <pre>
     *专属装备经验类型
     * </pre>
     */
    FIX_EXP_EQUIP(46, 47),
    /**
     * <code>UserGroupSecretData = 48;</code>
     *
     * <pre>
     *帮派秘境用户数据
     * </pre>
     */
    UserGroupSecretData(47, 48),
    /**
     * <code>GroupSecretData = 49;</code>
     *
     * <pre>
     *秘境数据
     * </pre>
     */
    GroupSecretData(48, 49),
    /**
     * <code>MagicSecretData = 50;</code>
     *
     * <pre>
     *法宝秘境数据
     * </pre>
     */
    MagicSecretData(49, 50),
    /**
     * <code>MagicChapterData = 51;</code>
     *
     * <pre>
     *法宝秘境章节数据
     * </pre>
     */
    MagicChapterData(50, 51),
    /**
     * <code>SECRETAREA_TEAM_INFO = 52;</code>
     *
     * <pre>
     *帮派秘境的阵容信息
     * </pre>
     */
    SECRETAREA_TEAM_INFO(51, 52),
    /**
     * <code>USE_GROUP_COPY_DATA = 53;</code>
     *
     * <pre>
     *帮派副本个人数据
     * </pre>
     */
    USE_GROUP_COPY_DATA(52, 53),
    /**
     * <code>GROUP_COPY_SERVER_RANK = 54;</code>
     *
     * <pre>
     *帮派副本前10排行数据
     * </pre>
     */
    GROUP_COPY_SERVER_RANK(53, 54),
    /**
     * <code>GROUP_ITEM_DROP_APPLY = 55;</code>
     *
     * <pre>
     *帮派副本掉落
     * </pre>
     */
    GROUP_ITEM_DROP_APPLY(54, 55),
    /**
     * <code>ActivityCountType = 60;</code>
     *
     * <pre>
     *活动从60-79
     * </pre>
     */
    ActivityCountType(55, 60),
    /**
     * <code>ActivityTimeCardType = 61;</code>
     *
     * <pre>
     *月卡
     * </pre>
     */
    ActivityTimeCardType(56, 61),
    /**
     * <code>ActivityRateType = 62;</code>
     *
     * <pre>
     *活动，奖励翻倍类型
     * </pre>
     */
    ActivityRateType(57, 62),
    /**
     * <code>ActivityDateType = 63;</code>
     *
     * <pre>
     *活动，日期类型
     * </pre>
     */
    ActivityDateType(58, 63),
    /**
     * <code>ActivityTimeSaleType = 64;</code>
     *
     * <pre>
     *活动
     * </pre>
     */
    ActivityTimeSaleType(59, 64),
    /**
     * <code>ActivityDateSaleType = 65;</code>
     *
     * <pre>
     *活动
     * </pre>
     */
    ActivityDateSaleType(60, 65),
    /**
     * <code>ActivityRankType = 66;</code>
     *
     * <pre>
     *活动，排行榜
     * </pre>
     */
    ActivityRankType(61, 66),
    /**
     * <code>ActivityExchangeType = 67;</code>
     *
     * <pre>
     *活动，兑换
     * </pre>
     */
    ActivityExchangeType(62, 67),
    /**
     * <code>ActivityTimeCountType = 68;</code>
     *
     * <pre>
     *活动，在线奖励
     * </pre>
     */
    ActivityTimeCountType(63, 68),
    /**
     * <code>ActivityDailyType = 69;</code>
     *
     * <pre>
     *活动，每日福利
     * </pre>
     */
    ActivityDailyType(64, 69),
    /**
     * <code>ActivityVitalityType = 70;</code>
     *
     * <pre>
     *活动，活跃度
     * </pre>
     */
    ActivityVitalityType(65, 70),
    /**
     * <code>ActivityDailyDiscountType = 71;</code>
     *
     * <pre>
     *活动，每日折扣
     * </pre>
     */
    ActivityDailyDiscountType(66, 71),
    /**
     * <code>ActivityVipDiscountType = 72;</code>
     *
     * <pre>
     *活动，七日vip折扣
     * </pre>
     */
    ActivityVipDiscountType(67, 72),
    /**
     * <code>ActivityRedEnvelopeType = 73;</code>
     *
     * <pre>
     *活动，开服红包
     * </pre>
     */
    ActivityRedEnvelopeType(68, 73),
    /**
     * <code>ActivityFortuneCatType = 74;</code>
     *
     * <pre>
     *活动，招财猫
     * </pre>
     */
    ActivityFortuneCatType(69, 74),
    /**
     * <code>ActivityLimitHeroType = 75;</code>
     *
     * <pre>
     *活动，限时神将
     * </pre>
     */
    ActivityLimitHeroType(70, 75),
    /**
     * <code>ActivityDailyRechargeType = 76;</code>
     *
     * <pre>
     *每日充值活动
     * </pre>
     */
    ActivityDailyRechargeType(71, 76),
    /**
     * <code>ActivityRetrieveType = 77;</code>
     *
     * <pre>
     *每日找回活动
     * </pre>
     */
    ActivityRetrieveType(72, 77),
    /**
     * <code>QuestionList = 80;</code>
     *
     * <pre>
     *反馈问题列表	
     * </pre>
     */
    QuestionList(73, 80),
    /**
     * <code>GFBiddingData = 81;</code>
     *
     * <pre>
     *在线帮战个人压标数据
     * </pre>
     */
    GFBiddingData(74, 81),
    /**
     * <code>GFDefendArmyData = 82;</code>
     *
     * <pre>
     *在线帮战防守队伍信息
     * </pre>
     */
    GFDefendArmyData(75, 82),
    /**
     * <code>GFightOnlineGroupData = 83;</code>
     *
     * <pre>
     *在线帮战帮派信息
     * </pre>
     */
    GFightOnlineGroupData(76, 83),
    /**
     * <code>GFightOnlinePersonalData = 84;</code>
     *
     * <pre>
     *在线帮战个人信息
     * </pre>
     */
    GFightOnlinePersonalData(77, 84),
    /**
     * <code>GFightOnlineResourceData = 85;</code>
     *
     * <pre>
     *在线帮战资源点信息
     * </pre>
     */
    GFightOnlineResourceData(78, 85),
    /**
     * <code>MajorData = 86;</code>
     *
     * <pre>
     *关键数据
     * </pre>
     */
    MajorData(79, 86),
    /**
     * <code>GFightSimpleLeader = 87;</code>
     *
     * <pre>
     *在线帮战防守队伍简要信息
     * </pre>
     */
    GFightSimpleLeader(80, 87),
    /**
     * <code>GFightFinalReward = 88;</code>
     *
     * <pre>
     *在线帮战最终的奖励
     * </pre>
     */
    GFightFinalReward(81, 88),
    /**
     * <code>EmbattleInfo = 89;</code>
     *
     * <pre>
     *阵容站位
     * </pre>
     */
    EmbattleInfo(82, 89),
    /**
     * <code>MAGICEQUIP_FETTER = 90;</code>
     *
     * <pre>
     *法宝神器羁绊
     * </pre>
     */
    MAGICEQUIP_FETTER(83, 90),
    /**
     * <code>USER_TEAM_BATTLE = 91;</code>
     *
     * <pre>
     *组队战斗，玩家信息
     * </pre>
     */
    USER_TEAM_BATTLE(84, 91),
    /**
     * <code>TEAM_BATTLE_TEAM = 92;</code>
     *
     * <pre>
     *组队战斗，队伍信息
     * </pre>
     */
    TEAM_BATTLE_TEAM(85, 92),
    /**
     * <code>WB_DATA = 93;</code>
     *
     * <pre>
     *世界boss数据
     * </pre>
     */
    WB_DATA(86, 93),
    /**
     * <code>WB_USER_DATA = 94;</code>
     *
     * <pre>
     *世界boss个人数据
     * </pre>
     */
    WB_USER_DATA(87, 94),
    /**
     * <code>RANDOM_BOSS_DATA = 95;</code>
     *
     * <pre>
     *随机boss数据
     * </pre>
     */
    RANDOM_BOSS_DATA(88, 95),
    /**
     * <code>WB_RANK_DATA = 96;</code>
     *
     * <pre>
     *世界boss排行数据
     * </pre>
     */
    WB_RANK_DATA(89, 96),
    /**
     * <code>GC_PREPARE_POSITION = 97;</code>
     *
     * <pre>
     *帮派争霸赛，备战区的位置信息同步
     * </pre>
     */
    GC_PREPARE_POSITION(90, 97),
    /**
     * <code>FIGHTING_GROWTH_DATA = 98;</code>
     *
     * <pre>
     * 战力提升数据
     * </pre>
     */
    FIGHTING_GROWTH_DATA(91, 98),
    /**
     * <code>GCompBase = 100;</code>
     *
     * <pre>
     *帮派争霸基本信息
     * </pre>
     */
    GCompBase(92, 100),
    /**
     * <code>GCompAudition = 101;</code>
     *
     * <pre>
     *帮派争霸海选
     * </pre>
     */
    GCompAudition(93, 101),
    /**
     * <code>GCompDetailInfo = 102;</code>
     *
     * <pre>
     *帮派争霸直播
     * </pre>
     */
    GCompDetailInfo(94, 102),
    /**
     * <code>GCompFightingRecord = 103;</code>
     *
     * <pre>
     *帮派争霸战斗记录
     * </pre>
     */
    GCompFightingRecord(95, 103),
    /**
     * <code>GCompMatch = 104;</code>
     *
     * <pre>
     *帮派争霸对阵信息
     * </pre>
     */
    GCompMatch(96, 104),
    /**
     * <code>GCompOnlineMember = 105;</code>
     *
     * <pre>
     *帮派争霸在线成员
     * </pre>
     */
    GCompOnlineMember(97, 105),
    /**
     * <code>GCompTeamHolder = 106;</code>
     *
     * <pre>
     *帮派争霸组队
     * </pre>
     */
    GCompTeamHolder(98, 106),
    /**
     * <code>BENEFIT_SELL_DATA = 107;</code>
     *
     * <pre>
     *精准营销数据
     * </pre>
     */
    BENEFIT_SELL_DATA(99, 107),
    /**
     * <code>ACHIEVEMENT_DATA = 108;</code>
     *
     * <pre>
     *成就数据
     * </pre>
     */
    ACHIEVEMENT_DATA(100, 108),
    /**
     * <code>GCompSelfGuess = 109;</code>
     *
     * <pre>
     *玩家个人竞猜的项（只包含基本信息）--登录同步
     * </pre>
     */
    GCompSelfGuess(101, 109),
    /**
     * <code>GCompSelfGuessDetail = 110;</code>
     *
     * <pre>
     *玩家竞猜的项的详细信息（包括两个对战帮派的基本信息）--登录同步
     * </pre>
     */
    GCompSelfGuessDetail(102, 110),
    /**
     * <code>GCompCanGuessItem = 111;</code>
     *
     * <pre>
     *和110用的相同的结构，但表示的是，当前可以竞猜的项（请求同步）
     * </pre>
     */
    GCompCanGuessItem(103, 111),
    /**
     * <code>GCompMatchEnemy = 112;</code>
     *
     * <pre>
     *匹配敌人数据
     * </pre>
     */
    GCompMatchEnemy(104, 112),
    /**
     * <code>GCompMember = 113;</code>
     *
     * <pre>
     * 帮战个人信息
     * </pre>
     */
    GCompMember(105, 113),
    /**
     * <code>DropSameScene = 114;</code>
     *
     * <pre>
     *删除一个同屏场景
     * </pre>
     */
    DropSameScene(106, 114),
    ;

    /**
     * <code>COPY_LEVEL_RECORD = 1;</code>
     *
     * <pre>
     *关卡记录，包括精英，普通，英雄
     * </pre>
     */
    public static final int COPY_LEVEL_RECORD_VALUE = 1;
    /**
     * <code>COPY_MAP_RECORD = 2;</code>
     *
     * <pre>
     *地图记录，包括精英，普通，英雄
     * </pre>
     */
    public static final int COPY_MAP_RECORD_VALUE = 2;
    /**
     * <code>SECRETAREA_BASE_INFO = 3;</code>
     *
     * <pre>
     *帮派秘境-秘境基础信息
     * </pre>
     */
    public static final int SECRETAREA_BASE_INFO_VALUE = 3;
    /**
     * <code>SECRETAREA_DEF_RECORD = 4;</code>
     *
     * <pre>
     *帮派秘境-防守记录
     * </pre>
     */
    public static final int SECRETAREA_DEF_RECORD_VALUE = 4;
    /**
     * <code>SECRETAREA_USER_INFO = 5;</code>
     *
     * <pre>
     *帮派秘境-用户信息
     * </pre>
     */
    public static final int SECRETAREA_USER_INFO_VALUE = 5;
    /**
     * <code>SECRETAREA_DEFEND_TEAM_INFO = 6;</code>
     *
     * <pre>
     *帮派秘境-秘境的防守信息
     * </pre>
     */
    public static final int SECRETAREA_DEFEND_TEAM_INFO_VALUE = 6;
    /**
     * <code>SECRETAREA_USER_RECORD = 7;</code>
     *
     * <pre>
     *帮派秘境-用户的秘境记录
     * </pre>
     */
    public static final int SECRETAREA_USER_RECORD_VALUE = 7;
    /**
     * <code>FASHION_ITEM = 8;</code>
     *
     * <pre>
     *时装数据
     * </pre>
     */
    public static final int FASHION_ITEM_VALUE = 8;
    /**
     * <code>EQUIP_ITEM = 9;</code>
     *
     * <pre>
     *装备列表
     * </pre>
     */
    public static final int EQUIP_ITEM_VALUE = 9;
    /**
     * <code>SKILL_ITEM = 10;</code>
     *
     * <pre>
     *技能列表
     * </pre>
     */
    public static final int SKILL_ITEM_VALUE = 10;
    /**
     * <code>INLAY_ITEM = 11;</code>
     *
     * <pre>
     *镶嵌列表
     * </pre>
     */
    public static final int INLAY_ITEM_VALUE = 11;
    /**
     * <code>ROLE_ATTR_ITEM = 12;</code>
     *
     * <pre>
     *人物属性列表
     * </pre>
     */
    public static final int ROLE_ATTR_ITEM_VALUE = 12;
    /**
     * <code>ROLE_BASE_ITEM = 13;</code>
     *
     * <pre>
     *佣兵（人物）基本信息
     * </pre>
     */
    public static final int ROLE_BASE_ITEM_VALUE = 13;
    /**
     * <code>USER_HEROS = 14;</code>
     *
     * <pre>
     *用户佣兵模块的信息
     * </pre>
     */
    public static final int USER_HEROS_VALUE = 14;
    /**
     * <code>USER_DATA = 15;</code>
     *
     * <pre>
     *用户数据帐号，性别等
     * </pre>
     */
    public static final int USER_DATA_VALUE = 15;
    /**
     * <code>USER_GAME_DATA = 16;</code>
     *
     * <pre>
     *用户游戏相关数据
     * </pre>
     */
    public static final int USER_GAME_DATA_VALUE = 16;
    /**
     * <code>USER_MAGIC = 17;</code>
     *
     * <pre>
     *角色的法宝数据
     * </pre>
     */
    public static final int USER_MAGIC_VALUE = 17;
    /**
     * <code>USER_ITEM_BAG = 18;</code>
     *
     * <pre>
     *角色的背包数据
     * </pre>
     */
    public static final int USER_ITEM_BAG_VALUE = 18;
    /**
     * <code>DailyActivity = 19;</code>
     *
     * <pre>
     *日常活动
     * </pre>
     */
    public static final int DailyActivity_VALUE = 19;
    /**
     * <code>Guild = 20;</code>
     *
     * <pre>
     *派帮
     * </pre>
     */
    public static final int Guild_VALUE = 20;
    /**
     * <code>Pve_UnendingWar = 21;</code>
     *
     * <pre>
     *无尽战火
     * </pre>
     */
    public static final int Pve_UnendingWar_VALUE = 21;
    /**
     * <code>Pve_Trial = 22;</code>
     *
     * <pre>
     *聚宝之地,练气山谷,生存幻境
     * </pre>
     */
    public static final int Pve_Trial_VALUE = 22;
    /**
     * <code>Store_Data = 23;</code>
     *
     * <pre>
     *商店
     * </pre>
     */
    public static final int Store_Data_VALUE = 23;
    /**
     * <code>TASK_DATA = 24;</code>
     *
     * <pre>
     *任务数据同步
     * </pre>
     */
    public static final int TASK_DATA_VALUE = 24;
    /**
     * <code>VIP_DATA = 25;</code>
     *
     * <pre>
     *vip数据同步
     * </pre>
     */
    public static final int VIP_DATA_VALUE = 25;
    /**
     * <code>SETTING_DATA = 26;</code>
     *
     * <pre>
     *设置数据同步
     * </pre>
     */
    public static final int SETTING_DATA_VALUE = 26;
    /**
     * <code>GUILD_USER_INFO = 27;</code>
     *
     * <pre>
     *帮派中和个人相关的数据
     * </pre>
     */
    public static final int GUILD_USER_INFO_VALUE = 27;
    /**
     * <code>SEVEN_DAY_GIF = 28;</code>
     *
     * <pre>
     *七日礼
     * </pre>
     */
    public static final int SEVEN_DAY_GIF_VALUE = 28;
    /**
     * <code>FRESHER_ATIVITY_DATA = 29;</code>
     *
     * <pre>
     *开服活动
     * </pre>
     */
    public static final int FRESHER_ATIVITY_DATA_VALUE = 29;
    /**
     * <code>ASSISTANT = 30;</code>
     *
     * <pre>
     *小秘书
     * </pre>
     */
    public static final int ASSISTANT_VALUE = 30;
    /**
     * <code>VERSION_COPY = 31;</code>
     *
     * <pre>
     *副本版本，用来做关卡和地图的版本校验，不用做同步
     * </pre>
     */
    public static final int VERSION_COPY_VALUE = 31;
    /**
     * <code>GroupBaseData = 32;</code>
     *
     * <pre>
     *帮派基础信息
     * </pre>
     */
    public static final int GroupBaseData_VALUE = 32;
    /**
     * <code>GroupMemberData = 33;</code>
     *
     * <pre>
     *帮派正式成员信息
     * </pre>
     */
    public static final int GroupMemberData_VALUE = 33;
    /**
     * <code>GroupLog = 34;</code>
     *
     * <pre>
     *帮派log
     * </pre>
     */
    public static final int GroupLog_VALUE = 34;
    /**
     * <code>UserGroupAttributeData = 35;</code>
     *
     * <pre>
     *用户个人的帮派信息
     * </pre>
     */
    public static final int UserGroupAttributeData_VALUE = 35;
    /**
     * <code>GROUP_COPY_LEVEL = 36;</code>
     *
     * <pre>
     *帮派关卡记录
     * </pre>
     */
    public static final int GROUP_COPY_LEVEL_VALUE = 36;
    /**
     * <code>GROUP_COPY_MAP = 37;</code>
     *
     * <pre>
     *帮派地图记录
     * </pre>
     */
    public static final int GROUP_COPY_MAP_VALUE = 37;
    /**
     * <code>GROUP_COPY_REWARD = 38;</code>
     *
     * <pre>
     *帮派奖励分配记录
     * </pre>
     */
    public static final int GROUP_COPY_REWARD_VALUE = 38;
    /**
     * <code>GroupApplyMemberData = 39;</code>
     *
     * <pre>
     *申请成员信息
     * </pre>
     */
    public static final int GroupApplyMemberData_VALUE = 39;
    /**
     * <code>GroupResearchSkill = 40;</code>
     *
     * <pre>
     *帮派技能研发
     * </pre>
     */
    public static final int GroupResearchSkill_VALUE = 40;
    /**
     * <code>GroupStudySkill = 41;</code>
     *
     * <pre>
     *帮派技能学习
     * </pre>
     */
    public static final int GroupStudySkill_VALUE = 41;
    /**
     * <code>Charge = 42;</code>
     *
     * <pre>
     *充值
     * </pre>
     */
    public static final int Charge_VALUE = 42;
    /**
     * <code>POWER_INFO = 43;</code>
     *
     * <pre>
     *体力信息
     * </pre>
     */
    public static final int POWER_INFO_VALUE = 43;
    /**
     * <code>USER_TMP_GAME_DATA = 44;</code>
     *
     * <pre>
     *用户的临时内存数据
     * </pre>
     */
    public static final int USER_TMP_GAME_DATA_VALUE = 44;
    /**
     * <code>HERO_FETTERS = 45;</code>
     *
     * <pre>
     *英雄羁绊
     * </pre>
     */
    public static final int HERO_FETTERS_VALUE = 45;
    /**
     * <code>FIX_NORM_EQUIP = 46;</code>
     *
     * <pre>
     *专属装备普通
     * </pre>
     */
    public static final int FIX_NORM_EQUIP_VALUE = 46;
    /**
     * <code>FIX_EXP_EQUIP = 47;</code>
     *
     * <pre>
     *专属装备经验类型
     * </pre>
     */
    public static final int FIX_EXP_EQUIP_VALUE = 47;
    /**
     * <code>UserGroupSecretData = 48;</code>
     *
     * <pre>
     *帮派秘境用户数据
     * </pre>
     */
    public static final int UserGroupSecretData_VALUE = 48;
    /**
     * <code>GroupSecretData = 49;</code>
     *
     * <pre>
     *秘境数据
     * </pre>
     */
    public static final int GroupSecretData_VALUE = 49;
    /**
     * <code>MagicSecretData = 50;</code>
     *
     * <pre>
     *法宝秘境数据
     * </pre>
     */
    public static final int MagicSecretData_VALUE = 50;
    /**
     * <code>MagicChapterData = 51;</code>
     *
     * <pre>
     *法宝秘境章节数据
     * </pre>
     */
    public static final int MagicChapterData_VALUE = 51;
    /**
     * <code>SECRETAREA_TEAM_INFO = 52;</code>
     *
     * <pre>
     *帮派秘境的阵容信息
     * </pre>
     */
    public static final int SECRETAREA_TEAM_INFO_VALUE = 52;
    /**
     * <code>USE_GROUP_COPY_DATA = 53;</code>
     *
     * <pre>
     *帮派副本个人数据
     * </pre>
     */
    public static final int USE_GROUP_COPY_DATA_VALUE = 53;
    /**
     * <code>GROUP_COPY_SERVER_RANK = 54;</code>
     *
     * <pre>
     *帮派副本前10排行数据
     * </pre>
     */
    public static final int GROUP_COPY_SERVER_RANK_VALUE = 54;
    /**
     * <code>GROUP_ITEM_DROP_APPLY = 55;</code>
     *
     * <pre>
     *帮派副本掉落
     * </pre>
     */
    public static final int GROUP_ITEM_DROP_APPLY_VALUE = 55;
    /**
     * <code>ActivityCountType = 60;</code>
     *
     * <pre>
     *活动从60-79
     * </pre>
     */
    public static final int ActivityCountType_VALUE = 60;
    /**
     * <code>ActivityTimeCardType = 61;</code>
     *
     * <pre>
     *月卡
     * </pre>
     */
    public static final int ActivityTimeCardType_VALUE = 61;
    /**
     * <code>ActivityRateType = 62;</code>
     *
     * <pre>
     *活动，奖励翻倍类型
     * </pre>
     */
    public static final int ActivityRateType_VALUE = 62;
    /**
     * <code>ActivityDateType = 63;</code>
     *
     * <pre>
     *活动，日期类型
     * </pre>
     */
    public static final int ActivityDateType_VALUE = 63;
    /**
     * <code>ActivityTimeSaleType = 64;</code>
     *
     * <pre>
     *活动
     * </pre>
     */
    public static final int ActivityTimeSaleType_VALUE = 64;
    /**
     * <code>ActivityDateSaleType = 65;</code>
     *
     * <pre>
     *活动
     * </pre>
     */
    public static final int ActivityDateSaleType_VALUE = 65;
    /**
     * <code>ActivityRankType = 66;</code>
     *
     * <pre>
     *活动，排行榜
     * </pre>
     */
    public static final int ActivityRankType_VALUE = 66;
    /**
     * <code>ActivityExchangeType = 67;</code>
     *
     * <pre>
     *活动，兑换
     * </pre>
     */
    public static final int ActivityExchangeType_VALUE = 67;
    /**
     * <code>ActivityTimeCountType = 68;</code>
     *
     * <pre>
     *活动，在线奖励
     * </pre>
     */
    public static final int ActivityTimeCountType_VALUE = 68;
    /**
     * <code>ActivityDailyType = 69;</code>
     *
     * <pre>
     *活动，每日福利
     * </pre>
     */
    public static final int ActivityDailyType_VALUE = 69;
    /**
     * <code>ActivityVitalityType = 70;</code>
     *
     * <pre>
     *活动，活跃度
     * </pre>
     */
    public static final int ActivityVitalityType_VALUE = 70;
    /**
     * <code>ActivityDailyDiscountType = 71;</code>
     *
     * <pre>
     *活动，每日折扣
     * </pre>
     */
    public static final int ActivityDailyDiscountType_VALUE = 71;
    /**
     * <code>ActivityVipDiscountType = 72;</code>
     *
     * <pre>
     *活动，七日vip折扣
     * </pre>
     */
    public static final int ActivityVipDiscountType_VALUE = 72;
    /**
     * <code>ActivityRedEnvelopeType = 73;</code>
     *
     * <pre>
     *活动，开服红包
     * </pre>
     */
    public static final int ActivityRedEnvelopeType_VALUE = 73;
    /**
     * <code>ActivityFortuneCatType = 74;</code>
     *
     * <pre>
     *活动，招财猫
     * </pre>
     */
    public static final int ActivityFortuneCatType_VALUE = 74;
    /**
     * <code>ActivityLimitHeroType = 75;</code>
     *
     * <pre>
     *活动，限时神将
     * </pre>
     */
    public static final int ActivityLimitHeroType_VALUE = 75;
    /**
     * <code>ActivityDailyRechargeType = 76;</code>
     *
     * <pre>
     *每日充值活动
     * </pre>
     */
    public static final int ActivityDailyRechargeType_VALUE = 76;
    /**
     * <code>ActivityRetrieveType = 77;</code>
     *
     * <pre>
     *每日找回活动
     * </pre>
     */
    public static final int ActivityRetrieveType_VALUE = 77;
    /**
     * <code>QuestionList = 80;</code>
     *
     * <pre>
     *反馈问题列表	
     * </pre>
     */
    public static final int QuestionList_VALUE = 80;
    /**
     * <code>GFBiddingData = 81;</code>
     *
     * <pre>
     *在线帮战个人压标数据
     * </pre>
     */
    public static final int GFBiddingData_VALUE = 81;
    /**
     * <code>GFDefendArmyData = 82;</code>
     *
     * <pre>
     *在线帮战防守队伍信息
     * </pre>
     */
    public static final int GFDefendArmyData_VALUE = 82;
    /**
     * <code>GFightOnlineGroupData = 83;</code>
     *
     * <pre>
     *在线帮战帮派信息
     * </pre>
     */
    public static final int GFightOnlineGroupData_VALUE = 83;
    /**
     * <code>GFightOnlinePersonalData = 84;</code>
     *
     * <pre>
     *在线帮战个人信息
     * </pre>
     */
    public static final int GFightOnlinePersonalData_VALUE = 84;
    /**
     * <code>GFightOnlineResourceData = 85;</code>
     *
     * <pre>
     *在线帮战资源点信息
     * </pre>
     */
    public static final int GFightOnlineResourceData_VALUE = 85;
    /**
     * <code>MajorData = 86;</code>
     *
     * <pre>
     *关键数据
     * </pre>
     */
    public static final int MajorData_VALUE = 86;
    /**
     * <code>GFightSimpleLeader = 87;</code>
     *
     * <pre>
     *在线帮战防守队伍简要信息
     * </pre>
     */
    public static final int GFightSimpleLeader_VALUE = 87;
    /**
     * <code>GFightFinalReward = 88;</code>
     *
     * <pre>
     *在线帮战最终的奖励
     * </pre>
     */
    public static final int GFightFinalReward_VALUE = 88;
    /**
     * <code>EmbattleInfo = 89;</code>
     *
     * <pre>
     *阵容站位
     * </pre>
     */
    public static final int EmbattleInfo_VALUE = 89;
    /**
     * <code>MAGICEQUIP_FETTER = 90;</code>
     *
     * <pre>
     *法宝神器羁绊
     * </pre>
     */
    public static final int MAGICEQUIP_FETTER_VALUE = 90;
    /**
     * <code>USER_TEAM_BATTLE = 91;</code>
     *
     * <pre>
     *组队战斗，玩家信息
     * </pre>
     */
    public static final int USER_TEAM_BATTLE_VALUE = 91;
    /**
     * <code>TEAM_BATTLE_TEAM = 92;</code>
     *
     * <pre>
     *组队战斗，队伍信息
     * </pre>
     */
    public static final int TEAM_BATTLE_TEAM_VALUE = 92;
    /**
     * <code>WB_DATA = 93;</code>
     *
     * <pre>
     *世界boss数据
     * </pre>
     */
    public static final int WB_DATA_VALUE = 93;
    /**
     * <code>WB_USER_DATA = 94;</code>
     *
     * <pre>
     *世界boss个人数据
     * </pre>
     */
    public static final int WB_USER_DATA_VALUE = 94;
    /**
     * <code>RANDOM_BOSS_DATA = 95;</code>
     *
     * <pre>
     *随机boss数据
     * </pre>
     */
    public static final int RANDOM_BOSS_DATA_VALUE = 95;
    /**
     * <code>WB_RANK_DATA = 96;</code>
     *
     * <pre>
     *世界boss排行数据
     * </pre>
     */
    public static final int WB_RANK_DATA_VALUE = 96;
    /**
     * <code>GC_PREPARE_POSITION = 97;</code>
     *
     * <pre>
     *帮派争霸赛，备战区的位置信息同步
     * </pre>
     */
    public static final int GC_PREPARE_POSITION_VALUE = 97;
    /**
     * <code>FIGHTING_GROWTH_DATA = 98;</code>
     *
     * <pre>
     * 战力提升数据
     * </pre>
     */
    public static final int FIGHTING_GROWTH_DATA_VALUE = 98;
    /**
     * <code>GCompBase = 100;</code>
     *
     * <pre>
     *帮派争霸基本信息
     * </pre>
     */
    public static final int GCompBase_VALUE = 100;
    /**
     * <code>GCompAudition = 101;</code>
     *
     * <pre>
     *帮派争霸海选
     * </pre>
     */
    public static final int GCompAudition_VALUE = 101;
    /**
     * <code>GCompDetailInfo = 102;</code>
     *
     * <pre>
     *帮派争霸直播
     * </pre>
     */
    public static final int GCompDetailInfo_VALUE = 102;
    /**
     * <code>GCompFightingRecord = 103;</code>
     *
     * <pre>
     *帮派争霸战斗记录
     * </pre>
     */
    public static final int GCompFightingRecord_VALUE = 103;
    /**
     * <code>GCompMatch = 104;</code>
     *
     * <pre>
     *帮派争霸对阵信息
     * </pre>
     */
    public static final int GCompMatch_VALUE = 104;
    /**
     * <code>GCompOnlineMember = 105;</code>
     *
     * <pre>
     *帮派争霸在线成员
     * </pre>
     */
    public static final int GCompOnlineMember_VALUE = 105;
    /**
     * <code>GCompTeamHolder = 106;</code>
     *
     * <pre>
     *帮派争霸组队
     * </pre>
     */
    public static final int GCompTeamHolder_VALUE = 106;
    /**
     * <code>BENEFIT_SELL_DATA = 107;</code>
     *
     * <pre>
     *精准营销数据
     * </pre>
     */
    public static final int BENEFIT_SELL_DATA_VALUE = 107;
    /**
     * <code>ACHIEVEMENT_DATA = 108;</code>
     *
     * <pre>
     *成就数据
     * </pre>
     */
    public static final int ACHIEVEMENT_DATA_VALUE = 108;
    /**
     * <code>GCompSelfGuess = 109;</code>
     *
     * <pre>
     *玩家个人竞猜的项（只包含基本信息）--登录同步
     * </pre>
     */
    public static final int GCompSelfGuess_VALUE = 109;
    /**
     * <code>GCompSelfGuessDetail = 110;</code>
     *
     * <pre>
     *玩家竞猜的项的详细信息（包括两个对战帮派的基本信息）--登录同步
     * </pre>
     */
    public static final int GCompSelfGuessDetail_VALUE = 110;
    /**
     * <code>GCompCanGuessItem = 111;</code>
     *
     * <pre>
     *和110用的相同的结构，但表示的是，当前可以竞猜的项（请求同步）
     * </pre>
     */
    public static final int GCompCanGuessItem_VALUE = 111;
    /**
     * <code>GCompMatchEnemy = 112;</code>
     *
     * <pre>
     *匹配敌人数据
     * </pre>
     */
    public static final int GCompMatchEnemy_VALUE = 112;
    /**
     * <code>GCompMember = 113;</code>
     *
     * <pre>
     * 帮战个人信息
     * </pre>
     */
    public static final int GCompMember_VALUE = 113;
    /**
     * <code>DropSameScene = 114;</code>
     *
     * <pre>
     *删除一个同屏场景
     * </pre>
     */
    public static final int DropSameScene_VALUE = 114;


    public final int getNumber() { return value; }

    public static eSynType valueOf(int value) {
      switch (value) {
        case 1: return COPY_LEVEL_RECORD;
        case 2: return COPY_MAP_RECORD;
        case 3: return SECRETAREA_BASE_INFO;
        case 4: return SECRETAREA_DEF_RECORD;
        case 5: return SECRETAREA_USER_INFO;
        case 6: return SECRETAREA_DEFEND_TEAM_INFO;
        case 7: return SECRETAREA_USER_RECORD;
        case 8: return FASHION_ITEM;
        case 9: return EQUIP_ITEM;
        case 10: return SKILL_ITEM;
        case 11: return INLAY_ITEM;
        case 12: return ROLE_ATTR_ITEM;
        case 13: return ROLE_BASE_ITEM;
        case 14: return USER_HEROS;
        case 15: return USER_DATA;
        case 16: return USER_GAME_DATA;
        case 17: return USER_MAGIC;
        case 18: return USER_ITEM_BAG;
        case 19: return DailyActivity;
        case 20: return Guild;
        case 21: return Pve_UnendingWar;
        case 22: return Pve_Trial;
        case 23: return Store_Data;
        case 24: return TASK_DATA;
        case 25: return VIP_DATA;
        case 26: return SETTING_DATA;
        case 27: return GUILD_USER_INFO;
        case 28: return SEVEN_DAY_GIF;
        case 29: return FRESHER_ATIVITY_DATA;
        case 30: return ASSISTANT;
        case 31: return VERSION_COPY;
        case 32: return GroupBaseData;
        case 33: return GroupMemberData;
        case 34: return GroupLog;
        case 35: return UserGroupAttributeData;
        case 36: return GROUP_COPY_LEVEL;
        case 37: return GROUP_COPY_MAP;
        case 38: return GROUP_COPY_REWARD;
        case 39: return GroupApplyMemberData;
        case 40: return GroupResearchSkill;
        case 41: return GroupStudySkill;
        case 42: return Charge;
        case 43: return POWER_INFO;
        case 44: return USER_TMP_GAME_DATA;
        case 45: return HERO_FETTERS;
        case 46: return FIX_NORM_EQUIP;
        case 47: return FIX_EXP_EQUIP;
        case 48: return UserGroupSecretData;
        case 49: return GroupSecretData;
        case 50: return MagicSecretData;
        case 51: return MagicChapterData;
        case 52: return SECRETAREA_TEAM_INFO;
        case 53: return USE_GROUP_COPY_DATA;
        case 54: return GROUP_COPY_SERVER_RANK;
        case 55: return GROUP_ITEM_DROP_APPLY;
        case 60: return ActivityCountType;
        case 61: return ActivityTimeCardType;
        case 62: return ActivityRateType;
        case 63: return ActivityDateType;
        case 64: return ActivityTimeSaleType;
        case 65: return ActivityDateSaleType;
        case 66: return ActivityRankType;
        case 67: return ActivityExchangeType;
        case 68: return ActivityTimeCountType;
        case 69: return ActivityDailyType;
        case 70: return ActivityVitalityType;
        case 71: return ActivityDailyDiscountType;
        case 72: return ActivityVipDiscountType;
        case 73: return ActivityRedEnvelopeType;
        case 74: return ActivityFortuneCatType;
        case 75: return ActivityLimitHeroType;
        case 76: return ActivityDailyRechargeType;
        case 77: return ActivityRetrieveType;
        case 80: return QuestionList;
        case 81: return GFBiddingData;
        case 82: return GFDefendArmyData;
        case 83: return GFightOnlineGroupData;
        case 84: return GFightOnlinePersonalData;
        case 85: return GFightOnlineResourceData;
        case 86: return MajorData;
        case 87: return GFightSimpleLeader;
        case 88: return GFightFinalReward;
        case 89: return EmbattleInfo;
        case 90: return MAGICEQUIP_FETTER;
        case 91: return USER_TEAM_BATTLE;
        case 92: return TEAM_BATTLE_TEAM;
        case 93: return WB_DATA;
        case 94: return WB_USER_DATA;
        case 95: return RANDOM_BOSS_DATA;
        case 96: return WB_RANK_DATA;
        case 97: return GC_PREPARE_POSITION;
        case 98: return FIGHTING_GROWTH_DATA;
        case 100: return GCompBase;
        case 101: return GCompAudition;
        case 102: return GCompDetailInfo;
        case 103: return GCompFightingRecord;
        case 104: return GCompMatch;
        case 105: return GCompOnlineMember;
        case 106: return GCompTeamHolder;
        case 107: return BENEFIT_SELL_DATA;
        case 108: return ACHIEVEMENT_DATA;
        case 109: return GCompSelfGuess;
        case 110: return GCompSelfGuessDetail;
        case 111: return GCompCanGuessItem;
        case 112: return GCompMatchEnemy;
        case 113: return GCompMember;
        case 114: return DropSameScene;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<eSynType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<eSynType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<eSynType>() {
            public eSynType findValueByNumber(int number) {
              return eSynType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final eSynType[] VALUES = values();

    public static eSynType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private eSynType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DataSyn.eSynType)
  }

  /**
   * Protobuf enum {@code DataSyn.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SynByType = 1;</code>
     *
     * <pre>
     * </pre>
     */
    SynByType(0, 1),
    ;

    /**
     * <code>SynByType = 1;</code>
     *
     * <pre>
     * </pre>
     */
    public static final int SynByType_VALUE = 1;


    public final int getNumber() { return value; }

    public static RequestType valueOf(int value) {
      switch (value) {
        case 1: return SynByType;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DataSyn.RequestType)
  }

  public interface SynDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string id = 1;
    /**
     * <code>required string id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    // optional string jsonData = 2;
    /**
     * <code>optional string jsonData = 2;</code>
     */
    boolean hasJsonData();
    /**
     * <code>optional string jsonData = 2;</code>
     */
    java.lang.String getJsonData();
    /**
     * <code>optional string jsonData = 2;</code>
     */
    com.google.protobuf.ByteString
        getJsonDataBytes();
  }
  /**
   * Protobuf type {@code DataSyn.SynData}
   */
  public static final class SynData extends
      com.google.protobuf.GeneratedMessage
      implements SynDataOrBuilder {
    // Use SynData.newBuilder() to construct.
    private SynData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SynData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SynData defaultInstance;
    public static SynData getDefaultInstance() {
      return defaultInstance;
    }

    public SynData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SynData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              jsonData_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_SynData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_SynData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.SynData.class, com.rwproto.DataSynProtos.SynData.Builder.class);
    }

    public static com.google.protobuf.Parser<SynData> PARSER =
        new com.google.protobuf.AbstractParser<SynData>() {
      public SynData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SynData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SynData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>required string id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string jsonData = 2;
    public static final int JSONDATA_FIELD_NUMBER = 2;
    private java.lang.Object jsonData_;
    /**
     * <code>optional string jsonData = 2;</code>
     */
    public boolean hasJsonData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string jsonData = 2;</code>
     */
    public java.lang.String getJsonData() {
      java.lang.Object ref = jsonData_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          jsonData_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string jsonData = 2;</code>
     */
    public com.google.protobuf.ByteString
        getJsonDataBytes() {
      java.lang.Object ref = jsonData_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonData_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = "";
      jsonData_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getJsonDataBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getJsonDataBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.SynData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.SynData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.SynData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.SynData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.SynData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.SynData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.SynDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_SynData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_SynData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.SynData.class, com.rwproto.DataSynProtos.SynData.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.SynData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        jsonData_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_SynData_descriptor;
      }

      public com.rwproto.DataSynProtos.SynData getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.SynData.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.SynData build() {
        com.rwproto.DataSynProtos.SynData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.SynData buildPartial() {
        com.rwproto.DataSynProtos.SynData result = new com.rwproto.DataSynProtos.SynData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jsonData_ = jsonData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.SynData) {
          return mergeFrom((com.rwproto.DataSynProtos.SynData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.SynData other) {
        if (other == com.rwproto.DataSynProtos.SynData.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasJsonData()) {
          bitField0_ |= 0x00000002;
          jsonData_ = other.jsonData_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.SynData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.SynData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string id = 1;
      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      // optional string jsonData = 2;
      private java.lang.Object jsonData_ = "";
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public boolean hasJsonData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public java.lang.String getJsonData() {
        java.lang.Object ref = jsonData_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          jsonData_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public com.google.protobuf.ByteString
          getJsonDataBytes() {
        java.lang.Object ref = jsonData_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jsonData_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public Builder setJsonData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        jsonData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public Builder clearJsonData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jsonData_ = getDefaultInstance().getJsonData();
        onChanged();
        return this;
      }
      /**
       * <code>optional string jsonData = 2;</code>
       */
      public Builder setJsonDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        jsonData_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.SynData)
    }

    static {
      defaultInstance = new SynData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.SynData)
  }

  public interface MsgDataSynListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .DataSyn.MsgDataSyn msgDataSyn = 3;
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    java.util.List<com.rwproto.DataSynProtos.MsgDataSyn> 
        getMsgDataSynList();
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    com.rwproto.DataSynProtos.MsgDataSyn getMsgDataSyn(int index);
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    int getMsgDataSynCount();
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.DataSynProtos.MsgDataSynOrBuilder> 
        getMsgDataSynOrBuilderList();
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    com.rwproto.DataSynProtos.MsgDataSynOrBuilder getMsgDataSynOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DataSyn.MsgDataSynList}
   */
  public static final class MsgDataSynList extends
      com.google.protobuf.GeneratedMessage
      implements MsgDataSynListOrBuilder {
    // Use MsgDataSynList.newBuilder() to construct.
    private MsgDataSynList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MsgDataSynList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MsgDataSynList defaultInstance;
    public static MsgDataSynList getDefaultInstance() {
      return defaultInstance;
    }

    public MsgDataSynList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MsgDataSynList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                msgDataSyn_ = new java.util.ArrayList<com.rwproto.DataSynProtos.MsgDataSyn>();
                mutable_bitField0_ |= 0x00000001;
              }
              msgDataSyn_.add(input.readMessage(com.rwproto.DataSynProtos.MsgDataSyn.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          msgDataSyn_ = java.util.Collections.unmodifiableList(msgDataSyn_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.MsgDataSynList.class, com.rwproto.DataSynProtos.MsgDataSynList.Builder.class);
    }

    public static com.google.protobuf.Parser<MsgDataSynList> PARSER =
        new com.google.protobuf.AbstractParser<MsgDataSynList>() {
      public MsgDataSynList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgDataSynList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgDataSynList> getParserForType() {
      return PARSER;
    }

    // repeated .DataSyn.MsgDataSyn msgDataSyn = 3;
    public static final int MSGDATASYN_FIELD_NUMBER = 3;
    private java.util.List<com.rwproto.DataSynProtos.MsgDataSyn> msgDataSyn_;
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    public java.util.List<com.rwproto.DataSynProtos.MsgDataSyn> getMsgDataSynList() {
      return msgDataSyn_;
    }
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.DataSynProtos.MsgDataSynOrBuilder> 
        getMsgDataSynOrBuilderList() {
      return msgDataSyn_;
    }
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    public int getMsgDataSynCount() {
      return msgDataSyn_.size();
    }
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    public com.rwproto.DataSynProtos.MsgDataSyn getMsgDataSyn(int index) {
      return msgDataSyn_.get(index);
    }
    /**
     * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
     *
     * <pre>
     *同步数列表
     * </pre>
     */
    public com.rwproto.DataSynProtos.MsgDataSynOrBuilder getMsgDataSynOrBuilder(
        int index) {
      return msgDataSyn_.get(index);
    }

    private void initFields() {
      msgDataSyn_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getMsgDataSynCount(); i++) {
        if (!getMsgDataSyn(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < msgDataSyn_.size(); i++) {
        output.writeMessage(3, msgDataSyn_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < msgDataSyn_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, msgDataSyn_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.MsgDataSynList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.MsgDataSynList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.MsgDataSynListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.MsgDataSynList.class, com.rwproto.DataSynProtos.MsgDataSynList.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.MsgDataSynList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMsgDataSynFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (msgDataSynBuilder_ == null) {
          msgDataSyn_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          msgDataSynBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynList_descriptor;
      }

      public com.rwproto.DataSynProtos.MsgDataSynList getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.MsgDataSynList.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.MsgDataSynList build() {
        com.rwproto.DataSynProtos.MsgDataSynList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.MsgDataSynList buildPartial() {
        com.rwproto.DataSynProtos.MsgDataSynList result = new com.rwproto.DataSynProtos.MsgDataSynList(this);
        int from_bitField0_ = bitField0_;
        if (msgDataSynBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            msgDataSyn_ = java.util.Collections.unmodifiableList(msgDataSyn_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.msgDataSyn_ = msgDataSyn_;
        } else {
          result.msgDataSyn_ = msgDataSynBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.MsgDataSynList) {
          return mergeFrom((com.rwproto.DataSynProtos.MsgDataSynList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.MsgDataSynList other) {
        if (other == com.rwproto.DataSynProtos.MsgDataSynList.getDefaultInstance()) return this;
        if (msgDataSynBuilder_ == null) {
          if (!other.msgDataSyn_.isEmpty()) {
            if (msgDataSyn_.isEmpty()) {
              msgDataSyn_ = other.msgDataSyn_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMsgDataSynIsMutable();
              msgDataSyn_.addAll(other.msgDataSyn_);
            }
            onChanged();
          }
        } else {
          if (!other.msgDataSyn_.isEmpty()) {
            if (msgDataSynBuilder_.isEmpty()) {
              msgDataSynBuilder_.dispose();
              msgDataSynBuilder_ = null;
              msgDataSyn_ = other.msgDataSyn_;
              bitField0_ = (bitField0_ & ~0x00000001);
              msgDataSynBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMsgDataSynFieldBuilder() : null;
            } else {
              msgDataSynBuilder_.addAllMessages(other.msgDataSyn_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMsgDataSynCount(); i++) {
          if (!getMsgDataSyn(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.MsgDataSynList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.MsgDataSynList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .DataSyn.MsgDataSyn msgDataSyn = 3;
      private java.util.List<com.rwproto.DataSynProtos.MsgDataSyn> msgDataSyn_ =
        java.util.Collections.emptyList();
      private void ensureMsgDataSynIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          msgDataSyn_ = new java.util.ArrayList<com.rwproto.DataSynProtos.MsgDataSyn>(msgDataSyn_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.MsgDataSyn, com.rwproto.DataSynProtos.MsgDataSyn.Builder, com.rwproto.DataSynProtos.MsgDataSynOrBuilder> msgDataSynBuilder_;

      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.MsgDataSyn> getMsgDataSynList() {
        if (msgDataSynBuilder_ == null) {
          return java.util.Collections.unmodifiableList(msgDataSyn_);
        } else {
          return msgDataSynBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public int getMsgDataSynCount() {
        if (msgDataSynBuilder_ == null) {
          return msgDataSyn_.size();
        } else {
          return msgDataSynBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public com.rwproto.DataSynProtos.MsgDataSyn getMsgDataSyn(int index) {
        if (msgDataSynBuilder_ == null) {
          return msgDataSyn_.get(index);
        } else {
          return msgDataSynBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder setMsgDataSyn(
          int index, com.rwproto.DataSynProtos.MsgDataSyn value) {
        if (msgDataSynBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgDataSynIsMutable();
          msgDataSyn_.set(index, value);
          onChanged();
        } else {
          msgDataSynBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder setMsgDataSyn(
          int index, com.rwproto.DataSynProtos.MsgDataSyn.Builder builderForValue) {
        if (msgDataSynBuilder_ == null) {
          ensureMsgDataSynIsMutable();
          msgDataSyn_.set(index, builderForValue.build());
          onChanged();
        } else {
          msgDataSynBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder addMsgDataSyn(com.rwproto.DataSynProtos.MsgDataSyn value) {
        if (msgDataSynBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgDataSynIsMutable();
          msgDataSyn_.add(value);
          onChanged();
        } else {
          msgDataSynBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder addMsgDataSyn(
          int index, com.rwproto.DataSynProtos.MsgDataSyn value) {
        if (msgDataSynBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgDataSynIsMutable();
          msgDataSyn_.add(index, value);
          onChanged();
        } else {
          msgDataSynBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder addMsgDataSyn(
          com.rwproto.DataSynProtos.MsgDataSyn.Builder builderForValue) {
        if (msgDataSynBuilder_ == null) {
          ensureMsgDataSynIsMutable();
          msgDataSyn_.add(builderForValue.build());
          onChanged();
        } else {
          msgDataSynBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder addMsgDataSyn(
          int index, com.rwproto.DataSynProtos.MsgDataSyn.Builder builderForValue) {
        if (msgDataSynBuilder_ == null) {
          ensureMsgDataSynIsMutable();
          msgDataSyn_.add(index, builderForValue.build());
          onChanged();
        } else {
          msgDataSynBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder addAllMsgDataSyn(
          java.lang.Iterable<? extends com.rwproto.DataSynProtos.MsgDataSyn> values) {
        if (msgDataSynBuilder_ == null) {
          ensureMsgDataSynIsMutable();
          super.addAll(values, msgDataSyn_);
          onChanged();
        } else {
          msgDataSynBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder clearMsgDataSyn() {
        if (msgDataSynBuilder_ == null) {
          msgDataSyn_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          msgDataSynBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public Builder removeMsgDataSyn(int index) {
        if (msgDataSynBuilder_ == null) {
          ensureMsgDataSynIsMutable();
          msgDataSyn_.remove(index);
          onChanged();
        } else {
          msgDataSynBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public com.rwproto.DataSynProtos.MsgDataSyn.Builder getMsgDataSynBuilder(
          int index) {
        return getMsgDataSynFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public com.rwproto.DataSynProtos.MsgDataSynOrBuilder getMsgDataSynOrBuilder(
          int index) {
        if (msgDataSynBuilder_ == null) {
          return msgDataSyn_.get(index);  } else {
          return msgDataSynBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.DataSynProtos.MsgDataSynOrBuilder> 
           getMsgDataSynOrBuilderList() {
        if (msgDataSynBuilder_ != null) {
          return msgDataSynBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(msgDataSyn_);
        }
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public com.rwproto.DataSynProtos.MsgDataSyn.Builder addMsgDataSynBuilder() {
        return getMsgDataSynFieldBuilder().addBuilder(
            com.rwproto.DataSynProtos.MsgDataSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public com.rwproto.DataSynProtos.MsgDataSyn.Builder addMsgDataSynBuilder(
          int index) {
        return getMsgDataSynFieldBuilder().addBuilder(
            index, com.rwproto.DataSynProtos.MsgDataSyn.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.MsgDataSyn msgDataSyn = 3;</code>
       *
       * <pre>
       *同步数列表
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.MsgDataSyn.Builder> 
           getMsgDataSynBuilderList() {
        return getMsgDataSynFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.MsgDataSyn, com.rwproto.DataSynProtos.MsgDataSyn.Builder, com.rwproto.DataSynProtos.MsgDataSynOrBuilder> 
          getMsgDataSynFieldBuilder() {
        if (msgDataSynBuilder_ == null) {
          msgDataSynBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.DataSynProtos.MsgDataSyn, com.rwproto.DataSynProtos.MsgDataSyn.Builder, com.rwproto.DataSynProtos.MsgDataSynOrBuilder>(
                  msgDataSyn_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          msgDataSyn_ = null;
        }
        return msgDataSynBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.MsgDataSynList)
    }

    static {
      defaultInstance = new MsgDataSynList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.MsgDataSynList)
  }

  public interface DataSynVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .DataSyn.eSynType synType = 1;
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     */
    boolean hasSynType();
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     */
    com.rwproto.DataSynProtos.eSynType getSynType();

    // required int32 version = 2;
    /**
     * <code>required int32 version = 2;</code>
     */
    boolean hasVersion();
    /**
     * <code>required int32 version = 2;</code>
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code DataSyn.DataSynVersion}
   */
  public static final class DataSynVersion extends
      com.google.protobuf.GeneratedMessage
      implements DataSynVersionOrBuilder {
    // Use DataSynVersion.newBuilder() to construct.
    private DataSynVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataSynVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataSynVersion defaultInstance;
    public static DataSynVersion getDefaultInstance() {
      return defaultInstance;
    }

    public DataSynVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataSynVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.DataSynProtos.eSynType value = com.rwproto.DataSynProtos.eSynType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                synType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              version_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.DataSynVersion.class, com.rwproto.DataSynProtos.DataSynVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<DataSynVersion> PARSER =
        new com.google.protobuf.AbstractParser<DataSynVersion>() {
      public DataSynVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSynVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataSynVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .DataSyn.eSynType synType = 1;
    public static final int SYNTYPE_FIELD_NUMBER = 1;
    private com.rwproto.DataSynProtos.eSynType synType_;
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     */
    public boolean hasSynType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     */
    public com.rwproto.DataSynProtos.eSynType getSynType() {
      return synType_;
    }

    // required int32 version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private int version_;
    /**
     * <code>required int32 version = 2;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 version = 2;</code>
     */
    public int getVersion() {
      return version_;
    }

    private void initFields() {
      synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
      version_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSynType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, synType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, synType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.DataSynVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.DataSynVersion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.DataSynVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.DataSynVersion.class, com.rwproto.DataSynProtos.DataSynVersion.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.DataSynVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynVersion_descriptor;
      }

      public com.rwproto.DataSynProtos.DataSynVersion getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.DataSynVersion build() {
        com.rwproto.DataSynProtos.DataSynVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.DataSynVersion buildPartial() {
        com.rwproto.DataSynProtos.DataSynVersion result = new com.rwproto.DataSynProtos.DataSynVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.synType_ = synType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.DataSynVersion) {
          return mergeFrom((com.rwproto.DataSynProtos.DataSynVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.DataSynVersion other) {
        if (other == com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance()) return this;
        if (other.hasSynType()) {
          setSynType(other.getSynType());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSynType()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.DataSynVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.DataSynVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .DataSyn.eSynType synType = 1;
      private com.rwproto.DataSynProtos.eSynType synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       */
      public boolean hasSynType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       */
      public com.rwproto.DataSynProtos.eSynType getSynType() {
        return synType_;
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       */
      public Builder setSynType(com.rwproto.DataSynProtos.eSynType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        synType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       */
      public Builder clearSynType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
        onChanged();
        return this;
      }

      // required int32 version = 2;
      private int version_ ;
      /**
       * <code>required int32 version = 2;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 version = 2;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>required int32 version = 2;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 version = 2;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.DataSynVersion)
    }

    static {
      defaultInstance = new DataSynVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.DataSynVersion)
  }

  public interface MsgDataSynVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .DataSyn.DataSynVersion version = 1;
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    java.util.List<com.rwproto.DataSynProtos.DataSynVersion> 
        getVersionList();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    com.rwproto.DataSynProtos.DataSynVersion getVersion(int index);
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    int getVersionCount();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
        getVersionOrBuilderList();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DataSyn.MsgDataSynVersion}
   */
  public static final class MsgDataSynVersion extends
      com.google.protobuf.GeneratedMessage
      implements MsgDataSynVersionOrBuilder {
    // Use MsgDataSynVersion.newBuilder() to construct.
    private MsgDataSynVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MsgDataSynVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MsgDataSynVersion defaultInstance;
    public static MsgDataSynVersion getDefaultInstance() {
      return defaultInstance;
    }

    public MsgDataSynVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MsgDataSynVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                version_ = new java.util.ArrayList<com.rwproto.DataSynProtos.DataSynVersion>();
                mutable_bitField0_ |= 0x00000001;
              }
              version_.add(input.readMessage(com.rwproto.DataSynProtos.DataSynVersion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          version_ = java.util.Collections.unmodifiableList(version_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.MsgDataSynVersion.class, com.rwproto.DataSynProtos.MsgDataSynVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<MsgDataSynVersion> PARSER =
        new com.google.protobuf.AbstractParser<MsgDataSynVersion>() {
      public MsgDataSynVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgDataSynVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgDataSynVersion> getParserForType() {
      return PARSER;
    }

    // repeated .DataSyn.DataSynVersion version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private java.util.List<com.rwproto.DataSynProtos.DataSynVersion> version_;
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    public java.util.List<com.rwproto.DataSynProtos.DataSynVersion> getVersionList() {
      return version_;
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    public java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
        getVersionOrBuilderList() {
      return version_;
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    public int getVersionCount() {
      return version_.size();
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    public com.rwproto.DataSynProtos.DataSynVersion getVersion(int index) {
      return version_.get(index);
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
     */
    public com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
        int index) {
      return version_.get(index);
    }

    private void initFields() {
      version_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getVersionCount(); i++) {
        if (!getVersion(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < version_.size(); i++) {
        output.writeMessage(1, version_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < version_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, version_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSynVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.MsgDataSynVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.MsgDataSynVersion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.MsgDataSynVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.MsgDataSynVersion.class, com.rwproto.DataSynProtos.MsgDataSynVersion.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.MsgDataSynVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (versionBuilder_ == null) {
          version_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          versionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSynVersion_descriptor;
      }

      public com.rwproto.DataSynProtos.MsgDataSynVersion getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.MsgDataSynVersion.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.MsgDataSynVersion build() {
        com.rwproto.DataSynProtos.MsgDataSynVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.MsgDataSynVersion buildPartial() {
        com.rwproto.DataSynProtos.MsgDataSynVersion result = new com.rwproto.DataSynProtos.MsgDataSynVersion(this);
        int from_bitField0_ = bitField0_;
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            version_ = java.util.Collections.unmodifiableList(version_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.MsgDataSynVersion) {
          return mergeFrom((com.rwproto.DataSynProtos.MsgDataSynVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.MsgDataSynVersion other) {
        if (other == com.rwproto.DataSynProtos.MsgDataSynVersion.getDefaultInstance()) return this;
        if (versionBuilder_ == null) {
          if (!other.version_.isEmpty()) {
            if (version_.isEmpty()) {
              version_ = other.version_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVersionIsMutable();
              version_.addAll(other.version_);
            }
            onChanged();
          }
        } else {
          if (!other.version_.isEmpty()) {
            if (versionBuilder_.isEmpty()) {
              versionBuilder_.dispose();
              versionBuilder_ = null;
              version_ = other.version_;
              bitField0_ = (bitField0_ & ~0x00000001);
              versionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVersionFieldBuilder() : null;
            } else {
              versionBuilder_.addAllMessages(other.version_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getVersionCount(); i++) {
          if (!getVersion(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.MsgDataSynVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.MsgDataSynVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .DataSyn.DataSynVersion version = 1;
      private java.util.List<com.rwproto.DataSynProtos.DataSynVersion> version_ =
        java.util.Collections.emptyList();
      private void ensureVersionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          version_ = new java.util.ArrayList<com.rwproto.DataSynProtos.DataSynVersion>(version_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder> versionBuilder_;

      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public java.util.List<com.rwproto.DataSynProtos.DataSynVersion> getVersionList() {
        if (versionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(version_);
        } else {
          return versionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public int getVersionCount() {
        if (versionBuilder_ == null) {
          return version_.size();
        } else {
          return versionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public com.rwproto.DataSynProtos.DataSynVersion getVersion(int index) {
        if (versionBuilder_ == null) {
          return version_.get(index);
        } else {
          return versionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder setVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.set(index, value);
          onChanged();
        } else {
          versionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder setVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.set(index, builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder addVersion(com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.add(value);
          onChanged();
        } else {
          versionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder addVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.add(index, value);
          onChanged();
        } else {
          versionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder addVersion(
          com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.add(builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder addVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.add(index, builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder addAllVersion(
          java.lang.Iterable<? extends com.rwproto.DataSynProtos.DataSynVersion> values) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          super.addAll(values, version_);
          onChanged();
        } else {
          versionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public Builder removeVersion(int index) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.remove(index);
          onChanged();
        } else {
          versionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder getVersionBuilder(
          int index) {
        return getVersionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
          int index) {
        if (versionBuilder_ == null) {
          return version_.get(index);  } else {
          return versionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
           getVersionOrBuilderList() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(version_);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder addVersionBuilder() {
        return getVersionFieldBuilder().addBuilder(
            com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder addVersionBuilder(
          int index) {
        return getVersionFieldBuilder().addBuilder(
            index, com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 1;</code>
       */
      public java.util.List<com.rwproto.DataSynProtos.DataSynVersion.Builder> 
           getVersionBuilderList() {
        return getVersionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder>(
                  version_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.MsgDataSynVersion)
    }

    static {
      defaultInstance = new MsgDataSynVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.MsgDataSynVersion)
  }

  public interface MsgDataSynOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .DataSyn.eSynType synType = 1;
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     *
     * <pre>
     *同步数据类型
     * </pre>
     */
    boolean hasSynType();
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     *
     * <pre>
     *同步数据类型
     * </pre>
     */
    com.rwproto.DataSynProtos.eSynType getSynType();

    // optional .DataSyn.eSynOpType synOpType = 2;
    /**
     * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
     *
     * <pre>
     *同步操作类型
     * </pre>
     */
    boolean hasSynOpType();
    /**
     * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
     *
     * <pre>
     *同步操作类型
     * </pre>
     */
    com.rwproto.DataSynProtos.eSynOpType getSynOpType();

    // repeated .DataSyn.SynData SynData = 3;
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    java.util.List<com.rwproto.DataSynProtos.SynData> 
        getSynDataList();
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    com.rwproto.DataSynProtos.SynData getSynData(int index);
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    int getSynDataCount();
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    java.util.List<? extends com.rwproto.DataSynProtos.SynDataOrBuilder> 
        getSynDataOrBuilderList();
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    com.rwproto.DataSynProtos.SynDataOrBuilder getSynDataOrBuilder(
        int index);

    // optional int32 version = 4;
    /**
     * <code>optional int32 version = 4;</code>
     *
     * <pre>
     *数据版本号
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 4;</code>
     *
     * <pre>
     *数据版本号
     * </pre>
     */
    int getVersion();

    // optional string groupId = 5;
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    java.lang.String getGroupId();
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    com.google.protobuf.ByteString
        getGroupIdBytes();

    // optional string optMap = 6;
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    boolean hasOptMap();
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    java.lang.String getOptMap();
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    com.google.protobuf.ByteString
        getOptMapBytes();
  }
  /**
   * Protobuf type {@code DataSyn.MsgDataSyn}
   */
  public static final class MsgDataSyn extends
      com.google.protobuf.GeneratedMessage
      implements MsgDataSynOrBuilder {
    // Use MsgDataSyn.newBuilder() to construct.
    private MsgDataSyn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MsgDataSyn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MsgDataSyn defaultInstance;
    public static MsgDataSyn getDefaultInstance() {
      return defaultInstance;
    }

    public MsgDataSyn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MsgDataSyn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.DataSynProtos.eSynType value = com.rwproto.DataSynProtos.eSynType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                synType_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.rwproto.DataSynProtos.eSynOpType value = com.rwproto.DataSynProtos.eSynOpType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                synOpType_ = value;
              }
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                synData_ = new java.util.ArrayList<com.rwproto.DataSynProtos.SynData>();
                mutable_bitField0_ |= 0x00000004;
              }
              synData_.add(input.readMessage(com.rwproto.DataSynProtos.SynData.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              version_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              groupId_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              optMap_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          synData_ = java.util.Collections.unmodifiableList(synData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSyn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSyn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.MsgDataSyn.class, com.rwproto.DataSynProtos.MsgDataSyn.Builder.class);
    }

    public static com.google.protobuf.Parser<MsgDataSyn> PARSER =
        new com.google.protobuf.AbstractParser<MsgDataSyn>() {
      public MsgDataSyn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MsgDataSyn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MsgDataSyn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .DataSyn.eSynType synType = 1;
    public static final int SYNTYPE_FIELD_NUMBER = 1;
    private com.rwproto.DataSynProtos.eSynType synType_;
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     *
     * <pre>
     *同步数据类型
     * </pre>
     */
    public boolean hasSynType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .DataSyn.eSynType synType = 1;</code>
     *
     * <pre>
     *同步数据类型
     * </pre>
     */
    public com.rwproto.DataSynProtos.eSynType getSynType() {
      return synType_;
    }

    // optional .DataSyn.eSynOpType synOpType = 2;
    public static final int SYNOPTYPE_FIELD_NUMBER = 2;
    private com.rwproto.DataSynProtos.eSynOpType synOpType_;
    /**
     * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
     *
     * <pre>
     *同步操作类型
     * </pre>
     */
    public boolean hasSynOpType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
     *
     * <pre>
     *同步操作类型
     * </pre>
     */
    public com.rwproto.DataSynProtos.eSynOpType getSynOpType() {
      return synOpType_;
    }

    // repeated .DataSyn.SynData SynData = 3;
    public static final int SYNDATA_FIELD_NUMBER = 3;
    private java.util.List<com.rwproto.DataSynProtos.SynData> synData_;
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    public java.util.List<com.rwproto.DataSynProtos.SynData> getSynDataList() {
      return synData_;
    }
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    public java.util.List<? extends com.rwproto.DataSynProtos.SynDataOrBuilder> 
        getSynDataOrBuilderList() {
      return synData_;
    }
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    public int getSynDataCount() {
      return synData_.size();
    }
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    public com.rwproto.DataSynProtos.SynData getSynData(int index) {
      return synData_.get(index);
    }
    /**
     * <code>repeated .DataSyn.SynData SynData = 3;</code>
     *
     * <pre>
     *同步数据
     * </pre>
     */
    public com.rwproto.DataSynProtos.SynDataOrBuilder getSynDataOrBuilder(
        int index) {
      return synData_.get(index);
    }

    // optional int32 version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private int version_;
    /**
     * <code>optional int32 version = 4;</code>
     *
     * <pre>
     *数据版本号
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 version = 4;</code>
     *
     * <pre>
     *数据版本号
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    // optional string groupId = 5;
    public static final int GROUPID_FIELD_NUMBER = 5;
    private java.lang.Object groupId_;
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    public java.lang.String getGroupId() {
      java.lang.Object ref = groupId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          groupId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string groupId = 5;</code>
     *
     * <pre>
     *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGroupIdBytes() {
      java.lang.Object ref = groupId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string optMap = 6;
    public static final int OPTMAP_FIELD_NUMBER = 6;
    private java.lang.Object optMap_;
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    public boolean hasOptMap() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    public java.lang.String getOptMap() {
      java.lang.Object ref = optMap_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          optMap_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string optMap = 6;</code>
     *
     * <pre>
     *长转短映射表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOptMapBytes() {
      java.lang.Object ref = optMap_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        optMap_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
      synOpType_ = com.rwproto.DataSynProtos.eSynOpType.UPDATE_LIST;
      synData_ = java.util.Collections.emptyList();
      version_ = 0;
      groupId_ = "";
      optMap_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSynType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSynDataCount(); i++) {
        if (!getSynData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, synType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, synOpType_.getNumber());
      }
      for (int i = 0; i < synData_.size(); i++) {
        output.writeMessage(3, synData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getGroupIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getOptMapBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, synType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, synOpType_.getNumber());
      }
      for (int i = 0; i < synData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, synData_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getGroupIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getOptMapBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.MsgDataSyn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.MsgDataSyn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.MsgDataSyn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.MsgDataSynOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSyn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSyn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.MsgDataSyn.class, com.rwproto.DataSynProtos.MsgDataSyn.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.MsgDataSyn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSynDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
        bitField0_ = (bitField0_ & ~0x00000001);
        synOpType_ = com.rwproto.DataSynProtos.eSynOpType.UPDATE_LIST;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (synDataBuilder_ == null) {
          synData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          synDataBuilder_.clear();
        }
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        groupId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        optMap_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_MsgDataSyn_descriptor;
      }

      public com.rwproto.DataSynProtos.MsgDataSyn getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.MsgDataSyn.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.MsgDataSyn build() {
        com.rwproto.DataSynProtos.MsgDataSyn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.MsgDataSyn buildPartial() {
        com.rwproto.DataSynProtos.MsgDataSyn result = new com.rwproto.DataSynProtos.MsgDataSyn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.synType_ = synType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.synOpType_ = synOpType_;
        if (synDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            synData_ = java.util.Collections.unmodifiableList(synData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.synData_ = synData_;
        } else {
          result.synData_ = synDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.optMap_ = optMap_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.MsgDataSyn) {
          return mergeFrom((com.rwproto.DataSynProtos.MsgDataSyn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.MsgDataSyn other) {
        if (other == com.rwproto.DataSynProtos.MsgDataSyn.getDefaultInstance()) return this;
        if (other.hasSynType()) {
          setSynType(other.getSynType());
        }
        if (other.hasSynOpType()) {
          setSynOpType(other.getSynOpType());
        }
        if (synDataBuilder_ == null) {
          if (!other.synData_.isEmpty()) {
            if (synData_.isEmpty()) {
              synData_ = other.synData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSynDataIsMutable();
              synData_.addAll(other.synData_);
            }
            onChanged();
          }
        } else {
          if (!other.synData_.isEmpty()) {
            if (synDataBuilder_.isEmpty()) {
              synDataBuilder_.dispose();
              synDataBuilder_ = null;
              synData_ = other.synData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              synDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSynDataFieldBuilder() : null;
            } else {
              synDataBuilder_.addAllMessages(other.synData_);
            }
          }
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasGroupId()) {
          bitField0_ |= 0x00000010;
          groupId_ = other.groupId_;
          onChanged();
        }
        if (other.hasOptMap()) {
          bitField0_ |= 0x00000020;
          optMap_ = other.optMap_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSynType()) {
          
          return false;
        }
        for (int i = 0; i < getSynDataCount(); i++) {
          if (!getSynData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.MsgDataSyn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.MsgDataSyn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .DataSyn.eSynType synType = 1;
      private com.rwproto.DataSynProtos.eSynType synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       *
       * <pre>
       *同步数据类型
       * </pre>
       */
      public boolean hasSynType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       *
       * <pre>
       *同步数据类型
       * </pre>
       */
      public com.rwproto.DataSynProtos.eSynType getSynType() {
        return synType_;
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       *
       * <pre>
       *同步数据类型
       * </pre>
       */
      public Builder setSynType(com.rwproto.DataSynProtos.eSynType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        synType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .DataSyn.eSynType synType = 1;</code>
       *
       * <pre>
       *同步数据类型
       * </pre>
       */
      public Builder clearSynType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        synType_ = com.rwproto.DataSynProtos.eSynType.COPY_LEVEL_RECORD;
        onChanged();
        return this;
      }

      // optional .DataSyn.eSynOpType synOpType = 2;
      private com.rwproto.DataSynProtos.eSynOpType synOpType_ = com.rwproto.DataSynProtos.eSynOpType.UPDATE_LIST;
      /**
       * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
       *
       * <pre>
       *同步操作类型
       * </pre>
       */
      public boolean hasSynOpType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
       *
       * <pre>
       *同步操作类型
       * </pre>
       */
      public com.rwproto.DataSynProtos.eSynOpType getSynOpType() {
        return synOpType_;
      }
      /**
       * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
       *
       * <pre>
       *同步操作类型
       * </pre>
       */
      public Builder setSynOpType(com.rwproto.DataSynProtos.eSynOpType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        synOpType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DataSyn.eSynOpType synOpType = 2;</code>
       *
       * <pre>
       *同步操作类型
       * </pre>
       */
      public Builder clearSynOpType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        synOpType_ = com.rwproto.DataSynProtos.eSynOpType.UPDATE_LIST;
        onChanged();
        return this;
      }

      // repeated .DataSyn.SynData SynData = 3;
      private java.util.List<com.rwproto.DataSynProtos.SynData> synData_ =
        java.util.Collections.emptyList();
      private void ensureSynDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          synData_ = new java.util.ArrayList<com.rwproto.DataSynProtos.SynData>(synData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.SynData, com.rwproto.DataSynProtos.SynData.Builder, com.rwproto.DataSynProtos.SynDataOrBuilder> synDataBuilder_;

      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.SynData> getSynDataList() {
        if (synDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(synData_);
        } else {
          return synDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public int getSynDataCount() {
        if (synDataBuilder_ == null) {
          return synData_.size();
        } else {
          return synDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public com.rwproto.DataSynProtos.SynData getSynData(int index) {
        if (synDataBuilder_ == null) {
          return synData_.get(index);
        } else {
          return synDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder setSynData(
          int index, com.rwproto.DataSynProtos.SynData value) {
        if (synDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSynDataIsMutable();
          synData_.set(index, value);
          onChanged();
        } else {
          synDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder setSynData(
          int index, com.rwproto.DataSynProtos.SynData.Builder builderForValue) {
        if (synDataBuilder_ == null) {
          ensureSynDataIsMutable();
          synData_.set(index, builderForValue.build());
          onChanged();
        } else {
          synDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder addSynData(com.rwproto.DataSynProtos.SynData value) {
        if (synDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSynDataIsMutable();
          synData_.add(value);
          onChanged();
        } else {
          synDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder addSynData(
          int index, com.rwproto.DataSynProtos.SynData value) {
        if (synDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSynDataIsMutable();
          synData_.add(index, value);
          onChanged();
        } else {
          synDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder addSynData(
          com.rwproto.DataSynProtos.SynData.Builder builderForValue) {
        if (synDataBuilder_ == null) {
          ensureSynDataIsMutable();
          synData_.add(builderForValue.build());
          onChanged();
        } else {
          synDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder addSynData(
          int index, com.rwproto.DataSynProtos.SynData.Builder builderForValue) {
        if (synDataBuilder_ == null) {
          ensureSynDataIsMutable();
          synData_.add(index, builderForValue.build());
          onChanged();
        } else {
          synDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder addAllSynData(
          java.lang.Iterable<? extends com.rwproto.DataSynProtos.SynData> values) {
        if (synDataBuilder_ == null) {
          ensureSynDataIsMutable();
          super.addAll(values, synData_);
          onChanged();
        } else {
          synDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder clearSynData() {
        if (synDataBuilder_ == null) {
          synData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          synDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public Builder removeSynData(int index) {
        if (synDataBuilder_ == null) {
          ensureSynDataIsMutable();
          synData_.remove(index);
          onChanged();
        } else {
          synDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public com.rwproto.DataSynProtos.SynData.Builder getSynDataBuilder(
          int index) {
        return getSynDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public com.rwproto.DataSynProtos.SynDataOrBuilder getSynDataOrBuilder(
          int index) {
        if (synDataBuilder_ == null) {
          return synData_.get(index);  } else {
          return synDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public java.util.List<? extends com.rwproto.DataSynProtos.SynDataOrBuilder> 
           getSynDataOrBuilderList() {
        if (synDataBuilder_ != null) {
          return synDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(synData_);
        }
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public com.rwproto.DataSynProtos.SynData.Builder addSynDataBuilder() {
        return getSynDataFieldBuilder().addBuilder(
            com.rwproto.DataSynProtos.SynData.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public com.rwproto.DataSynProtos.SynData.Builder addSynDataBuilder(
          int index) {
        return getSynDataFieldBuilder().addBuilder(
            index, com.rwproto.DataSynProtos.SynData.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.SynData SynData = 3;</code>
       *
       * <pre>
       *同步数据
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.SynData.Builder> 
           getSynDataBuilderList() {
        return getSynDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.SynData, com.rwproto.DataSynProtos.SynData.Builder, com.rwproto.DataSynProtos.SynDataOrBuilder> 
          getSynDataFieldBuilder() {
        if (synDataBuilder_ == null) {
          synDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.DataSynProtos.SynData, com.rwproto.DataSynProtos.SynData.Builder, com.rwproto.DataSynProtos.SynDataOrBuilder>(
                  synData_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          synData_ = null;
        }
        return synDataBuilder_;
      }

      // optional int32 version = 4;
      private int version_ ;
      /**
       * <code>optional int32 version = 4;</code>
       *
       * <pre>
       *数据版本号
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 version = 4;</code>
       *
       * <pre>
       *数据版本号
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 4;</code>
       *
       * <pre>
       *数据版本号
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000008;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 4;</code>
       *
       * <pre>
       *数据版本号
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        version_ = 0;
        onChanged();
        return this;
      }

      // optional string groupId = 5;
      private java.lang.Object groupId_ = "";
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public java.lang.String getGroupId() {
        java.lang.Object ref = groupId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          groupId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGroupIdBytes() {
        java.lang.Object ref = groupId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public Builder setGroupId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        groupId_ = getDefaultInstance().getGroupId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupId = 5;</code>
       *
       * <pre>
       *有分组的时候要传这个参数，前台对应要用 SynDataGroupListHolder
       * </pre>
       */
      public Builder setGroupIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        groupId_ = value;
        onChanged();
        return this;
      }

      // optional string optMap = 6;
      private java.lang.Object optMap_ = "";
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public boolean hasOptMap() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public java.lang.String getOptMap() {
        java.lang.Object ref = optMap_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          optMap_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOptMapBytes() {
        java.lang.Object ref = optMap_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          optMap_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public Builder setOptMap(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        optMap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public Builder clearOptMap() {
        bitField0_ = (bitField0_ & ~0x00000020);
        optMap_ = getDefaultInstance().getOptMap();
        onChanged();
        return this;
      }
      /**
       * <code>optional string optMap = 6;</code>
       *
       * <pre>
       *长转短映射表
       * </pre>
       */
      public Builder setOptMapBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        optMap_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.MsgDataSyn)
    }

    static {
      defaultInstance = new MsgDataSyn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.MsgDataSyn)
  }

  public interface DataSynReqMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .DataSyn.RequestType reqType = 1;
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *请求功能协议类型
     * </pre>
     */
    boolean hasReqType();
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *请求功能协议类型
     * </pre>
     */
    com.rwproto.DataSynProtos.RequestType getReqType();

    // repeated .DataSyn.DataSynVersion version = 2;
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    java.util.List<com.rwproto.DataSynProtos.DataSynVersion> 
        getVersionList();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    com.rwproto.DataSynProtos.DataSynVersion getVersion(int index);
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    int getVersionCount();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
        getVersionOrBuilderList();
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DataSyn.DataSynReqMsg}
   */
  public static final class DataSynReqMsg extends
      com.google.protobuf.GeneratedMessage
      implements DataSynReqMsgOrBuilder {
    // Use DataSynReqMsg.newBuilder() to construct.
    private DataSynReqMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataSynReqMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataSynReqMsg defaultInstance;
    public static DataSynReqMsg getDefaultInstance() {
      return defaultInstance;
    }

    public DataSynReqMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataSynReqMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.DataSynProtos.RequestType value = com.rwproto.DataSynProtos.RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                reqType_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                version_ = new java.util.ArrayList<com.rwproto.DataSynProtos.DataSynVersion>();
                mutable_bitField0_ |= 0x00000002;
              }
              version_.add(input.readMessage(com.rwproto.DataSynProtos.DataSynVersion.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          version_ = java.util.Collections.unmodifiableList(version_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynReqMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynReqMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.DataSynReqMsg.class, com.rwproto.DataSynProtos.DataSynReqMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<DataSynReqMsg> PARSER =
        new com.google.protobuf.AbstractParser<DataSynReqMsg>() {
      public DataSynReqMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSynReqMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataSynReqMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .DataSyn.RequestType reqType = 1;
    public static final int REQTYPE_FIELD_NUMBER = 1;
    private com.rwproto.DataSynProtos.RequestType reqType_;
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *请求功能协议类型
     * </pre>
     */
    public boolean hasReqType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *请求功能协议类型
     * </pre>
     */
    public com.rwproto.DataSynProtos.RequestType getReqType() {
      return reqType_;
    }

    // repeated .DataSyn.DataSynVersion version = 2;
    public static final int VERSION_FIELD_NUMBER = 2;
    private java.util.List<com.rwproto.DataSynProtos.DataSynVersion> version_;
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    public java.util.List<com.rwproto.DataSynProtos.DataSynVersion> getVersionList() {
      return version_;
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    public java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
        getVersionOrBuilderList() {
      return version_;
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    public int getVersionCount() {
      return version_.size();
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    public com.rwproto.DataSynProtos.DataSynVersion getVersion(int index) {
      return version_.get(index);
    }
    /**
     * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
     *
     * <pre>
     *同步数据版本
     * </pre>
     */
    public com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
        int index) {
      return version_.get(index);
    }

    private void initFields() {
      reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
      version_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReqType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getVersionCount(); i++) {
        if (!getVersion(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, reqType_.getNumber());
      }
      for (int i = 0; i < version_.size(); i++) {
        output.writeMessage(2, version_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, reqType_.getNumber());
      }
      for (int i = 0; i < version_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, version_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynReqMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.DataSynReqMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.DataSynReqMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.DataSynReqMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynReqMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynReqMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.DataSynReqMsg.class, com.rwproto.DataSynProtos.DataSynReqMsg.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.DataSynReqMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVersionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (versionBuilder_ == null) {
          version_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          versionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynReqMsg_descriptor;
      }

      public com.rwproto.DataSynProtos.DataSynReqMsg getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.DataSynReqMsg.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.DataSynReqMsg build() {
        com.rwproto.DataSynProtos.DataSynReqMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.DataSynReqMsg buildPartial() {
        com.rwproto.DataSynProtos.DataSynReqMsg result = new com.rwproto.DataSynProtos.DataSynReqMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reqType_ = reqType_;
        if (versionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            version_ = java.util.Collections.unmodifiableList(version_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.DataSynReqMsg) {
          return mergeFrom((com.rwproto.DataSynProtos.DataSynReqMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.DataSynReqMsg other) {
        if (other == com.rwproto.DataSynProtos.DataSynReqMsg.getDefaultInstance()) return this;
        if (other.hasReqType()) {
          setReqType(other.getReqType());
        }
        if (versionBuilder_ == null) {
          if (!other.version_.isEmpty()) {
            if (version_.isEmpty()) {
              version_ = other.version_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureVersionIsMutable();
              version_.addAll(other.version_);
            }
            onChanged();
          }
        } else {
          if (!other.version_.isEmpty()) {
            if (versionBuilder_.isEmpty()) {
              versionBuilder_.dispose();
              versionBuilder_ = null;
              version_ = other.version_;
              bitField0_ = (bitField0_ & ~0x00000002);
              versionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVersionFieldBuilder() : null;
            } else {
              versionBuilder_.addAllMessages(other.version_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReqType()) {
          
          return false;
        }
        for (int i = 0; i < getVersionCount(); i++) {
          if (!getVersion(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.DataSynReqMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.DataSynReqMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .DataSyn.RequestType reqType = 1;
      private com.rwproto.DataSynProtos.RequestType reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *请求功能协议类型
       * </pre>
       */
      public boolean hasReqType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *请求功能协议类型
       * </pre>
       */
      public com.rwproto.DataSynProtos.RequestType getReqType() {
        return reqType_;
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *请求功能协议类型
       * </pre>
       */
      public Builder setReqType(com.rwproto.DataSynProtos.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        reqType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *请求功能协议类型
       * </pre>
       */
      public Builder clearReqType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
        onChanged();
        return this;
      }

      // repeated .DataSyn.DataSynVersion version = 2;
      private java.util.List<com.rwproto.DataSynProtos.DataSynVersion> version_ =
        java.util.Collections.emptyList();
      private void ensureVersionIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          version_ = new java.util.ArrayList<com.rwproto.DataSynProtos.DataSynVersion>(version_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder> versionBuilder_;

      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.DataSynVersion> getVersionList() {
        if (versionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(version_);
        } else {
          return versionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public int getVersionCount() {
        if (versionBuilder_ == null) {
          return version_.size();
        } else {
          return versionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public com.rwproto.DataSynProtos.DataSynVersion getVersion(int index) {
        if (versionBuilder_ == null) {
          return version_.get(index);
        } else {
          return versionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder setVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.set(index, value);
          onChanged();
        } else {
          versionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder setVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.set(index, builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder addVersion(com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.add(value);
          onChanged();
        } else {
          versionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder addVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVersionIsMutable();
          version_.add(index, value);
          onChanged();
        } else {
          versionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder addVersion(
          com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.add(builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder addVersion(
          int index, com.rwproto.DataSynProtos.DataSynVersion.Builder builderForValue) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.add(index, builderForValue.build());
          onChanged();
        } else {
          versionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder addAllVersion(
          java.lang.Iterable<? extends com.rwproto.DataSynProtos.DataSynVersion> values) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          super.addAll(values, version_);
          onChanged();
        } else {
          versionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          versionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public Builder removeVersion(int index) {
        if (versionBuilder_ == null) {
          ensureVersionIsMutable();
          version_.remove(index);
          onChanged();
        } else {
          versionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder getVersionBuilder(
          int index) {
        return getVersionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public com.rwproto.DataSynProtos.DataSynVersionOrBuilder getVersionOrBuilder(
          int index) {
        if (versionBuilder_ == null) {
          return version_.get(index);  } else {
          return versionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public java.util.List<? extends com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
           getVersionOrBuilderList() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(version_);
        }
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder addVersionBuilder() {
        return getVersionFieldBuilder().addBuilder(
            com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public com.rwproto.DataSynProtos.DataSynVersion.Builder addVersionBuilder(
          int index) {
        return getVersionFieldBuilder().addBuilder(
            index, com.rwproto.DataSynProtos.DataSynVersion.getDefaultInstance());
      }
      /**
       * <code>repeated .DataSyn.DataSynVersion version = 2;</code>
       *
       * <pre>
       *同步数据版本
       * </pre>
       */
      public java.util.List<com.rwproto.DataSynProtos.DataSynVersion.Builder> 
           getVersionBuilderList() {
        return getVersionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.DataSynProtos.DataSynVersion, com.rwproto.DataSynProtos.DataSynVersion.Builder, com.rwproto.DataSynProtos.DataSynVersionOrBuilder>(
                  version_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.DataSynReqMsg)
    }

    static {
      defaultInstance = new DataSynReqMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.DataSynReqMsg)
  }

  public interface DataSynRspMsgOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .DataSyn.RequestType reqType = 1;
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *回应的功能协议类型
     * </pre>
     */
    boolean hasReqType();
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *回应的功能协议类型
     * </pre>
     */
    com.rwproto.DataSynProtos.RequestType getReqType();

    // required bool isSuccess = 2;
    /**
     * <code>required bool isSuccess = 2;</code>
     *
     * <pre>
     *是否成功处理
     * </pre>
     */
    boolean hasIsSuccess();
    /**
     * <code>required bool isSuccess = 2;</code>
     *
     * <pre>
     *是否成功处理
     * </pre>
     */
    boolean getIsSuccess();

    // optional string tipMsg = 3;
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    boolean hasTipMsg();
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    java.lang.String getTipMsg();
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    com.google.protobuf.ByteString
        getTipMsgBytes();
  }
  /**
   * Protobuf type {@code DataSyn.DataSynRspMsg}
   */
  public static final class DataSynRspMsg extends
      com.google.protobuf.GeneratedMessage
      implements DataSynRspMsgOrBuilder {
    // Use DataSynRspMsg.newBuilder() to construct.
    private DataSynRspMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataSynRspMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataSynRspMsg defaultInstance;
    public static DataSynRspMsg getDefaultInstance() {
      return defaultInstance;
    }

    public DataSynRspMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataSynRspMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.DataSynProtos.RequestType value = com.rwproto.DataSynProtos.RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                reqType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isSuccess_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              tipMsg_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynRspMsg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynRspMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.DataSynProtos.DataSynRspMsg.class, com.rwproto.DataSynProtos.DataSynRspMsg.Builder.class);
    }

    public static com.google.protobuf.Parser<DataSynRspMsg> PARSER =
        new com.google.protobuf.AbstractParser<DataSynRspMsg>() {
      public DataSynRspMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSynRspMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataSynRspMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .DataSyn.RequestType reqType = 1;
    public static final int REQTYPE_FIELD_NUMBER = 1;
    private com.rwproto.DataSynProtos.RequestType reqType_;
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *回应的功能协议类型
     * </pre>
     */
    public boolean hasReqType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .DataSyn.RequestType reqType = 1;</code>
     *
     * <pre>
     *回应的功能协议类型
     * </pre>
     */
    public com.rwproto.DataSynProtos.RequestType getReqType() {
      return reqType_;
    }

    // required bool isSuccess = 2;
    public static final int ISSUCCESS_FIELD_NUMBER = 2;
    private boolean isSuccess_;
    /**
     * <code>required bool isSuccess = 2;</code>
     *
     * <pre>
     *是否成功处理
     * </pre>
     */
    public boolean hasIsSuccess() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool isSuccess = 2;</code>
     *
     * <pre>
     *是否成功处理
     * </pre>
     */
    public boolean getIsSuccess() {
      return isSuccess_;
    }

    // optional string tipMsg = 3;
    public static final int TIPMSG_FIELD_NUMBER = 3;
    private java.lang.Object tipMsg_;
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    public boolean hasTipMsg() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    public java.lang.String getTipMsg() {
      java.lang.Object ref = tipMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tipMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tipMsg = 3;</code>
     *
     * <pre>
     *提示消息，可以是成功，也可以是失败的提示消息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTipMsgBytes() {
      java.lang.Object ref = tipMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tipMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
      isSuccess_ = false;
      tipMsg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasReqType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, reqType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isSuccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTipMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, reqType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isSuccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTipMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.DataSynProtos.DataSynRspMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.DataSynProtos.DataSynRspMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DataSyn.DataSynRspMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.DataSynProtos.DataSynRspMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynRspMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynRspMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.DataSynProtos.DataSynRspMsg.class, com.rwproto.DataSynProtos.DataSynRspMsg.Builder.class);
      }

      // Construct using com.rwproto.DataSynProtos.DataSynRspMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSuccess_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        tipMsg_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.DataSynProtos.internal_static_DataSyn_DataSynRspMsg_descriptor;
      }

      public com.rwproto.DataSynProtos.DataSynRspMsg getDefaultInstanceForType() {
        return com.rwproto.DataSynProtos.DataSynRspMsg.getDefaultInstance();
      }

      public com.rwproto.DataSynProtos.DataSynRspMsg build() {
        com.rwproto.DataSynProtos.DataSynRspMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.DataSynProtos.DataSynRspMsg buildPartial() {
        com.rwproto.DataSynProtos.DataSynRspMsg result = new com.rwproto.DataSynProtos.DataSynRspMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.reqType_ = reqType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSuccess_ = isSuccess_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tipMsg_ = tipMsg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.DataSynProtos.DataSynRspMsg) {
          return mergeFrom((com.rwproto.DataSynProtos.DataSynRspMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.DataSynProtos.DataSynRspMsg other) {
        if (other == com.rwproto.DataSynProtos.DataSynRspMsg.getDefaultInstance()) return this;
        if (other.hasReqType()) {
          setReqType(other.getReqType());
        }
        if (other.hasIsSuccess()) {
          setIsSuccess(other.getIsSuccess());
        }
        if (other.hasTipMsg()) {
          bitField0_ |= 0x00000004;
          tipMsg_ = other.tipMsg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasReqType()) {
          
          return false;
        }
        if (!hasIsSuccess()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.DataSynProtos.DataSynRspMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.DataSynProtos.DataSynRspMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .DataSyn.RequestType reqType = 1;
      private com.rwproto.DataSynProtos.RequestType reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *回应的功能协议类型
       * </pre>
       */
      public boolean hasReqType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *回应的功能协议类型
       * </pre>
       */
      public com.rwproto.DataSynProtos.RequestType getReqType() {
        return reqType_;
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *回应的功能协议类型
       * </pre>
       */
      public Builder setReqType(com.rwproto.DataSynProtos.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        reqType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .DataSyn.RequestType reqType = 1;</code>
       *
       * <pre>
       *回应的功能协议类型
       * </pre>
       */
      public Builder clearReqType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        reqType_ = com.rwproto.DataSynProtos.RequestType.SynByType;
        onChanged();
        return this;
      }

      // required bool isSuccess = 2;
      private boolean isSuccess_ ;
      /**
       * <code>required bool isSuccess = 2;</code>
       *
       * <pre>
       *是否成功处理
       * </pre>
       */
      public boolean hasIsSuccess() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool isSuccess = 2;</code>
       *
       * <pre>
       *是否成功处理
       * </pre>
       */
      public boolean getIsSuccess() {
        return isSuccess_;
      }
      /**
       * <code>required bool isSuccess = 2;</code>
       *
       * <pre>
       *是否成功处理
       * </pre>
       */
      public Builder setIsSuccess(boolean value) {
        bitField0_ |= 0x00000002;
        isSuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isSuccess = 2;</code>
       *
       * <pre>
       *是否成功处理
       * </pre>
       */
      public Builder clearIsSuccess() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSuccess_ = false;
        onChanged();
        return this;
      }

      // optional string tipMsg = 3;
      private java.lang.Object tipMsg_ = "";
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public boolean hasTipMsg() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public java.lang.String getTipMsg() {
        java.lang.Object ref = tipMsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tipMsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTipMsgBytes() {
        java.lang.Object ref = tipMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tipMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public Builder setTipMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        tipMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public Builder clearTipMsg() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tipMsg_ = getDefaultInstance().getTipMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tipMsg = 3;</code>
       *
       * <pre>
       *提示消息，可以是成功，也可以是失败的提示消息
       * </pre>
       */
      public Builder setTipMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        tipMsg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DataSyn.DataSynRspMsg)
    }

    static {
      defaultInstance = new DataSynRspMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DataSyn.DataSynRspMsg)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_SynData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_SynData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_MsgDataSynList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_MsgDataSynList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_DataSynVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_DataSynVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_MsgDataSynVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_MsgDataSynVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_MsgDataSyn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_MsgDataSyn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_DataSynReqMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_DataSynReqMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DataSyn_DataSynRspMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DataSyn_DataSynRspMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rDataSyn.proto\022\007DataSyn\"\'\n\007SynData\022\n\n\002i" +
      "d\030\001 \002(\t\022\020\n\010jsonData\030\002 \001(\t\"9\n\016MsgDataSynL" +
      "ist\022\'\n\nmsgDataSyn\030\003 \003(\0132\023.DataSyn.MsgDat" +
      "aSyn\"E\n\016DataSynVersion\022\"\n\007synType\030\001 \002(\0162" +
      "\021.DataSyn.eSynType\022\017\n\007version\030\002 \002(\005\"=\n\021M" +
      "sgDataSynVersion\022(\n\007version\030\001 \003(\0132\027.Data" +
      "Syn.DataSynVersion\"\255\001\n\nMsgDataSyn\022\"\n\007syn" +
      "Type\030\001 \002(\0162\021.DataSyn.eSynType\022&\n\tsynOpTy" +
      "pe\030\002 \001(\0162\023.DataSyn.eSynOpType\022!\n\007SynData" +
      "\030\003 \003(\0132\020.DataSyn.SynData\022\017\n\007version\030\004 \001(",
      "\005\022\017\n\007groupId\030\005 \001(\t\022\016\n\006optMap\030\006 \001(\t\"`\n\rDa" +
      "taSynReqMsg\022%\n\007reqType\030\001 \002(\0162\024.DataSyn.R" +
      "equestType\022(\n\007version\030\002 \003(\0132\027.DataSyn.Da" +
      "taSynVersion\"Y\n\rDataSynRspMsg\022%\n\007reqType" +
      "\030\001 \002(\0162\024.DataSyn.RequestType\022\021\n\tisSucces" +
      "s\030\002 \002(\010\022\016\n\006tipMsg\030\003 \001(\t*{\n\neSynOpType\022\017\n" +
      "\013UPDATE_LIST\020\001\022\021\n\rUPDATE_SINGLE\020\002\022\016\n\nADD" +
      "_SINGLE\020\003\022\021\n\rREMOVE_SINGLE\020\004\022\020\n\014UPDATE_F" +
      "IELD\020\005\022\024\n\020UPDATE_PART_LIST\020\006*\234\022\n\010eSynTyp" +
      "e\022\025\n\021COPY_LEVEL_RECORD\020\001\022\023\n\017COPY_MAP_REC",
      "ORD\020\002\022\030\n\024SECRETAREA_BASE_INFO\020\003\022\031\n\025SECRE" +
      "TAREA_DEF_RECORD\020\004\022\030\n\024SECRETAREA_USER_IN" +
      "FO\020\005\022\037\n\033SECRETAREA_DEFEND_TEAM_INFO\020\006\022\032\n" +
      "\026SECRETAREA_USER_RECORD\020\007\022\020\n\014FASHION_ITE" +
      "M\020\010\022\016\n\nEQUIP_ITEM\020\t\022\016\n\nSKILL_ITEM\020\n\022\016\n\nI" +
      "NLAY_ITEM\020\013\022\022\n\016ROLE_ATTR_ITEM\020\014\022\022\n\016ROLE_" +
      "BASE_ITEM\020\r\022\016\n\nUSER_HEROS\020\016\022\r\n\tUSER_DATA" +
      "\020\017\022\022\n\016USER_GAME_DATA\020\020\022\016\n\nUSER_MAGIC\020\021\022\021" +
      "\n\rUSER_ITEM_BAG\020\022\022\021\n\rDailyActivity\020\023\022\t\n\005" +
      "Guild\020\024\022\023\n\017Pve_UnendingWar\020\025\022\r\n\tPve_Tria",
      "l\020\026\022\016\n\nStore_Data\020\027\022\r\n\tTASK_DATA\020\030\022\014\n\010VI" +
      "P_DATA\020\031\022\020\n\014SETTING_DATA\020\032\022\023\n\017GUILD_USER" +
      "_INFO\020\033\022\021\n\rSEVEN_DAY_GIF\020\034\022\030\n\024FRESHER_AT" +
      "IVITY_DATA\020\035\022\r\n\tASSISTANT\020\036\022\020\n\014VERSION_C" +
      "OPY\020\037\022\021\n\rGroupBaseData\020 \022\023\n\017GroupMemberD" +
      "ata\020!\022\014\n\010GroupLog\020\"\022\032\n\026UserGroupAttribut" +
      "eData\020#\022\024\n\020GROUP_COPY_LEVEL\020$\022\022\n\016GROUP_C" +
      "OPY_MAP\020%\022\025\n\021GROUP_COPY_REWARD\020&\022\030\n\024Grou" +
      "pApplyMemberData\020\'\022\026\n\022GroupResearchSkill" +
      "\020(\022\023\n\017GroupStudySkill\020)\022\n\n\006Charge\020*\022\016\n\nP",
      "OWER_INFO\020+\022\026\n\022USER_TMP_GAME_DATA\020,\022\020\n\014H" +
      "ERO_FETTERS\020-\022\022\n\016FIX_NORM_EQUIP\020.\022\021\n\rFIX" +
      "_EXP_EQUIP\020/\022\027\n\023UserGroupSecretData\0200\022\023\n" +
      "\017GroupSecretData\0201\022\023\n\017MagicSecretData\0202\022" +
      "\024\n\020MagicChapterData\0203\022\030\n\024SECRETAREA_TEAM" +
      "_INFO\0204\022\027\n\023USE_GROUP_COPY_DATA\0205\022\032\n\026GROU" +
      "P_COPY_SERVER_RANK\0206\022\031\n\025GROUP_ITEM_DROP_" +
      "APPLY\0207\022\025\n\021ActivityCountType\020<\022\030\n\024Activi" +
      "tyTimeCardType\020=\022\024\n\020ActivityRateType\020>\022\024" +
      "\n\020ActivityDateType\020?\022\030\n\024ActivityTimeSale",
      "Type\020@\022\030\n\024ActivityDateSaleType\020A\022\024\n\020Acti" +
      "vityRankType\020B\022\030\n\024ActivityExchangeType\020C" +
      "\022\031\n\025ActivityTimeCountType\020D\022\025\n\021ActivityD" +
      "ailyType\020E\022\030\n\024ActivityVitalityType\020F\022\035\n\031" +
      "ActivityDailyDiscountType\020G\022\033\n\027ActivityV" +
      "ipDiscountType\020H\022\033\n\027ActivityRedEnvelopeT" +
      "ype\020I\022\032\n\026ActivityFortuneCatType\020J\022\031\n\025Act" +
      "ivityLimitHeroType\020K\022\035\n\031ActivityDailyRec" +
      "hargeType\020L\022\030\n\024ActivityRetrieveType\020M\022\020\n" +
      "\014QuestionList\020P\022\021\n\rGFBiddingData\020Q\022\024\n\020GF",
      "DefendArmyData\020R\022\031\n\025GFightOnlineGroupDat" +
      "a\020S\022\034\n\030GFightOnlinePersonalData\020T\022\034\n\030GFi" +
      "ghtOnlineResourceData\020U\022\r\n\tMajorData\020V\022\026" +
      "\n\022GFightSimpleLeader\020W\022\025\n\021GFightFinalRew" +
      "ard\020X\022\020\n\014EmbattleInfo\020Y\022\025\n\021MAGICEQUIP_FE" +
      "TTER\020Z\022\024\n\020USER_TEAM_BATTLE\020[\022\024\n\020TEAM_BAT" +
      "TLE_TEAM\020\\\022\013\n\007WB_DATA\020]\022\020\n\014WB_USER_DATA\020" +
      "^\022\024\n\020RANDOM_BOSS_DATA\020_\022\020\n\014WB_RANK_DATA\020" +
      "`\022\027\n\023GC_PREPARE_POSITION\020a\022\030\n\024FIGHTING_G" +
      "ROWTH_DATA\020b\022\r\n\tGCompBase\020d\022\021\n\rGCompAudi",
      "tion\020e\022\023\n\017GCompDetailInfo\020f\022\027\n\023GCompFigh" +
      "tingRecord\020g\022\016\n\nGCompMatch\020h\022\025\n\021GCompOnl" +
      "ineMember\020i\022\023\n\017GCompTeamHolder\020j\022\025\n\021BENE" +
      "FIT_SELL_DATA\020k\022\024\n\020ACHIEVEMENT_DATA\020l\022\022\n" +
      "\016GCompSelfGuess\020m\022\030\n\024GCompSelfGuessDetai" +
      "l\020n\022\025\n\021GCompCanGuessItem\020o\022\023\n\017GCompMatch" +
      "Enemy\020p\022\017\n\013GCompMember\020q\022\021\n\rDropSameScen" +
      "e\020r*\034\n\013RequestType\022\r\n\tSynByType\020\001B\034\n\013com" +
      ".rwprotoB\rDataSynProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_DataSyn_SynData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_DataSyn_SynData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_SynData_descriptor,
              new java.lang.String[] { "Id", "JsonData", });
          internal_static_DataSyn_MsgDataSynList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_DataSyn_MsgDataSynList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_MsgDataSynList_descriptor,
              new java.lang.String[] { "MsgDataSyn", });
          internal_static_DataSyn_DataSynVersion_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_DataSyn_DataSynVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_DataSynVersion_descriptor,
              new java.lang.String[] { "SynType", "Version", });
          internal_static_DataSyn_MsgDataSynVersion_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_DataSyn_MsgDataSynVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_MsgDataSynVersion_descriptor,
              new java.lang.String[] { "Version", });
          internal_static_DataSyn_MsgDataSyn_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_DataSyn_MsgDataSyn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_MsgDataSyn_descriptor,
              new java.lang.String[] { "SynType", "SynOpType", "SynData", "Version", "GroupId", "OptMap", });
          internal_static_DataSyn_DataSynReqMsg_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_DataSyn_DataSynReqMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_DataSynReqMsg_descriptor,
              new java.lang.String[] { "ReqType", "Version", });
          internal_static_DataSyn_DataSynRspMsg_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_DataSyn_DataSynRspMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DataSyn_DataSynRspMsg_descriptor,
              new java.lang.String[] { "ReqType", "IsSuccess", "TipMsg", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
