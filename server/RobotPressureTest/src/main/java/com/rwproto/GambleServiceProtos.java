// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GambleService.proto

package com.rwproto;

public final class GambleServiceProtos {
  private GambleServiceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EGambleRequestType}
   */
  public enum EGambleRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GAMBLE = 1;</code>
     *
     * <pre>
     *垂钓
     * </pre>
     */
    GAMBLE(0, 1),
    /**
     * <code>GAMBLE_GET = 2;</code>
     *
     * <pre>
     *请求垂钓数据
     * </pre>
     */
    GAMBLE_GET(1, 2),
    /**
     * <code>GAMBLE_DATA = 3;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    GAMBLE_DATA(2, 3),
    ;

    /**
     * <code>GAMBLE = 1;</code>
     *
     * <pre>
     *垂钓
     * </pre>
     */
    public static final int GAMBLE_VALUE = 1;
    /**
     * <code>GAMBLE_GET = 2;</code>
     *
     * <pre>
     *请求垂钓数据
     * </pre>
     */
    public static final int GAMBLE_GET_VALUE = 2;
    /**
     * <code>GAMBLE_DATA = 3;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public static final int GAMBLE_DATA_VALUE = 3;


    public final int getNumber() { return value; }

    public static EGambleRequestType valueOf(int value) {
      switch (value) {
        case 1: return GAMBLE;
        case 2: return GAMBLE_GET;
        case 3: return GAMBLE_DATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EGambleRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EGambleRequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EGambleRequestType>() {
            public EGambleRequestType findValueByNumber(int number) {
              return EGambleRequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final EGambleRequestType[] VALUES = values();

    public static EGambleRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EGambleRequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EGambleRequestType)
  }

  /**
   * Protobuf enum {@code EGambleResultType}
   */
  public enum EGambleResultType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 1;</code>
     *
     * <pre>
     *请求成功
     * </pre>
     */
    SUCCESS(0, 1),
    /**
     * <code>FAIL = 2;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    FAIL(1, 2),
    ;

    /**
     * <code>SUCCESS = 1;</code>
     *
     * <pre>
     *请求成功
     * </pre>
     */
    public static final int SUCCESS_VALUE = 1;
    /**
     * <code>FAIL = 2;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    public static final int FAIL_VALUE = 2;


    public final int getNumber() { return value; }

    public static EGambleResultType valueOf(int value) {
      switch (value) {
        case 1: return SUCCESS;
        case 2: return FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EGambleResultType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EGambleResultType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EGambleResultType>() {
            public EGambleResultType findValueByNumber(int number) {
              return EGambleResultType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final EGambleResultType[] VALUES = values();

    public static EGambleResultType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EGambleResultType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EGambleResultType)
  }

  /**
   * Protobuf enum {@code EGambleType}
   */
  public enum EGambleType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRIMARY = 1;</code>
     *
     * <pre>
     *初级
     * </pre>
     */
    PRIMARY(0, 1),
    /**
     * <code>MIDDLE = 2;</code>
     *
     * <pre>
     *中级
     * </pre>
     */
    MIDDLE(1, 2),
    /**
     * <code>ADVANCED = 3;</code>
     *
     * <pre>
     *高级
     * </pre>
     */
    ADVANCED(2, 3),
    ;

    /**
     * <code>PRIMARY = 1;</code>
     *
     * <pre>
     *初级
     * </pre>
     */
    public static final int PRIMARY_VALUE = 1;
    /**
     * <code>MIDDLE = 2;</code>
     *
     * <pre>
     *中级
     * </pre>
     */
    public static final int MIDDLE_VALUE = 2;
    /**
     * <code>ADVANCED = 3;</code>
     *
     * <pre>
     *高级
     * </pre>
     */
    public static final int ADVANCED_VALUE = 3;


    public final int getNumber() { return value; }

    public static EGambleType valueOf(int value) {
      switch (value) {
        case 1: return PRIMARY;
        case 2: return MIDDLE;
        case 3: return ADVANCED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EGambleType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EGambleType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EGambleType>() {
            public EGambleType findValueByNumber(int number) {
              return EGambleType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final EGambleType[] VALUES = values();

    public static EGambleType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EGambleType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EGambleType)
  }

  /**
   * Protobuf enum {@code ELotteryType}
   */
  public enum ELotteryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ONE = 1;</code>
     *
     * <pre>
     *单抽
     * </pre>
     */
    ONE(0, 1),
    /**
     * <code>SIX = 2;</code>
     *
     * <pre>
     *6连
     * </pre>
     */
    SIX(1, 2),
    /**
     * <code>TEN = 3;</code>
     *
     * <pre>
     *10连
     * </pre>
     */
    TEN(2, 3),
    ;

    /**
     * <code>ONE = 1;</code>
     *
     * <pre>
     *单抽
     * </pre>
     */
    public static final int ONE_VALUE = 1;
    /**
     * <code>SIX = 2;</code>
     *
     * <pre>
     *6连
     * </pre>
     */
    public static final int SIX_VALUE = 2;
    /**
     * <code>TEN = 3;</code>
     *
     * <pre>
     *10连
     * </pre>
     */
    public static final int TEN_VALUE = 3;


    public final int getNumber() { return value; }

    public static ELotteryType valueOf(int value) {
      switch (value) {
        case 1: return ONE;
        case 2: return SIX;
        case 3: return TEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELotteryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ELotteryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELotteryType>() {
            public ELotteryType findValueByNumber(int number) {
              return ELotteryType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final ELotteryType[] VALUES = values();

    public static ELotteryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ELotteryType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ELotteryType)
  }

  public interface GambleRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .EGambleRequestType requestType = 1;
    /**
     * <code>required .EGambleRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    boolean hasRequestType();
    /**
     * <code>required .EGambleRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    com.rwproto.GambleServiceProtos.EGambleRequestType getRequestType();

    // optional .EGambleType gambleType = 2;
    /**
     * <code>optional .EGambleType gambleType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    boolean hasGambleType();
    /**
     * <code>optional .EGambleType gambleType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    com.rwproto.GambleServiceProtos.EGambleType getGambleType();

    // optional .ELotteryType lotteryType = 3;
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    boolean hasLotteryType();
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    com.rwproto.GambleServiceProtos.ELotteryType getLotteryType();

    // optional int32 gamblePlanId = 4;
    /**
     * <code>optional int32 gamblePlanId = 4;</code>
     *
     * <pre>
     * 重构后使用的参数 抽卡方案Id, gamble.csv key
     * </pre>
     */
    boolean hasGamblePlanId();
    /**
     * <code>optional int32 gamblePlanId = 4;</code>
     *
     * <pre>
     * 重构后使用的参数 抽卡方案Id, gamble.csv key
     * </pre>
     */
    int getGamblePlanId();

    // optional int32 cachePreviewListTag = 5;
    /**
     * <code>optional int32 cachePreviewListTag = 5;</code>
     *
     * <pre>
     *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
     * </pre>
     */
    boolean hasCachePreviewListTag();
    /**
     * <code>optional int32 cachePreviewListTag = 5;</code>
     *
     * <pre>
     *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
     * </pre>
     */
    int getCachePreviewListTag();
  }
  /**
   * Protobuf type {@code GambleRequest}
   */
  public static final class GambleRequest extends
      com.google.protobuf.GeneratedMessage
      implements GambleRequestOrBuilder {
    // Use GambleRequest.newBuilder() to construct.
    private GambleRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GambleRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GambleRequest defaultInstance;
    public static GambleRequest getDefaultInstance() {
      return defaultInstance;
    }

    public GambleRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GambleRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.GambleServiceProtos.EGambleRequestType value = com.rwproto.GambleServiceProtos.EGambleRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                requestType_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.rwproto.GambleServiceProtos.EGambleType value = com.rwproto.GambleServiceProtos.EGambleType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                gambleType_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.rwproto.GambleServiceProtos.ELotteryType value = com.rwproto.GambleServiceProtos.ELotteryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                lotteryType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gamblePlanId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cachePreviewListTag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.GambleRequest.class, com.rwproto.GambleServiceProtos.GambleRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<GambleRequest> PARSER =
        new com.google.protobuf.AbstractParser<GambleRequest>() {
      public GambleRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .EGambleRequestType requestType = 1;
    public static final int REQUESTTYPE_FIELD_NUMBER = 1;
    private com.rwproto.GambleServiceProtos.EGambleRequestType requestType_;
    /**
     * <code>required .EGambleRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public boolean hasRequestType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EGambleRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.EGambleRequestType getRequestType() {
      return requestType_;
    }

    // optional .EGambleType gambleType = 2;
    public static final int GAMBLETYPE_FIELD_NUMBER = 2;
    private com.rwproto.GambleServiceProtos.EGambleType gambleType_;
    /**
     * <code>optional .EGambleType gambleType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    public boolean hasGambleType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .EGambleType gambleType = 2;</code>
     *
     * <pre>
     *垂钓类型
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.EGambleType getGambleType() {
      return gambleType_;
    }

    // optional .ELotteryType lotteryType = 3;
    public static final int LOTTERYTYPE_FIELD_NUMBER = 3;
    private com.rwproto.GambleServiceProtos.ELotteryType lotteryType_;
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    public boolean hasLotteryType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .ELotteryType lotteryType = 3;</code>
     *
     * <pre>
     *抽奖类型
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.ELotteryType getLotteryType() {
      return lotteryType_;
    }

    // optional int32 gamblePlanId = 4;
    public static final int GAMBLEPLANID_FIELD_NUMBER = 4;
    private int gamblePlanId_;
    /**
     * <code>optional int32 gamblePlanId = 4;</code>
     *
     * <pre>
     * 重构后使用的参数 抽卡方案Id, gamble.csv key
     * </pre>
     */
    public boolean hasGamblePlanId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 gamblePlanId = 4;</code>
     *
     * <pre>
     * 重构后使用的参数 抽卡方案Id, gamble.csv key
     * </pre>
     */
    public int getGamblePlanId() {
      return gamblePlanId_;
    }

    // optional int32 cachePreviewListTag = 5;
    public static final int CACHEPREVIEWLISTTAG_FIELD_NUMBER = 5;
    private int cachePreviewListTag_;
    /**
     * <code>optional int32 cachePreviewListTag = 5;</code>
     *
     * <pre>
     *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
     * </pre>
     */
    public boolean hasCachePreviewListTag() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 cachePreviewListTag = 5;</code>
     *
     * <pre>
     *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
     * </pre>
     */
    public int getCachePreviewListTag() {
      return cachePreviewListTag_;
    }

    private void initFields() {
      requestType_ = com.rwproto.GambleServiceProtos.EGambleRequestType.GAMBLE;
      gambleType_ = com.rwproto.GambleServiceProtos.EGambleType.PRIMARY;
      lotteryType_ = com.rwproto.GambleServiceProtos.ELotteryType.ONE;
      gamblePlanId_ = 0;
      cachePreviewListTag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRequestType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, gambleType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, lotteryType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gamblePlanId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, cachePreviewListTag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gambleType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, lotteryType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gamblePlanId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cachePreviewListTag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.GambleRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GambleRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.GambleRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.GambleRequest.class, com.rwproto.GambleServiceProtos.GambleRequest.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.GambleRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requestType_ = com.rwproto.GambleServiceProtos.EGambleRequestType.GAMBLE;
        bitField0_ = (bitField0_ & ~0x00000001);
        gambleType_ = com.rwproto.GambleServiceProtos.EGambleType.PRIMARY;
        bitField0_ = (bitField0_ & ~0x00000002);
        lotteryType_ = com.rwproto.GambleServiceProtos.ELotteryType.ONE;
        bitField0_ = (bitField0_ & ~0x00000004);
        gamblePlanId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cachePreviewListTag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRequest_descriptor;
      }

      public com.rwproto.GambleServiceProtos.GambleRequest getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.GambleRequest build() {
        com.rwproto.GambleServiceProtos.GambleRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.GambleRequest buildPartial() {
        com.rwproto.GambleServiceProtos.GambleRequest result = new com.rwproto.GambleServiceProtos.GambleRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestType_ = requestType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gambleType_ = gambleType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lotteryType_ = lotteryType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gamblePlanId_ = gamblePlanId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cachePreviewListTag_ = cachePreviewListTag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.GambleRequest) {
          return mergeFrom((com.rwproto.GambleServiceProtos.GambleRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.GambleRequest other) {
        if (other == com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance()) return this;
        if (other.hasRequestType()) {
          setRequestType(other.getRequestType());
        }
        if (other.hasGambleType()) {
          setGambleType(other.getGambleType());
        }
        if (other.hasLotteryType()) {
          setLotteryType(other.getLotteryType());
        }
        if (other.hasGamblePlanId()) {
          setGamblePlanId(other.getGamblePlanId());
        }
        if (other.hasCachePreviewListTag()) {
          setCachePreviewListTag(other.getCachePreviewListTag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequestType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.GambleRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.GambleRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .EGambleRequestType requestType = 1;
      private com.rwproto.GambleServiceProtos.EGambleRequestType requestType_ = com.rwproto.GambleServiceProtos.EGambleRequestType.GAMBLE;
      /**
       * <code>required .EGambleRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public boolean hasRequestType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EGambleRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.EGambleRequestType getRequestType() {
        return requestType_;
      }
      /**
       * <code>required .EGambleRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder setRequestType(com.rwproto.GambleServiceProtos.EGambleRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        requestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EGambleRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder clearRequestType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestType_ = com.rwproto.GambleServiceProtos.EGambleRequestType.GAMBLE;
        onChanged();
        return this;
      }

      // optional .EGambleType gambleType = 2;
      private com.rwproto.GambleServiceProtos.EGambleType gambleType_ = com.rwproto.GambleServiceProtos.EGambleType.PRIMARY;
      /**
       * <code>optional .EGambleType gambleType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public boolean hasGambleType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .EGambleType gambleType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.EGambleType getGambleType() {
        return gambleType_;
      }
      /**
       * <code>optional .EGambleType gambleType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public Builder setGambleType(com.rwproto.GambleServiceProtos.EGambleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        gambleType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EGambleType gambleType = 2;</code>
       *
       * <pre>
       *垂钓类型
       * </pre>
       */
      public Builder clearGambleType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gambleType_ = com.rwproto.GambleServiceProtos.EGambleType.PRIMARY;
        onChanged();
        return this;
      }

      // optional .ELotteryType lotteryType = 3;
      private com.rwproto.GambleServiceProtos.ELotteryType lotteryType_ = com.rwproto.GambleServiceProtos.ELotteryType.ONE;
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public boolean hasLotteryType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ELotteryType getLotteryType() {
        return lotteryType_;
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public Builder setLotteryType(com.rwproto.GambleServiceProtos.ELotteryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        lotteryType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .ELotteryType lotteryType = 3;</code>
       *
       * <pre>
       *抽奖类型
       * </pre>
       */
      public Builder clearLotteryType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lotteryType_ = com.rwproto.GambleServiceProtos.ELotteryType.ONE;
        onChanged();
        return this;
      }

      // optional int32 gamblePlanId = 4;
      private int gamblePlanId_ ;
      /**
       * <code>optional int32 gamblePlanId = 4;</code>
       *
       * <pre>
       * 重构后使用的参数 抽卡方案Id, gamble.csv key
       * </pre>
       */
      public boolean hasGamblePlanId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 gamblePlanId = 4;</code>
       *
       * <pre>
       * 重构后使用的参数 抽卡方案Id, gamble.csv key
       * </pre>
       */
      public int getGamblePlanId() {
        return gamblePlanId_;
      }
      /**
       * <code>optional int32 gamblePlanId = 4;</code>
       *
       * <pre>
       * 重构后使用的参数 抽卡方案Id, gamble.csv key
       * </pre>
       */
      public Builder setGamblePlanId(int value) {
        bitField0_ |= 0x00000008;
        gamblePlanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gamblePlanId = 4;</code>
       *
       * <pre>
       * 重构后使用的参数 抽卡方案Id, gamble.csv key
       * </pre>
       */
      public Builder clearGamblePlanId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gamblePlanId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 cachePreviewListTag = 5;
      private int cachePreviewListTag_ ;
      /**
       * <code>optional int32 cachePreviewListTag = 5;</code>
       *
       * <pre>
       *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
       * </pre>
       */
      public boolean hasCachePreviewListTag() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 cachePreviewListTag = 5;</code>
       *
       * <pre>
       *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
       * </pre>
       */
      public int getCachePreviewListTag() {
        return cachePreviewListTag_;
      }
      /**
       * <code>optional int32 cachePreviewListTag = 5;</code>
       *
       * <pre>
       *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
       * </pre>
       */
      public Builder setCachePreviewListTag(int value) {
        bitField0_ |= 0x00000010;
        cachePreviewListTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cachePreviewListTag = 5;</code>
       *
       * <pre>
       *客户端发送空列表表示不更新预览列表，发送-1表示全部重新发送
       * </pre>
       */
      public Builder clearCachePreviewListTag() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cachePreviewListTag_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GambleRequest)
    }

    static {
      defaultInstance = new GambleRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GambleRequest)
  }

  public interface GambleResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .EGambleResultType resultType = 1;
    /**
     * <code>required .EGambleResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    boolean hasResultType();
    /**
     * <code>required .EGambleResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    com.rwproto.GambleServiceProtos.EGambleResultType getResultType();

    // optional .GambleRequest request = 2;
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    boolean hasRequest();
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleRequest getRequest();
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleRequestOrBuilder getRequestOrBuilder();

    // repeated .GambleRewardData itemList = 3;
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData> 
        getItemListList();
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleRewardData getItemList(int index);
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    int getItemListCount();
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder> 
        getItemListOrBuilderList();
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder getItemListOrBuilder(
        int index);

    // repeated string heroList = 4;
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    java.util.List<java.lang.String>
    getHeroListList();
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    int getHeroListCount();
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    java.lang.String getHeroList(int index);
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeroListBytes(int index);

    // optional .GambleData gambleData = 5;
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    boolean hasGambleData();
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleData getGambleData();
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    com.rwproto.GambleServiceProtos.GambleDataOrBuilder getGambleDataOrBuilder();

    // optional string tips = 6;
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    boolean hasTips();
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    java.lang.String getTips();
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    com.google.protobuf.ByteString
        getTipsBytes();

    // repeated .DropData dropHistory = 7;
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    java.util.List<com.rwproto.GambleServiceProtos.DropData> 
        getDropHistoryList();
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    com.rwproto.GambleServiceProtos.DropData getDropHistory(int index);
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    int getDropHistoryCount();
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    java.util.List<? extends com.rwproto.GambleServiceProtos.DropDataOrBuilder> 
        getDropHistoryOrBuilderList();
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    com.rwproto.GambleServiceProtos.DropDataOrBuilder getDropHistoryOrBuilder(
        int index);

    // repeated .PreviewData previewDataList = 8;
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    java.util.List<com.rwproto.GambleServiceProtos.PreviewData> 
        getPreviewDataListList();
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    com.rwproto.GambleServiceProtos.PreviewData getPreviewDataList(int index);
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    int getPreviewDataListCount();
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    java.util.List<? extends com.rwproto.GambleServiceProtos.PreviewDataOrBuilder> 
        getPreviewDataListOrBuilderList();
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    com.rwproto.GambleServiceProtos.PreviewDataOrBuilder getPreviewDataListOrBuilder(
        int index);

    // repeated int32 guaranteenLeftCountList = 9;
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    java.util.List<java.lang.Integer> getGuaranteenLeftCountListList();
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    int getGuaranteenLeftCountListCount();
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    int getGuaranteenLeftCountList(int index);
  }
  /**
   * Protobuf type {@code GambleResponse}
   */
  public static final class GambleResponse extends
      com.google.protobuf.GeneratedMessage
      implements GambleResponseOrBuilder {
    // Use GambleResponse.newBuilder() to construct.
    private GambleResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GambleResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GambleResponse defaultInstance;
    public static GambleResponse getDefaultInstance() {
      return defaultInstance;
    }

    public GambleResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GambleResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.GambleServiceProtos.EGambleResultType value = com.rwproto.GambleServiceProtos.EGambleResultType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                resultType_ = value;
              }
              break;
            }
            case 18: {
              com.rwproto.GambleServiceProtos.GambleRequest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.rwproto.GambleServiceProtos.GambleRequest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                itemList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.GambleRewardData>();
                mutable_bitField0_ |= 0x00000004;
              }
              itemList_.add(input.readMessage(com.rwproto.GambleServiceProtos.GambleRewardData.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                heroList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              heroList_.add(input.readBytes());
              break;
            }
            case 42: {
              com.rwproto.GambleServiceProtos.GambleData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = gambleData_.toBuilder();
              }
              gambleData_ = input.readMessage(com.rwproto.GambleServiceProtos.GambleData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gambleData_);
                gambleData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              tips_ = input.readBytes();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                dropHistory_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.DropData>();
                mutable_bitField0_ |= 0x00000040;
              }
              dropHistory_.add(input.readMessage(com.rwproto.GambleServiceProtos.DropData.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                previewDataList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.PreviewData>();
                mutable_bitField0_ |= 0x00000080;
              }
              previewDataList_.add(input.readMessage(com.rwproto.GambleServiceProtos.PreviewData.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                guaranteenLeftCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              guaranteenLeftCountList_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                guaranteenLeftCountList_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                guaranteenLeftCountList_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          itemList_ = java.util.Collections.unmodifiableList(itemList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.UnmodifiableLazyStringList(heroList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          dropHistory_ = java.util.Collections.unmodifiableList(dropHistory_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          previewDataList_ = java.util.Collections.unmodifiableList(previewDataList_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          guaranteenLeftCountList_ = java.util.Collections.unmodifiableList(guaranteenLeftCountList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.GambleResponse.class, com.rwproto.GambleServiceProtos.GambleResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<GambleResponse> PARSER =
        new com.google.protobuf.AbstractParser<GambleResponse>() {
      public GambleResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .EGambleResultType resultType = 1;
    public static final int RESULTTYPE_FIELD_NUMBER = 1;
    private com.rwproto.GambleServiceProtos.EGambleResultType resultType_;
    /**
     * <code>required .EGambleResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    public boolean hasResultType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EGambleResultType resultType = 1;</code>
     *
     * <pre>
     *结果类型
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.EGambleResultType getResultType() {
      return resultType_;
    }

    // optional .GambleRequest request = 2;
    public static final int REQUEST_FIELD_NUMBER = 2;
    private com.rwproto.GambleServiceProtos.GambleRequest request_;
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleRequest getRequest() {
      return request_;
    }
    /**
     * <code>optional .GambleRequest request = 2;</code>
     *
     * <pre>
     *请求信息	
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleRequestOrBuilder getRequestOrBuilder() {
      return request_;
    }

    // repeated .GambleRewardData itemList = 3;
    public static final int ITEMLIST_FIELD_NUMBER = 3;
    private java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData> itemList_;
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData> getItemListList() {
      return itemList_;
    }
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder> 
        getItemListOrBuilderList() {
      return itemList_;
    }
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public int getItemListCount() {
      return itemList_.size();
    }
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleRewardData getItemList(int index) {
      return itemList_.get(index);
    }
    /**
     * <code>repeated .GambleRewardData itemList = 3;</code>
     *
     * <pre>
     *奖励列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder getItemListOrBuilder(
        int index) {
      return itemList_.get(index);
    }

    // repeated string heroList = 4;
    public static final int HEROLIST_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList heroList_;
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public java.util.List<java.lang.String>
        getHeroListList() {
      return heroList_;
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public int getHeroListCount() {
      return heroList_.size();
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public java.lang.String getHeroList(int index) {
      return heroList_.get(index);
    }
    /**
     * <code>repeated string heroList = 4;</code>
     *
     * <pre>
     *热点英雄
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeroListBytes(int index) {
      return heroList_.getByteString(index);
    }

    // optional .GambleData gambleData = 5;
    public static final int GAMBLEDATA_FIELD_NUMBER = 5;
    private com.rwproto.GambleServiceProtos.GambleData gambleData_;
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public boolean hasGambleData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleData getGambleData() {
      return gambleData_;
    }
    /**
     * <code>optional .GambleData gambleData = 5;</code>
     *
     * <pre>
     *垂钓数据
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.GambleDataOrBuilder getGambleDataOrBuilder() {
      return gambleData_;
    }

    // optional string tips = 6;
    public static final int TIPS_FIELD_NUMBER = 6;
    private java.lang.Object tips_;
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    public boolean hasTips() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    public java.lang.String getTips() {
      java.lang.Object ref = tips_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tips_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tips = 6;</code>
     *
     * <pre>
     *操作结果提示
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTipsBytes() {
      java.lang.Object ref = tips_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tips_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .DropData dropHistory = 7;
    public static final int DROPHISTORY_FIELD_NUMBER = 7;
    private java.util.List<com.rwproto.GambleServiceProtos.DropData> dropHistory_;
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    public java.util.List<com.rwproto.GambleServiceProtos.DropData> getDropHistoryList() {
      return dropHistory_;
    }
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    public java.util.List<? extends com.rwproto.GambleServiceProtos.DropDataOrBuilder> 
        getDropHistoryOrBuilderList() {
      return dropHistory_;
    }
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    public int getDropHistoryCount() {
      return dropHistory_.size();
    }
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.DropData getDropHistory(int index) {
      return dropHistory_.get(index);
    }
    /**
     * <code>repeated .DropData dropHistory = 7;</code>
     *
     * <pre>
     *新的钓鱼数据模型（未实现）
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.DropDataOrBuilder getDropHistoryOrBuilder(
        int index) {
      return dropHistory_.get(index);
    }

    // repeated .PreviewData previewDataList = 8;
    public static final int PREVIEWDATALIST_FIELD_NUMBER = 8;
    private java.util.List<com.rwproto.GambleServiceProtos.PreviewData> previewDataList_;
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    public java.util.List<com.rwproto.GambleServiceProtos.PreviewData> getPreviewDataListList() {
      return previewDataList_;
    }
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    public java.util.List<? extends com.rwproto.GambleServiceProtos.PreviewDataOrBuilder> 
        getPreviewDataListOrBuilderList() {
      return previewDataList_;
    }
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    public int getPreviewDataListCount() {
      return previewDataList_.size();
    }
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.PreviewData getPreviewDataList(int index) {
      return previewDataList_.get(index);
    }
    /**
     * <code>repeated .PreviewData previewDataList = 8;</code>
     *
     * <pre>
     *两种单抽以及魂匣的预览数据
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.PreviewDataOrBuilder getPreviewDataListOrBuilder(
        int index) {
      return previewDataList_.get(index);
    }

    // repeated int32 guaranteenLeftCountList = 9;
    public static final int GUARANTEENLEFTCOUNTLIST_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> guaranteenLeftCountList_;
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGuaranteenLeftCountListList() {
      return guaranteenLeftCountList_;
    }
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    public int getGuaranteenLeftCountListCount() {
      return guaranteenLeftCountList_.size();
    }
    /**
     * <code>repeated int32 guaranteenLeftCountList = 9;</code>
     *
     * <pre>
     *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
     * </pre>
     */
    public int getGuaranteenLeftCountList(int index) {
      return guaranteenLeftCountList_.get(index);
    }

    private void initFields() {
      resultType_ = com.rwproto.GambleServiceProtos.EGambleResultType.SUCCESS;
      request_ = com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance();
      itemList_ = java.util.Collections.emptyList();
      heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      gambleData_ = com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance();
      tips_ = "";
      dropHistory_ = java.util.Collections.emptyList();
      previewDataList_ = java.util.Collections.emptyList();
      guaranteenLeftCountList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasResultType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequest()) {
        if (!getRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getItemListCount(); i++) {
        if (!getItemList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPreviewDataListCount(); i++) {
        if (!getPreviewDataList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, resultType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, request_);
      }
      for (int i = 0; i < itemList_.size(); i++) {
        output.writeMessage(3, itemList_.get(i));
      }
      for (int i = 0; i < heroList_.size(); i++) {
        output.writeBytes(4, heroList_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, gambleData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getTipsBytes());
      }
      for (int i = 0; i < dropHistory_.size(); i++) {
        output.writeMessage(7, dropHistory_.get(i));
      }
      for (int i = 0; i < previewDataList_.size(); i++) {
        output.writeMessage(8, previewDataList_.get(i));
      }
      for (int i = 0; i < guaranteenLeftCountList_.size(); i++) {
        output.writeInt32(9, guaranteenLeftCountList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, resultType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, request_);
      }
      for (int i = 0; i < itemList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, itemList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heroList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(heroList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getHeroListList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gambleData_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getTipsBytes());
      }
      for (int i = 0; i < dropHistory_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, dropHistory_.get(i));
      }
      for (int i = 0; i < previewDataList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, previewDataList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < guaranteenLeftCountList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(guaranteenLeftCountList_.get(i));
        }
        size += dataSize;
        size += 1 * getGuaranteenLeftCountListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.GambleResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GambleResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.GambleResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.GambleResponse.class, com.rwproto.GambleServiceProtos.GambleResponse.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.GambleResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRequestFieldBuilder();
          getItemListFieldBuilder();
          getGambleDataFieldBuilder();
          getDropHistoryFieldBuilder();
          getPreviewDataListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resultType_ = com.rwproto.GambleServiceProtos.EGambleResultType.SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (requestBuilder_ == null) {
          request_ = com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          itemListBuilder_.clear();
        }
        heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gambleDataBuilder_ == null) {
          gambleData_ = com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance();
        } else {
          gambleDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        tips_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (dropHistoryBuilder_ == null) {
          dropHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          dropHistoryBuilder_.clear();
        }
        if (previewDataListBuilder_ == null) {
          previewDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          previewDataListBuilder_.clear();
        }
        guaranteenLeftCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleResponse_descriptor;
      }

      public com.rwproto.GambleServiceProtos.GambleResponse getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.GambleResponse.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.GambleResponse build() {
        com.rwproto.GambleServiceProtos.GambleResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.GambleResponse buildPartial() {
        com.rwproto.GambleServiceProtos.GambleResponse result = new com.rwproto.GambleServiceProtos.GambleResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultType_ = resultType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (itemListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            itemList_ = java.util.Collections.unmodifiableList(itemList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.itemList_ = itemList_;
        } else {
          result.itemList_ = itemListBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              heroList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.heroList_ = heroList_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        if (gambleDataBuilder_ == null) {
          result.gambleData_ = gambleData_;
        } else {
          result.gambleData_ = gambleDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.tips_ = tips_;
        if (dropHistoryBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            dropHistory_ = java.util.Collections.unmodifiableList(dropHistory_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.dropHistory_ = dropHistory_;
        } else {
          result.dropHistory_ = dropHistoryBuilder_.build();
        }
        if (previewDataListBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            previewDataList_ = java.util.Collections.unmodifiableList(previewDataList_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.previewDataList_ = previewDataList_;
        } else {
          result.previewDataList_ = previewDataListBuilder_.build();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          guaranteenLeftCountList_ = java.util.Collections.unmodifiableList(guaranteenLeftCountList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.guaranteenLeftCountList_ = guaranteenLeftCountList_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.GambleResponse) {
          return mergeFrom((com.rwproto.GambleServiceProtos.GambleResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.GambleResponse other) {
        if (other == com.rwproto.GambleServiceProtos.GambleResponse.getDefaultInstance()) return this;
        if (other.hasResultType()) {
          setResultType(other.getResultType());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (itemListBuilder_ == null) {
          if (!other.itemList_.isEmpty()) {
            if (itemList_.isEmpty()) {
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureItemListIsMutable();
              itemList_.addAll(other.itemList_);
            }
            onChanged();
          }
        } else {
          if (!other.itemList_.isEmpty()) {
            if (itemListBuilder_.isEmpty()) {
              itemListBuilder_.dispose();
              itemListBuilder_ = null;
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              itemListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemListFieldBuilder() : null;
            } else {
              itemListBuilder_.addAllMessages(other.itemList_);
            }
          }
        }
        if (!other.heroList_.isEmpty()) {
          if (heroList_.isEmpty()) {
            heroList_ = other.heroList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureHeroListIsMutable();
            heroList_.addAll(other.heroList_);
          }
          onChanged();
        }
        if (other.hasGambleData()) {
          mergeGambleData(other.getGambleData());
        }
        if (other.hasTips()) {
          bitField0_ |= 0x00000020;
          tips_ = other.tips_;
          onChanged();
        }
        if (dropHistoryBuilder_ == null) {
          if (!other.dropHistory_.isEmpty()) {
            if (dropHistory_.isEmpty()) {
              dropHistory_ = other.dropHistory_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDropHistoryIsMutable();
              dropHistory_.addAll(other.dropHistory_);
            }
            onChanged();
          }
        } else {
          if (!other.dropHistory_.isEmpty()) {
            if (dropHistoryBuilder_.isEmpty()) {
              dropHistoryBuilder_.dispose();
              dropHistoryBuilder_ = null;
              dropHistory_ = other.dropHistory_;
              bitField0_ = (bitField0_ & ~0x00000040);
              dropHistoryBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDropHistoryFieldBuilder() : null;
            } else {
              dropHistoryBuilder_.addAllMessages(other.dropHistory_);
            }
          }
        }
        if (previewDataListBuilder_ == null) {
          if (!other.previewDataList_.isEmpty()) {
            if (previewDataList_.isEmpty()) {
              previewDataList_ = other.previewDataList_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePreviewDataListIsMutable();
              previewDataList_.addAll(other.previewDataList_);
            }
            onChanged();
          }
        } else {
          if (!other.previewDataList_.isEmpty()) {
            if (previewDataListBuilder_.isEmpty()) {
              previewDataListBuilder_.dispose();
              previewDataListBuilder_ = null;
              previewDataList_ = other.previewDataList_;
              bitField0_ = (bitField0_ & ~0x00000080);
              previewDataListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPreviewDataListFieldBuilder() : null;
            } else {
              previewDataListBuilder_.addAllMessages(other.previewDataList_);
            }
          }
        }
        if (!other.guaranteenLeftCountList_.isEmpty()) {
          if (guaranteenLeftCountList_.isEmpty()) {
            guaranteenLeftCountList_ = other.guaranteenLeftCountList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureGuaranteenLeftCountListIsMutable();
            guaranteenLeftCountList_.addAll(other.guaranteenLeftCountList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasResultType()) {
          
          return false;
        }
        if (hasRequest()) {
          if (!getRequest().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getItemListCount(); i++) {
          if (!getItemList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPreviewDataListCount(); i++) {
          if (!getPreviewDataList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.GambleResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.GambleResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .EGambleResultType resultType = 1;
      private com.rwproto.GambleServiceProtos.EGambleResultType resultType_ = com.rwproto.GambleServiceProtos.EGambleResultType.SUCCESS;
      /**
       * <code>required .EGambleResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public boolean hasResultType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EGambleResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.EGambleResultType getResultType() {
        return resultType_;
      }
      /**
       * <code>required .EGambleResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public Builder setResultType(com.rwproto.GambleServiceProtos.EGambleResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        resultType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EGambleResultType resultType = 1;</code>
       *
       * <pre>
       *结果类型
       * </pre>
       */
      public Builder clearResultType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultType_ = com.rwproto.GambleServiceProtos.EGambleResultType.SUCCESS;
        onChanged();
        return this;
      }

      // optional .GambleRequest request = 2;
      private com.rwproto.GambleServiceProtos.GambleRequest request_ = com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleRequest, com.rwproto.GambleServiceProtos.GambleRequest.Builder, com.rwproto.GambleServiceProtos.GambleRequestOrBuilder> requestBuilder_;
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder setRequest(com.rwproto.GambleServiceProtos.GambleRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder setRequest(
          com.rwproto.GambleServiceProtos.GambleRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder mergeRequest(com.rwproto.GambleServiceProtos.GambleRequest value) {
        if (requestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              request_ != com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance()) {
            request_ =
              com.rwproto.GambleServiceProtos.GambleRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = com.rwproto.GambleServiceProtos.GambleRequest.getDefaultInstance();
          onChanged();
        } else {
          requestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRequest.Builder getRequestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_;
        }
      }
      /**
       * <code>optional .GambleRequest request = 2;</code>
       *
       * <pre>
       *请求信息	
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleRequest, com.rwproto.GambleServiceProtos.GambleRequest.Builder, com.rwproto.GambleServiceProtos.GambleRequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.GambleServiceProtos.GambleRequest, com.rwproto.GambleServiceProtos.GambleRequest.Builder, com.rwproto.GambleServiceProtos.GambleRequestOrBuilder>(
                  request_,
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      // repeated .GambleRewardData itemList = 3;
      private java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData> itemList_ =
        java.util.Collections.emptyList();
      private void ensureItemListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          itemList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.GambleRewardData>(itemList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleRewardData, com.rwproto.GambleServiceProtos.GambleRewardData.Builder, com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder> itemListBuilder_;

      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData> getItemListList() {
        if (itemListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemList_);
        } else {
          return itemListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public int getItemListCount() {
        if (itemListBuilder_ == null) {
          return itemList_.size();
        } else {
          return itemListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRewardData getItemList(int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);
        } else {
          return itemListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.GambleServiceProtos.GambleRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.set(index, value);
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.GambleServiceProtos.GambleRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(com.rwproto.GambleServiceProtos.GambleRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.GambleServiceProtos.GambleRewardData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(index, value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          com.rwproto.GambleServiceProtos.GambleRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.GambleServiceProtos.GambleRewardData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder addAllItemList(
          java.lang.Iterable<? extends com.rwproto.GambleServiceProtos.GambleRewardData> values) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          super.addAll(values, itemList_);
          onChanged();
        } else {
          itemListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder clearItemList() {
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          itemListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public Builder removeItemList(int index) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.remove(index);
          onChanged();
        } else {
          itemListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRewardData.Builder getItemListBuilder(
          int index) {
        return getItemListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder getItemListOrBuilder(
          int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);  } else {
          return itemListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder> 
           getItemListOrBuilderList() {
        if (itemListBuilder_ != null) {
          return itemListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemList_);
        }
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRewardData.Builder addItemListBuilder() {
        return getItemListFieldBuilder().addBuilder(
            com.rwproto.GambleServiceProtos.GambleRewardData.getDefaultInstance());
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleRewardData.Builder addItemListBuilder(
          int index) {
        return getItemListFieldBuilder().addBuilder(
            index, com.rwproto.GambleServiceProtos.GambleRewardData.getDefaultInstance());
      }
      /**
       * <code>repeated .GambleRewardData itemList = 3;</code>
       *
       * <pre>
       *奖励列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.GambleRewardData.Builder> 
           getItemListBuilderList() {
        return getItemListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleRewardData, com.rwproto.GambleServiceProtos.GambleRewardData.Builder, com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder> 
          getItemListFieldBuilder() {
        if (itemListBuilder_ == null) {
          itemListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.GambleServiceProtos.GambleRewardData, com.rwproto.GambleServiceProtos.GambleRewardData.Builder, com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder>(
                  itemList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          itemList_ = null;
        }
        return itemListBuilder_;
      }

      // repeated string heroList = 4;
      private com.google.protobuf.LazyStringList heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHeroListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          heroList_ = new com.google.protobuf.LazyStringArrayList(heroList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public java.util.List<java.lang.String>
          getHeroListList() {
        return java.util.Collections.unmodifiableList(heroList_);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public int getHeroListCount() {
        return heroList_.size();
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public java.lang.String getHeroList(int index) {
        return heroList_.get(index);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeroListBytes(int index) {
        return heroList_.getByteString(index);
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder setHeroList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addHeroList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addAllHeroList(
          java.lang.Iterable<java.lang.String> values) {
        ensureHeroListIsMutable();
        super.addAll(values, heroList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder clearHeroList() {
        heroList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string heroList = 4;</code>
       *
       * <pre>
       *热点英雄
       * </pre>
       */
      public Builder addHeroListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeroListIsMutable();
        heroList_.add(value);
        onChanged();
        return this;
      }

      // optional .GambleData gambleData = 5;
      private com.rwproto.GambleServiceProtos.GambleData gambleData_ = com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleData, com.rwproto.GambleServiceProtos.GambleData.Builder, com.rwproto.GambleServiceProtos.GambleDataOrBuilder> gambleDataBuilder_;
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public boolean hasGambleData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleData getGambleData() {
        if (gambleDataBuilder_ == null) {
          return gambleData_;
        } else {
          return gambleDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder setGambleData(com.rwproto.GambleServiceProtos.GambleData value) {
        if (gambleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gambleData_ = value;
          onChanged();
        } else {
          gambleDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder setGambleData(
          com.rwproto.GambleServiceProtos.GambleData.Builder builderForValue) {
        if (gambleDataBuilder_ == null) {
          gambleData_ = builderForValue.build();
          onChanged();
        } else {
          gambleDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder mergeGambleData(com.rwproto.GambleServiceProtos.GambleData value) {
        if (gambleDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              gambleData_ != com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance()) {
            gambleData_ =
              com.rwproto.GambleServiceProtos.GambleData.newBuilder(gambleData_).mergeFrom(value).buildPartial();
          } else {
            gambleData_ = value;
          }
          onChanged();
        } else {
          gambleDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public Builder clearGambleData() {
        if (gambleDataBuilder_ == null) {
          gambleData_ = com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance();
          onChanged();
        } else {
          gambleDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleData.Builder getGambleDataBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGambleDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.GambleDataOrBuilder getGambleDataOrBuilder() {
        if (gambleDataBuilder_ != null) {
          return gambleDataBuilder_.getMessageOrBuilder();
        } else {
          return gambleData_;
        }
      }
      /**
       * <code>optional .GambleData gambleData = 5;</code>
       *
       * <pre>
       *垂钓数据
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.GambleServiceProtos.GambleData, com.rwproto.GambleServiceProtos.GambleData.Builder, com.rwproto.GambleServiceProtos.GambleDataOrBuilder> 
          getGambleDataFieldBuilder() {
        if (gambleDataBuilder_ == null) {
          gambleDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.GambleServiceProtos.GambleData, com.rwproto.GambleServiceProtos.GambleData.Builder, com.rwproto.GambleServiceProtos.GambleDataOrBuilder>(
                  gambleData_,
                  getParentForChildren(),
                  isClean());
          gambleData_ = null;
        }
        return gambleDataBuilder_;
      }

      // optional string tips = 6;
      private java.lang.Object tips_ = "";
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public boolean hasTips() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public java.lang.String getTips() {
        java.lang.Object ref = tips_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tips_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTipsBytes() {
        java.lang.Object ref = tips_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tips_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public Builder setTips(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        tips_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public Builder clearTips() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tips_ = getDefaultInstance().getTips();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tips = 6;</code>
       *
       * <pre>
       *操作结果提示
       * </pre>
       */
      public Builder setTipsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        tips_ = value;
        onChanged();
        return this;
      }

      // repeated .DropData dropHistory = 7;
      private java.util.List<com.rwproto.GambleServiceProtos.DropData> dropHistory_ =
        java.util.Collections.emptyList();
      private void ensureDropHistoryIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          dropHistory_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.DropData>(dropHistory_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.DropData, com.rwproto.GambleServiceProtos.DropData.Builder, com.rwproto.GambleServiceProtos.DropDataOrBuilder> dropHistoryBuilder_;

      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.DropData> getDropHistoryList() {
        if (dropHistoryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dropHistory_);
        } else {
          return dropHistoryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public int getDropHistoryCount() {
        if (dropHistoryBuilder_ == null) {
          return dropHistory_.size();
        } else {
          return dropHistoryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.DropData getDropHistory(int index) {
        if (dropHistoryBuilder_ == null) {
          return dropHistory_.get(index);
        } else {
          return dropHistoryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder setDropHistory(
          int index, com.rwproto.GambleServiceProtos.DropData value) {
        if (dropHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropHistoryIsMutable();
          dropHistory_.set(index, value);
          onChanged();
        } else {
          dropHistoryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder setDropHistory(
          int index, com.rwproto.GambleServiceProtos.DropData.Builder builderForValue) {
        if (dropHistoryBuilder_ == null) {
          ensureDropHistoryIsMutable();
          dropHistory_.set(index, builderForValue.build());
          onChanged();
        } else {
          dropHistoryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder addDropHistory(com.rwproto.GambleServiceProtos.DropData value) {
        if (dropHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropHistoryIsMutable();
          dropHistory_.add(value);
          onChanged();
        } else {
          dropHistoryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder addDropHistory(
          int index, com.rwproto.GambleServiceProtos.DropData value) {
        if (dropHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropHistoryIsMutable();
          dropHistory_.add(index, value);
          onChanged();
        } else {
          dropHistoryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder addDropHistory(
          com.rwproto.GambleServiceProtos.DropData.Builder builderForValue) {
        if (dropHistoryBuilder_ == null) {
          ensureDropHistoryIsMutable();
          dropHistory_.add(builderForValue.build());
          onChanged();
        } else {
          dropHistoryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder addDropHistory(
          int index, com.rwproto.GambleServiceProtos.DropData.Builder builderForValue) {
        if (dropHistoryBuilder_ == null) {
          ensureDropHistoryIsMutable();
          dropHistory_.add(index, builderForValue.build());
          onChanged();
        } else {
          dropHistoryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder addAllDropHistory(
          java.lang.Iterable<? extends com.rwproto.GambleServiceProtos.DropData> values) {
        if (dropHistoryBuilder_ == null) {
          ensureDropHistoryIsMutable();
          super.addAll(values, dropHistory_);
          onChanged();
        } else {
          dropHistoryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder clearDropHistory() {
        if (dropHistoryBuilder_ == null) {
          dropHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          dropHistoryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public Builder removeDropHistory(int index) {
        if (dropHistoryBuilder_ == null) {
          ensureDropHistoryIsMutable();
          dropHistory_.remove(index);
          onChanged();
        } else {
          dropHistoryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.DropData.Builder getDropHistoryBuilder(
          int index) {
        return getDropHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.DropDataOrBuilder getDropHistoryOrBuilder(
          int index) {
        if (dropHistoryBuilder_ == null) {
          return dropHistory_.get(index);  } else {
          return dropHistoryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public java.util.List<? extends com.rwproto.GambleServiceProtos.DropDataOrBuilder> 
           getDropHistoryOrBuilderList() {
        if (dropHistoryBuilder_ != null) {
          return dropHistoryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dropHistory_);
        }
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.DropData.Builder addDropHistoryBuilder() {
        return getDropHistoryFieldBuilder().addBuilder(
            com.rwproto.GambleServiceProtos.DropData.getDefaultInstance());
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.DropData.Builder addDropHistoryBuilder(
          int index) {
        return getDropHistoryFieldBuilder().addBuilder(
            index, com.rwproto.GambleServiceProtos.DropData.getDefaultInstance());
      }
      /**
       * <code>repeated .DropData dropHistory = 7;</code>
       *
       * <pre>
       *新的钓鱼数据模型（未实现）
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.DropData.Builder> 
           getDropHistoryBuilderList() {
        return getDropHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.DropData, com.rwproto.GambleServiceProtos.DropData.Builder, com.rwproto.GambleServiceProtos.DropDataOrBuilder> 
          getDropHistoryFieldBuilder() {
        if (dropHistoryBuilder_ == null) {
          dropHistoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.GambleServiceProtos.DropData, com.rwproto.GambleServiceProtos.DropData.Builder, com.rwproto.GambleServiceProtos.DropDataOrBuilder>(
                  dropHistory_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          dropHistory_ = null;
        }
        return dropHistoryBuilder_;
      }

      // repeated .PreviewData previewDataList = 8;
      private java.util.List<com.rwproto.GambleServiceProtos.PreviewData> previewDataList_ =
        java.util.Collections.emptyList();
      private void ensurePreviewDataListIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          previewDataList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.PreviewData>(previewDataList_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.PreviewData, com.rwproto.GambleServiceProtos.PreviewData.Builder, com.rwproto.GambleServiceProtos.PreviewDataOrBuilder> previewDataListBuilder_;

      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.PreviewData> getPreviewDataListList() {
        if (previewDataListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(previewDataList_);
        } else {
          return previewDataListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public int getPreviewDataListCount() {
        if (previewDataListBuilder_ == null) {
          return previewDataList_.size();
        } else {
          return previewDataListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.PreviewData getPreviewDataList(int index) {
        if (previewDataListBuilder_ == null) {
          return previewDataList_.get(index);
        } else {
          return previewDataListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder setPreviewDataList(
          int index, com.rwproto.GambleServiceProtos.PreviewData value) {
        if (previewDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewDataListIsMutable();
          previewDataList_.set(index, value);
          onChanged();
        } else {
          previewDataListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder setPreviewDataList(
          int index, com.rwproto.GambleServiceProtos.PreviewData.Builder builderForValue) {
        if (previewDataListBuilder_ == null) {
          ensurePreviewDataListIsMutable();
          previewDataList_.set(index, builderForValue.build());
          onChanged();
        } else {
          previewDataListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder addPreviewDataList(com.rwproto.GambleServiceProtos.PreviewData value) {
        if (previewDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewDataListIsMutable();
          previewDataList_.add(value);
          onChanged();
        } else {
          previewDataListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder addPreviewDataList(
          int index, com.rwproto.GambleServiceProtos.PreviewData value) {
        if (previewDataListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreviewDataListIsMutable();
          previewDataList_.add(index, value);
          onChanged();
        } else {
          previewDataListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder addPreviewDataList(
          com.rwproto.GambleServiceProtos.PreviewData.Builder builderForValue) {
        if (previewDataListBuilder_ == null) {
          ensurePreviewDataListIsMutable();
          previewDataList_.add(builderForValue.build());
          onChanged();
        } else {
          previewDataListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder addPreviewDataList(
          int index, com.rwproto.GambleServiceProtos.PreviewData.Builder builderForValue) {
        if (previewDataListBuilder_ == null) {
          ensurePreviewDataListIsMutable();
          previewDataList_.add(index, builderForValue.build());
          onChanged();
        } else {
          previewDataListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder addAllPreviewDataList(
          java.lang.Iterable<? extends com.rwproto.GambleServiceProtos.PreviewData> values) {
        if (previewDataListBuilder_ == null) {
          ensurePreviewDataListIsMutable();
          super.addAll(values, previewDataList_);
          onChanged();
        } else {
          previewDataListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder clearPreviewDataList() {
        if (previewDataListBuilder_ == null) {
          previewDataList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          previewDataListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public Builder removePreviewDataList(int index) {
        if (previewDataListBuilder_ == null) {
          ensurePreviewDataListIsMutable();
          previewDataList_.remove(index);
          onChanged();
        } else {
          previewDataListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.PreviewData.Builder getPreviewDataListBuilder(
          int index) {
        return getPreviewDataListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.PreviewDataOrBuilder getPreviewDataListOrBuilder(
          int index) {
        if (previewDataListBuilder_ == null) {
          return previewDataList_.get(index);  } else {
          return previewDataListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public java.util.List<? extends com.rwproto.GambleServiceProtos.PreviewDataOrBuilder> 
           getPreviewDataListOrBuilderList() {
        if (previewDataListBuilder_ != null) {
          return previewDataListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(previewDataList_);
        }
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.PreviewData.Builder addPreviewDataListBuilder() {
        return getPreviewDataListFieldBuilder().addBuilder(
            com.rwproto.GambleServiceProtos.PreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.PreviewData.Builder addPreviewDataListBuilder(
          int index) {
        return getPreviewDataListFieldBuilder().addBuilder(
            index, com.rwproto.GambleServiceProtos.PreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .PreviewData previewDataList = 8;</code>
       *
       * <pre>
       *两种单抽以及魂匣的预览数据
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.PreviewData.Builder> 
           getPreviewDataListBuilderList() {
        return getPreviewDataListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.PreviewData, com.rwproto.GambleServiceProtos.PreviewData.Builder, com.rwproto.GambleServiceProtos.PreviewDataOrBuilder> 
          getPreviewDataListFieldBuilder() {
        if (previewDataListBuilder_ == null) {
          previewDataListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.GambleServiceProtos.PreviewData, com.rwproto.GambleServiceProtos.PreviewData.Builder, com.rwproto.GambleServiceProtos.PreviewDataOrBuilder>(
                  previewDataList_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          previewDataList_ = null;
        }
        return previewDataListBuilder_;
      }

      // repeated int32 guaranteenLeftCountList = 9;
      private java.util.List<java.lang.Integer> guaranteenLeftCountList_ = java.util.Collections.emptyList();
      private void ensureGuaranteenLeftCountListIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          guaranteenLeftCountList_ = new java.util.ArrayList<java.lang.Integer>(guaranteenLeftCountList_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGuaranteenLeftCountListList() {
        return java.util.Collections.unmodifiableList(guaranteenLeftCountList_);
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public int getGuaranteenLeftCountListCount() {
        return guaranteenLeftCountList_.size();
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public int getGuaranteenLeftCountList(int index) {
        return guaranteenLeftCountList_.get(index);
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public Builder setGuaranteenLeftCountList(
          int index, int value) {
        ensureGuaranteenLeftCountListIsMutable();
        guaranteenLeftCountList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public Builder addGuaranteenLeftCountList(int value) {
        ensureGuaranteenLeftCountListIsMutable();
        guaranteenLeftCountList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public Builder addAllGuaranteenLeftCountList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGuaranteenLeftCountListIsMutable();
        super.addAll(values, guaranteenLeftCountList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 guaranteenLeftCountList = 9;</code>
       *
       * <pre>
       *出现保底的剩余次数，第一个是金币单抽，第二个是钻石单抽
       * </pre>
       */
      public Builder clearGuaranteenLeftCountList() {
        guaranteenLeftCountList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GambleResponse)
    }

    static {
      defaultInstance = new GambleResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GambleResponse)
  }

  public interface DropDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 freeCount = 1;
    /**
     * <code>optional int32 freeCount = 1;</code>
     *
     * <pre>
     *已经免费抽卡的次数
     * </pre>
     */
    boolean hasFreeCount();
    /**
     * <code>optional int32 freeCount = 1;</code>
     *
     * <pre>
     *已经免费抽卡的次数
     * </pre>
     */
    int getFreeCount();

    // optional int32 maxFreeCount = 2;
    /**
     * <code>optional int32 maxFreeCount = 2;</code>
     *
     * <pre>
     *最大免费次数，如果为0，表示这个方案没有免费次数
     * </pre>
     */
    boolean hasMaxFreeCount();
    /**
     * <code>optional int32 maxFreeCount = 2;</code>
     *
     * <pre>
     *最大免费次数，如果为0，表示这个方案没有免费次数
     * </pre>
     */
    int getMaxFreeCount();

    // optional int32 leftTime = 3;
    /**
     * <code>optional int32 leftTime = 3;</code>
     *
     * <pre>
     * 剩余免费抽卡倒计时（单位为秒）
     * </pre>
     */
    boolean hasLeftTime();
    /**
     * <code>optional int32 leftTime = 3;</code>
     *
     * <pre>
     * 剩余免费抽卡倒计时（单位为秒）
     * </pre>
     */
    int getLeftTime();

    // optional int32 guaranteenLeftCount = 4;
    /**
     * <code>optional int32 guaranteenLeftCount = 4;</code>
     *
     * <pre>
     *出现保底的剩余次数，紧紧对单抽有效
     * </pre>
     */
    boolean hasGuaranteenLeftCount();
    /**
     * <code>optional int32 guaranteenLeftCount = 4;</code>
     *
     * <pre>
     *出现保底的剩余次数，紧紧对单抽有效
     * </pre>
     */
    int getGuaranteenLeftCount();
  }
  /**
   * Protobuf type {@code DropData}
   */
  public static final class DropData extends
      com.google.protobuf.GeneratedMessage
      implements DropDataOrBuilder {
    // Use DropData.newBuilder() to construct.
    private DropData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DropData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DropData defaultInstance;
    public static DropData getDefaultInstance() {
      return defaultInstance;
    }

    public DropData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DropData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              freeCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxFreeCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leftTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              guaranteenLeftCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_DropData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_DropData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.DropData.class, com.rwproto.GambleServiceProtos.DropData.Builder.class);
    }

    public static com.google.protobuf.Parser<DropData> PARSER =
        new com.google.protobuf.AbstractParser<DropData>() {
      public DropData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DropData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DropData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 freeCount = 1;
    public static final int FREECOUNT_FIELD_NUMBER = 1;
    private int freeCount_;
    /**
     * <code>optional int32 freeCount = 1;</code>
     *
     * <pre>
     *已经免费抽卡的次数
     * </pre>
     */
    public boolean hasFreeCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 freeCount = 1;</code>
     *
     * <pre>
     *已经免费抽卡的次数
     * </pre>
     */
    public int getFreeCount() {
      return freeCount_;
    }

    // optional int32 maxFreeCount = 2;
    public static final int MAXFREECOUNT_FIELD_NUMBER = 2;
    private int maxFreeCount_;
    /**
     * <code>optional int32 maxFreeCount = 2;</code>
     *
     * <pre>
     *最大免费次数，如果为0，表示这个方案没有免费次数
     * </pre>
     */
    public boolean hasMaxFreeCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 maxFreeCount = 2;</code>
     *
     * <pre>
     *最大免费次数，如果为0，表示这个方案没有免费次数
     * </pre>
     */
    public int getMaxFreeCount() {
      return maxFreeCount_;
    }

    // optional int32 leftTime = 3;
    public static final int LEFTTIME_FIELD_NUMBER = 3;
    private int leftTime_;
    /**
     * <code>optional int32 leftTime = 3;</code>
     *
     * <pre>
     * 剩余免费抽卡倒计时（单位为秒）
     * </pre>
     */
    public boolean hasLeftTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 leftTime = 3;</code>
     *
     * <pre>
     * 剩余免费抽卡倒计时（单位为秒）
     * </pre>
     */
    public int getLeftTime() {
      return leftTime_;
    }

    // optional int32 guaranteenLeftCount = 4;
    public static final int GUARANTEENLEFTCOUNT_FIELD_NUMBER = 4;
    private int guaranteenLeftCount_;
    /**
     * <code>optional int32 guaranteenLeftCount = 4;</code>
     *
     * <pre>
     *出现保底的剩余次数，紧紧对单抽有效
     * </pre>
     */
    public boolean hasGuaranteenLeftCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 guaranteenLeftCount = 4;</code>
     *
     * <pre>
     *出现保底的剩余次数，紧紧对单抽有效
     * </pre>
     */
    public int getGuaranteenLeftCount() {
      return guaranteenLeftCount_;
    }

    private void initFields() {
      freeCount_ = 0;
      maxFreeCount_ = 0;
      leftTime_ = 0;
      guaranteenLeftCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, freeCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxFreeCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, leftTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, guaranteenLeftCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, freeCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxFreeCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, guaranteenLeftCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.DropData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.DropData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DropData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.DropDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_DropData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_DropData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.DropData.class, com.rwproto.GambleServiceProtos.DropData.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.DropData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        freeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxFreeCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        leftTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        guaranteenLeftCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_DropData_descriptor;
      }

      public com.rwproto.GambleServiceProtos.DropData getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.DropData.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.DropData build() {
        com.rwproto.GambleServiceProtos.DropData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.DropData buildPartial() {
        com.rwproto.GambleServiceProtos.DropData result = new com.rwproto.GambleServiceProtos.DropData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.freeCount_ = freeCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxFreeCount_ = maxFreeCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftTime_ = leftTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.guaranteenLeftCount_ = guaranteenLeftCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.DropData) {
          return mergeFrom((com.rwproto.GambleServiceProtos.DropData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.DropData other) {
        if (other == com.rwproto.GambleServiceProtos.DropData.getDefaultInstance()) return this;
        if (other.hasFreeCount()) {
          setFreeCount(other.getFreeCount());
        }
        if (other.hasMaxFreeCount()) {
          setMaxFreeCount(other.getMaxFreeCount());
        }
        if (other.hasLeftTime()) {
          setLeftTime(other.getLeftTime());
        }
        if (other.hasGuaranteenLeftCount()) {
          setGuaranteenLeftCount(other.getGuaranteenLeftCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.DropData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.DropData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 freeCount = 1;
      private int freeCount_ ;
      /**
       * <code>optional int32 freeCount = 1;</code>
       *
       * <pre>
       *已经免费抽卡的次数
       * </pre>
       */
      public boolean hasFreeCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 freeCount = 1;</code>
       *
       * <pre>
       *已经免费抽卡的次数
       * </pre>
       */
      public int getFreeCount() {
        return freeCount_;
      }
      /**
       * <code>optional int32 freeCount = 1;</code>
       *
       * <pre>
       *已经免费抽卡的次数
       * </pre>
       */
      public Builder setFreeCount(int value) {
        bitField0_ |= 0x00000001;
        freeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 freeCount = 1;</code>
       *
       * <pre>
       *已经免费抽卡的次数
       * </pre>
       */
      public Builder clearFreeCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        freeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxFreeCount = 2;
      private int maxFreeCount_ ;
      /**
       * <code>optional int32 maxFreeCount = 2;</code>
       *
       * <pre>
       *最大免费次数，如果为0，表示这个方案没有免费次数
       * </pre>
       */
      public boolean hasMaxFreeCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 maxFreeCount = 2;</code>
       *
       * <pre>
       *最大免费次数，如果为0，表示这个方案没有免费次数
       * </pre>
       */
      public int getMaxFreeCount() {
        return maxFreeCount_;
      }
      /**
       * <code>optional int32 maxFreeCount = 2;</code>
       *
       * <pre>
       *最大免费次数，如果为0，表示这个方案没有免费次数
       * </pre>
       */
      public Builder setMaxFreeCount(int value) {
        bitField0_ |= 0x00000002;
        maxFreeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxFreeCount = 2;</code>
       *
       * <pre>
       *最大免费次数，如果为0，表示这个方案没有免费次数
       * </pre>
       */
      public Builder clearMaxFreeCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxFreeCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 leftTime = 3;
      private int leftTime_ ;
      /**
       * <code>optional int32 leftTime = 3;</code>
       *
       * <pre>
       * 剩余免费抽卡倒计时（单位为秒）
       * </pre>
       */
      public boolean hasLeftTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 leftTime = 3;</code>
       *
       * <pre>
       * 剩余免费抽卡倒计时（单位为秒）
       * </pre>
       */
      public int getLeftTime() {
        return leftTime_;
      }
      /**
       * <code>optional int32 leftTime = 3;</code>
       *
       * <pre>
       * 剩余免费抽卡倒计时（单位为秒）
       * </pre>
       */
      public Builder setLeftTime(int value) {
        bitField0_ |= 0x00000004;
        leftTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leftTime = 3;</code>
       *
       * <pre>
       * 剩余免费抽卡倒计时（单位为秒）
       * </pre>
       */
      public Builder clearLeftTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 guaranteenLeftCount = 4;
      private int guaranteenLeftCount_ ;
      /**
       * <code>optional int32 guaranteenLeftCount = 4;</code>
       *
       * <pre>
       *出现保底的剩余次数，紧紧对单抽有效
       * </pre>
       */
      public boolean hasGuaranteenLeftCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 guaranteenLeftCount = 4;</code>
       *
       * <pre>
       *出现保底的剩余次数，紧紧对单抽有效
       * </pre>
       */
      public int getGuaranteenLeftCount() {
        return guaranteenLeftCount_;
      }
      /**
       * <code>optional int32 guaranteenLeftCount = 4;</code>
       *
       * <pre>
       *出现保底的剩余次数，紧紧对单抽有效
       * </pre>
       */
      public Builder setGuaranteenLeftCount(int value) {
        bitField0_ |= 0x00000008;
        guaranteenLeftCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 guaranteenLeftCount = 4;</code>
       *
       * <pre>
       *出现保底的剩余次数，紧紧对单抽有效
       * </pre>
       */
      public Builder clearGuaranteenLeftCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        guaranteenLeftCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DropData)
    }

    static {
      defaultInstance = new DropData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DropData)
  }

  public interface GambleRewardDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string itemId = 1;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    java.lang.String getItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();

    // required int32 itemNum = 2;
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    boolean hasItemNum();
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    int getItemNum();
  }
  /**
   * Protobuf type {@code GambleRewardData}
   */
  public static final class GambleRewardData extends
      com.google.protobuf.GeneratedMessage
      implements GambleRewardDataOrBuilder {
    // Use GambleRewardData.newBuilder() to construct.
    private GambleRewardData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GambleRewardData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GambleRewardData defaultInstance;
    public static GambleRewardData getDefaultInstance() {
      return defaultInstance;
    }

    public GambleRewardData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GambleRewardData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemNum_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleRewardData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleRewardData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.GambleRewardData.class, com.rwproto.GambleServiceProtos.GambleRewardData.Builder.class);
    }

    public static com.google.protobuf.Parser<GambleRewardData> PARSER =
        new com.google.protobuf.AbstractParser<GambleRewardData>() {
      public GambleRewardData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleRewardData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleRewardData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string itemId = 1;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private java.lang.Object itemId_;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *物品ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 itemNum = 2;
    public static final int ITEMNUM_FIELD_NUMBER = 2;
    private int itemNum_;
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    public boolean hasItemNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 itemNum = 2;</code>
     *
     * <pre>
     *物品数量
     * </pre>
     */
    public int getItemNum() {
      return itemNum_;
    }

    private void initFields() {
      itemId_ = "";
      itemNum_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, itemNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, itemNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleRewardData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.GambleRewardData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GambleRewardData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.GambleRewardDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRewardData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRewardData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.GambleRewardData.class, com.rwproto.GambleServiceProtos.GambleRewardData.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.GambleRewardData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        itemNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleRewardData_descriptor;
      }

      public com.rwproto.GambleServiceProtos.GambleRewardData getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.GambleRewardData.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.GambleRewardData build() {
        com.rwproto.GambleServiceProtos.GambleRewardData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.GambleRewardData buildPartial() {
        com.rwproto.GambleServiceProtos.GambleRewardData result = new com.rwproto.GambleServiceProtos.GambleRewardData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemNum_ = itemNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.GambleRewardData) {
          return mergeFrom((com.rwproto.GambleServiceProtos.GambleRewardData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.GambleRewardData other) {
        if (other == com.rwproto.GambleServiceProtos.GambleRewardData.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          bitField0_ |= 0x00000001;
          itemId_ = other.itemId_;
          onChanged();
        }
        if (other.hasItemNum()) {
          setItemNum(other.getItemNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasItemId()) {
          
          return false;
        }
        if (!hasItemNum()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.GambleRewardData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.GambleRewardData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string itemId = 1;
      private java.lang.Object itemId_ = "";
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *物品ID
       * </pre>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }

      // required int32 itemNum = 2;
      private int itemNum_ ;
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public boolean hasItemNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public int getItemNum() {
        return itemNum_;
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public Builder setItemNum(int value) {
        bitField0_ |= 0x00000002;
        itemNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 itemNum = 2;</code>
       *
       * <pre>
       *物品数量
       * </pre>
       */
      public Builder clearItemNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GambleRewardData)
    }

    static {
      defaultInstance = new GambleRewardData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GambleRewardData)
  }

  public interface GambleDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 primaryTime = 1;
    /**
     * <code>optional int32 primaryTime = 1;</code>
     *
     * <pre>
     *初级祈祷免费剩余时间(秒)
     * </pre>
     */
    boolean hasPrimaryTime();
    /**
     * <code>optional int32 primaryTime = 1;</code>
     *
     * <pre>
     *初级祈祷免费剩余时间(秒)
     * </pre>
     */
    int getPrimaryTime();

    // optional int32 primaryCount = 2;
    /**
     * <code>optional int32 primaryCount = 2;</code>
     *
     * <pre>
     *初级祈祷免费已用次数
     * </pre>
     */
    boolean hasPrimaryCount();
    /**
     * <code>optional int32 primaryCount = 2;</code>
     *
     * <pre>
     *初级祈祷免费已用次数
     * </pre>
     */
    int getPrimaryCount();

    // optional int32 middleTime = 3;
    /**
     * <code>optional int32 middleTime = 3;</code>
     *
     * <pre>
     *中级祈祷免费剩余时间(秒)
     * </pre>
     */
    boolean hasMiddleTime();
    /**
     * <code>optional int32 middleTime = 3;</code>
     *
     * <pre>
     *中级祈祷免费剩余时间(秒)
     * </pre>
     */
    int getMiddleTime();
  }
  /**
   * Protobuf type {@code GambleData}
   */
  public static final class GambleData extends
      com.google.protobuf.GeneratedMessage
      implements GambleDataOrBuilder {
    // Use GambleData.newBuilder() to construct.
    private GambleData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GambleData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GambleData defaultInstance;
    public static GambleData getDefaultInstance() {
      return defaultInstance;
    }

    public GambleData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GambleData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              primaryTime_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              primaryCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              middleTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_GambleData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.GambleData.class, com.rwproto.GambleServiceProtos.GambleData.Builder.class);
    }

    public static com.google.protobuf.Parser<GambleData> PARSER =
        new com.google.protobuf.AbstractParser<GambleData>() {
      public GambleData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GambleData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GambleData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 primaryTime = 1;
    public static final int PRIMARYTIME_FIELD_NUMBER = 1;
    private int primaryTime_;
    /**
     * <code>optional int32 primaryTime = 1;</code>
     *
     * <pre>
     *初级祈祷免费剩余时间(秒)
     * </pre>
     */
    public boolean hasPrimaryTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 primaryTime = 1;</code>
     *
     * <pre>
     *初级祈祷免费剩余时间(秒)
     * </pre>
     */
    public int getPrimaryTime() {
      return primaryTime_;
    }

    // optional int32 primaryCount = 2;
    public static final int PRIMARYCOUNT_FIELD_NUMBER = 2;
    private int primaryCount_;
    /**
     * <code>optional int32 primaryCount = 2;</code>
     *
     * <pre>
     *初级祈祷免费已用次数
     * </pre>
     */
    public boolean hasPrimaryCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 primaryCount = 2;</code>
     *
     * <pre>
     *初级祈祷免费已用次数
     * </pre>
     */
    public int getPrimaryCount() {
      return primaryCount_;
    }

    // optional int32 middleTime = 3;
    public static final int MIDDLETIME_FIELD_NUMBER = 3;
    private int middleTime_;
    /**
     * <code>optional int32 middleTime = 3;</code>
     *
     * <pre>
     *中级祈祷免费剩余时间(秒)
     * </pre>
     */
    public boolean hasMiddleTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 middleTime = 3;</code>
     *
     * <pre>
     *中级祈祷免费剩余时间(秒)
     * </pre>
     */
    public int getMiddleTime() {
      return middleTime_;
    }

    private void initFields() {
      primaryTime_ = 0;
      primaryCount_ = 0;
      middleTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, primaryTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, primaryCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, middleTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, primaryTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, primaryCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, middleTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.GambleData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.GambleData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GambleData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.GambleDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.GambleData.class, com.rwproto.GambleServiceProtos.GambleData.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.GambleData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        primaryTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        primaryCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        middleTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_GambleData_descriptor;
      }

      public com.rwproto.GambleServiceProtos.GambleData getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.GambleData build() {
        com.rwproto.GambleServiceProtos.GambleData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.GambleData buildPartial() {
        com.rwproto.GambleServiceProtos.GambleData result = new com.rwproto.GambleServiceProtos.GambleData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.primaryTime_ = primaryTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.primaryCount_ = primaryCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.middleTime_ = middleTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.GambleData) {
          return mergeFrom((com.rwproto.GambleServiceProtos.GambleData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.GambleData other) {
        if (other == com.rwproto.GambleServiceProtos.GambleData.getDefaultInstance()) return this;
        if (other.hasPrimaryTime()) {
          setPrimaryTime(other.getPrimaryTime());
        }
        if (other.hasPrimaryCount()) {
          setPrimaryCount(other.getPrimaryCount());
        }
        if (other.hasMiddleTime()) {
          setMiddleTime(other.getMiddleTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.GambleData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.GambleData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 primaryTime = 1;
      private int primaryTime_ ;
      /**
       * <code>optional int32 primaryTime = 1;</code>
       *
       * <pre>
       *初级祈祷免费剩余时间(秒)
       * </pre>
       */
      public boolean hasPrimaryTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 primaryTime = 1;</code>
       *
       * <pre>
       *初级祈祷免费剩余时间(秒)
       * </pre>
       */
      public int getPrimaryTime() {
        return primaryTime_;
      }
      /**
       * <code>optional int32 primaryTime = 1;</code>
       *
       * <pre>
       *初级祈祷免费剩余时间(秒)
       * </pre>
       */
      public Builder setPrimaryTime(int value) {
        bitField0_ |= 0x00000001;
        primaryTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 primaryTime = 1;</code>
       *
       * <pre>
       *初级祈祷免费剩余时间(秒)
       * </pre>
       */
      public Builder clearPrimaryTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        primaryTime_ = 0;
        onChanged();
        return this;
      }

      // optional int32 primaryCount = 2;
      private int primaryCount_ ;
      /**
       * <code>optional int32 primaryCount = 2;</code>
       *
       * <pre>
       *初级祈祷免费已用次数
       * </pre>
       */
      public boolean hasPrimaryCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 primaryCount = 2;</code>
       *
       * <pre>
       *初级祈祷免费已用次数
       * </pre>
       */
      public int getPrimaryCount() {
        return primaryCount_;
      }
      /**
       * <code>optional int32 primaryCount = 2;</code>
       *
       * <pre>
       *初级祈祷免费已用次数
       * </pre>
       */
      public Builder setPrimaryCount(int value) {
        bitField0_ |= 0x00000002;
        primaryCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 primaryCount = 2;</code>
       *
       * <pre>
       *初级祈祷免费已用次数
       * </pre>
       */
      public Builder clearPrimaryCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        primaryCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 middleTime = 3;
      private int middleTime_ ;
      /**
       * <code>optional int32 middleTime = 3;</code>
       *
       * <pre>
       *中级祈祷免费剩余时间(秒)
       * </pre>
       */
      public boolean hasMiddleTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 middleTime = 3;</code>
       *
       * <pre>
       *中级祈祷免费剩余时间(秒)
       * </pre>
       */
      public int getMiddleTime() {
        return middleTime_;
      }
      /**
       * <code>optional int32 middleTime = 3;</code>
       *
       * <pre>
       *中级祈祷免费剩余时间(秒)
       * </pre>
       */
      public Builder setMiddleTime(int value) {
        bitField0_ |= 0x00000004;
        middleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 middleTime = 3;</code>
       *
       * <pre>
       *中级祈祷免费剩余时间(秒)
       * </pre>
       */
      public Builder clearMiddleTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        middleTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GambleData)
    }

    static {
      defaultInstance = new GambleData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GambleData)
  }

  public interface PreviewDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .ItemPreviewData heroList = 1;
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> 
        getHeroListList();
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.ItemPreviewData getHeroList(int index);
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    int getHeroListCount();
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
        getHeroListOrBuilderList();
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getHeroListOrBuilder(
        int index);

    // repeated .ItemPreviewData itemList = 2;
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> 
        getItemListList();
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.ItemPreviewData getItemList(int index);
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    int getItemListCount();
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
        getItemListOrBuilderList();
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getItemListOrBuilder(
        int index);

    // required int32 dropType = 3;
    /**
     * <code>required int32 dropType = 3;</code>
     *
     * <pre>
     *GamblePlanCfg的dropType
     * </pre>
     */
    boolean hasDropType();
    /**
     * <code>required int32 dropType = 3;</code>
     *
     * <pre>
     *GamblePlanCfg的dropType
     * </pre>
     */
    int getDropType();

    // required int32 minLevel = 4;
    /**
     * <code>required int32 minLevel = 4;</code>
     */
    boolean hasMinLevel();
    /**
     * <code>required int32 minLevel = 4;</code>
     */
    int getMinLevel();

    // required int32 maxLevel = 5;
    /**
     * <code>required int32 maxLevel = 5;</code>
     */
    boolean hasMaxLevel();
    /**
     * <code>required int32 maxLevel = 5;</code>
     */
    int getMaxLevel();
  }
  /**
   * Protobuf type {@code PreviewData}
   */
  public static final class PreviewData extends
      com.google.protobuf.GeneratedMessage
      implements PreviewDataOrBuilder {
    // Use PreviewData.newBuilder() to construct.
    private PreviewData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PreviewData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PreviewData defaultInstance;
    public static PreviewData getDefaultInstance() {
      return defaultInstance;
    }

    public PreviewData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PreviewData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                heroList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.ItemPreviewData>();
                mutable_bitField0_ |= 0x00000001;
              }
              heroList_.add(input.readMessage(com.rwproto.GambleServiceProtos.ItemPreviewData.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.ItemPreviewData>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemList_.add(input.readMessage(com.rwproto.GambleServiceProtos.ItemPreviewData.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              dropType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              minLevel_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              maxLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          heroList_ = java.util.Collections.unmodifiableList(heroList_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemList_ = java.util.Collections.unmodifiableList(itemList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_PreviewData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_PreviewData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.PreviewData.class, com.rwproto.GambleServiceProtos.PreviewData.Builder.class);
    }

    public static com.google.protobuf.Parser<PreviewData> PARSER =
        new com.google.protobuf.AbstractParser<PreviewData>() {
      public PreviewData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PreviewData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PreviewData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .ItemPreviewData heroList = 1;
    public static final int HEROLIST_FIELD_NUMBER = 1;
    private java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> heroList_;
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> getHeroListList() {
      return heroList_;
    }
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
        getHeroListOrBuilderList() {
      return heroList_;
    }
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public int getHeroListCount() {
      return heroList_.size();
    }
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.ItemPreviewData getHeroList(int index) {
      return heroList_.get(index);
    }
    /**
     * <code>repeated .ItemPreviewData heroList = 1;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getHeroListOrBuilder(
        int index) {
      return heroList_.get(index);
    }

    // repeated .ItemPreviewData itemList = 2;
    public static final int ITEMLIST_FIELD_NUMBER = 2;
    private java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> itemList_;
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> getItemListList() {
      return itemList_;
    }
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
        getItemListOrBuilderList() {
      return itemList_;
    }
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public int getItemListCount() {
      return itemList_.size();
    }
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.ItemPreviewData getItemList(int index) {
      return itemList_.get(index);
    }
    /**
     * <code>repeated .ItemPreviewData itemList = 2;</code>
     *
     * <pre>
     *英雄列表
     * </pre>
     */
    public com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getItemListOrBuilder(
        int index) {
      return itemList_.get(index);
    }

    // required int32 dropType = 3;
    public static final int DROPTYPE_FIELD_NUMBER = 3;
    private int dropType_;
    /**
     * <code>required int32 dropType = 3;</code>
     *
     * <pre>
     *GamblePlanCfg的dropType
     * </pre>
     */
    public boolean hasDropType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 dropType = 3;</code>
     *
     * <pre>
     *GamblePlanCfg的dropType
     * </pre>
     */
    public int getDropType() {
      return dropType_;
    }

    // required int32 minLevel = 4;
    public static final int MINLEVEL_FIELD_NUMBER = 4;
    private int minLevel_;
    /**
     * <code>required int32 minLevel = 4;</code>
     */
    public boolean hasMinLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 minLevel = 4;</code>
     */
    public int getMinLevel() {
      return minLevel_;
    }

    // required int32 maxLevel = 5;
    public static final int MAXLEVEL_FIELD_NUMBER = 5;
    private int maxLevel_;
    /**
     * <code>required int32 maxLevel = 5;</code>
     */
    public boolean hasMaxLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 maxLevel = 5;</code>
     */
    public int getMaxLevel() {
      return maxLevel_;
    }

    private void initFields() {
      heroList_ = java.util.Collections.emptyList();
      itemList_ = java.util.Collections.emptyList();
      dropType_ = 0;
      minLevel_ = 0;
      maxLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDropType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getHeroListCount(); i++) {
        if (!getHeroList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getItemListCount(); i++) {
        if (!getItemList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < heroList_.size(); i++) {
        output.writeMessage(1, heroList_.get(i));
      }
      for (int i = 0; i < itemList_.size(); i++) {
        output.writeMessage(2, itemList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(3, dropType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(4, minLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, maxLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < heroList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, heroList_.get(i));
      }
      for (int i = 0; i < itemList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, itemList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dropType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.PreviewData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.PreviewData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PreviewData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.PreviewDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_PreviewData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_PreviewData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.PreviewData.class, com.rwproto.GambleServiceProtos.PreviewData.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.PreviewData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeroListFieldBuilder();
          getItemListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (heroListBuilder_ == null) {
          heroList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          heroListBuilder_.clear();
        }
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          itemListBuilder_.clear();
        }
        dropType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_PreviewData_descriptor;
      }

      public com.rwproto.GambleServiceProtos.PreviewData getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.PreviewData.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.PreviewData build() {
        com.rwproto.GambleServiceProtos.PreviewData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.PreviewData buildPartial() {
        com.rwproto.GambleServiceProtos.PreviewData result = new com.rwproto.GambleServiceProtos.PreviewData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (heroListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            heroList_ = java.util.Collections.unmodifiableList(heroList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.heroList_ = heroList_;
        } else {
          result.heroList_ = heroListBuilder_.build();
        }
        if (itemListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            itemList_ = java.util.Collections.unmodifiableList(itemList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.itemList_ = itemList_;
        } else {
          result.itemList_ = itemListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dropType_ = dropType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minLevel_ = minLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxLevel_ = maxLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.PreviewData) {
          return mergeFrom((com.rwproto.GambleServiceProtos.PreviewData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.PreviewData other) {
        if (other == com.rwproto.GambleServiceProtos.PreviewData.getDefaultInstance()) return this;
        if (heroListBuilder_ == null) {
          if (!other.heroList_.isEmpty()) {
            if (heroList_.isEmpty()) {
              heroList_ = other.heroList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHeroListIsMutable();
              heroList_.addAll(other.heroList_);
            }
            onChanged();
          }
        } else {
          if (!other.heroList_.isEmpty()) {
            if (heroListBuilder_.isEmpty()) {
              heroListBuilder_.dispose();
              heroListBuilder_ = null;
              heroList_ = other.heroList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              heroListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHeroListFieldBuilder() : null;
            } else {
              heroListBuilder_.addAllMessages(other.heroList_);
            }
          }
        }
        if (itemListBuilder_ == null) {
          if (!other.itemList_.isEmpty()) {
            if (itemList_.isEmpty()) {
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemListIsMutable();
              itemList_.addAll(other.itemList_);
            }
            onChanged();
          }
        } else {
          if (!other.itemList_.isEmpty()) {
            if (itemListBuilder_.isEmpty()) {
              itemListBuilder_.dispose();
              itemListBuilder_ = null;
              itemList_ = other.itemList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemListFieldBuilder() : null;
            } else {
              itemListBuilder_.addAllMessages(other.itemList_);
            }
          }
        }
        if (other.hasDropType()) {
          setDropType(other.getDropType());
        }
        if (other.hasMinLevel()) {
          setMinLevel(other.getMinLevel());
        }
        if (other.hasMaxLevel()) {
          setMaxLevel(other.getMaxLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDropType()) {
          
          return false;
        }
        if (!hasMinLevel()) {
          
          return false;
        }
        if (!hasMaxLevel()) {
          
          return false;
        }
        for (int i = 0; i < getHeroListCount(); i++) {
          if (!getHeroList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getItemListCount(); i++) {
          if (!getItemList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.PreviewData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.PreviewData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .ItemPreviewData heroList = 1;
      private java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> heroList_ =
        java.util.Collections.emptyList();
      private void ensureHeroListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          heroList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.ItemPreviewData>(heroList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> heroListBuilder_;

      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> getHeroListList() {
        if (heroListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(heroList_);
        } else {
          return heroListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public int getHeroListCount() {
        if (heroListBuilder_ == null) {
          return heroList_.size();
        } else {
          return heroListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData getHeroList(int index) {
        if (heroListBuilder_ == null) {
          return heroList_.get(index);
        } else {
          return heroListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder setHeroList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (heroListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroListIsMutable();
          heroList_.set(index, value);
          onChanged();
        } else {
          heroListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder setHeroList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (heroListBuilder_ == null) {
          ensureHeroListIsMutable();
          heroList_.set(index, builderForValue.build());
          onChanged();
        } else {
          heroListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addHeroList(com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (heroListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroListIsMutable();
          heroList_.add(value);
          onChanged();
        } else {
          heroListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addHeroList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (heroListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHeroListIsMutable();
          heroList_.add(index, value);
          onChanged();
        } else {
          heroListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addHeroList(
          com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (heroListBuilder_ == null) {
          ensureHeroListIsMutable();
          heroList_.add(builderForValue.build());
          onChanged();
        } else {
          heroListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addHeroList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (heroListBuilder_ == null) {
          ensureHeroListIsMutable();
          heroList_.add(index, builderForValue.build());
          onChanged();
        } else {
          heroListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addAllHeroList(
          java.lang.Iterable<? extends com.rwproto.GambleServiceProtos.ItemPreviewData> values) {
        if (heroListBuilder_ == null) {
          ensureHeroListIsMutable();
          super.addAll(values, heroList_);
          onChanged();
        } else {
          heroListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder clearHeroList() {
        if (heroListBuilder_ == null) {
          heroList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          heroListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder removeHeroList(int index) {
        if (heroListBuilder_ == null) {
          ensureHeroListIsMutable();
          heroList_.remove(index);
          onChanged();
        } else {
          heroListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder getHeroListBuilder(
          int index) {
        return getHeroListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getHeroListOrBuilder(
          int index) {
        if (heroListBuilder_ == null) {
          return heroList_.get(index);  } else {
          return heroListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
           getHeroListOrBuilderList() {
        if (heroListBuilder_ != null) {
          return heroListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(heroList_);
        }
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder addHeroListBuilder() {
        return getHeroListFieldBuilder().addBuilder(
            com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder addHeroListBuilder(
          int index) {
        return getHeroListFieldBuilder().addBuilder(
            index, com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemPreviewData heroList = 1;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData.Builder> 
           getHeroListBuilderList() {
        return getHeroListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
          getHeroListFieldBuilder() {
        if (heroListBuilder_ == null) {
          heroListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder>(
                  heroList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          heroList_ = null;
        }
        return heroListBuilder_;
      }

      // repeated .ItemPreviewData itemList = 2;
      private java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> itemList_ =
        java.util.Collections.emptyList();
      private void ensureItemListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemList_ = new java.util.ArrayList<com.rwproto.GambleServiceProtos.ItemPreviewData>(itemList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> itemListBuilder_;

      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData> getItemListList() {
        if (itemListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemList_);
        } else {
          return itemListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public int getItemListCount() {
        if (itemListBuilder_ == null) {
          return itemList_.size();
        } else {
          return itemListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData getItemList(int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);
        } else {
          return itemListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.set(index, value);
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder setItemList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addItemList(com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData value) {
        if (itemListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemListIsMutable();
          itemList_.add(index, value);
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addItemList(
          com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addItemList(
          int index, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder builderForValue) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder addAllItemList(
          java.lang.Iterable<? extends com.rwproto.GambleServiceProtos.ItemPreviewData> values) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          super.addAll(values, itemList_);
          onChanged();
        } else {
          itemListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder clearItemList() {
        if (itemListBuilder_ == null) {
          itemList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public Builder removeItemList(int index) {
        if (itemListBuilder_ == null) {
          ensureItemListIsMutable();
          itemList_.remove(index);
          onChanged();
        } else {
          itemListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder getItemListBuilder(
          int index) {
        return getItemListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder getItemListOrBuilder(
          int index) {
        if (itemListBuilder_ == null) {
          return itemList_.get(index);  } else {
          return itemListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
           getItemListOrBuilderList() {
        if (itemListBuilder_ != null) {
          return itemListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemList_);
        }
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder addItemListBuilder() {
        return getItemListFieldBuilder().addBuilder(
            com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public com.rwproto.GambleServiceProtos.ItemPreviewData.Builder addItemListBuilder(
          int index) {
        return getItemListFieldBuilder().addBuilder(
            index, com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance());
      }
      /**
       * <code>repeated .ItemPreviewData itemList = 2;</code>
       *
       * <pre>
       *英雄列表
       * </pre>
       */
      public java.util.List<com.rwproto.GambleServiceProtos.ItemPreviewData.Builder> 
           getItemListBuilderList() {
        return getItemListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder> 
          getItemListFieldBuilder() {
        if (itemListBuilder_ == null) {
          itemListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.GambleServiceProtos.ItemPreviewData, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder, com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder>(
                  itemList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          itemList_ = null;
        }
        return itemListBuilder_;
      }

      // required int32 dropType = 3;
      private int dropType_ ;
      /**
       * <code>required int32 dropType = 3;</code>
       *
       * <pre>
       *GamblePlanCfg的dropType
       * </pre>
       */
      public boolean hasDropType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 dropType = 3;</code>
       *
       * <pre>
       *GamblePlanCfg的dropType
       * </pre>
       */
      public int getDropType() {
        return dropType_;
      }
      /**
       * <code>required int32 dropType = 3;</code>
       *
       * <pre>
       *GamblePlanCfg的dropType
       * </pre>
       */
      public Builder setDropType(int value) {
        bitField0_ |= 0x00000004;
        dropType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dropType = 3;</code>
       *
       * <pre>
       *GamblePlanCfg的dropType
       * </pre>
       */
      public Builder clearDropType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dropType_ = 0;
        onChanged();
        return this;
      }

      // required int32 minLevel = 4;
      private int minLevel_ ;
      /**
       * <code>required int32 minLevel = 4;</code>
       */
      public boolean hasMinLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 minLevel = 4;</code>
       */
      public int getMinLevel() {
        return minLevel_;
      }
      /**
       * <code>required int32 minLevel = 4;</code>
       */
      public Builder setMinLevel(int value) {
        bitField0_ |= 0x00000008;
        minLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minLevel = 4;</code>
       */
      public Builder clearMinLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minLevel_ = 0;
        onChanged();
        return this;
      }

      // required int32 maxLevel = 5;
      private int maxLevel_ ;
      /**
       * <code>required int32 maxLevel = 5;</code>
       */
      public boolean hasMaxLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 maxLevel = 5;</code>
       */
      public int getMaxLevel() {
        return maxLevel_;
      }
      /**
       * <code>required int32 maxLevel = 5;</code>
       */
      public Builder setMaxLevel(int value) {
        bitField0_ |= 0x00000010;
        maxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxLevel = 5;</code>
       */
      public Builder clearMaxLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PreviewData)
    }

    static {
      defaultInstance = new PreviewData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PreviewData)
  }

  public interface ItemPreviewDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string itemId = 1;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    boolean hasItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    java.lang.String getItemId();
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    com.google.protobuf.ByteString
        getItemIdBytes();

    // optional bool isGuaranteen = 2;
    /**
     * <code>optional bool isGuaranteen = 2;</code>
     *
     * <pre>
     *是否属于保底组（未实现）
     * </pre>
     */
    boolean hasIsGuaranteen();
    /**
     * <code>optional bool isGuaranteen = 2;</code>
     *
     * <pre>
     *是否属于保底组（未实现）
     * </pre>
     */
    boolean getIsGuaranteen();
  }
  /**
   * Protobuf type {@code ItemPreviewData}
   */
  public static final class ItemPreviewData extends
      com.google.protobuf.GeneratedMessage
      implements ItemPreviewDataOrBuilder {
    // Use ItemPreviewData.newBuilder() to construct.
    private ItemPreviewData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ItemPreviewData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ItemPreviewData defaultInstance;
    public static ItemPreviewData getDefaultInstance() {
      return defaultInstance;
    }

    public ItemPreviewData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ItemPreviewData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isGuaranteen_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.GambleServiceProtos.internal_static_ItemPreviewData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.GambleServiceProtos.internal_static_ItemPreviewData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.GambleServiceProtos.ItemPreviewData.class, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder.class);
    }

    public static com.google.protobuf.Parser<ItemPreviewData> PARSER =
        new com.google.protobuf.AbstractParser<ItemPreviewData>() {
      public ItemPreviewData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ItemPreviewData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ItemPreviewData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string itemId = 1;
    public static final int ITEMID_FIELD_NUMBER = 1;
    private java.lang.Object itemId_;
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          itemId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string itemId = 1;</code>
     *
     * <pre>
     *英雄或者物品的ID
     * </pre>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool isGuaranteen = 2;
    public static final int ISGUARANTEEN_FIELD_NUMBER = 2;
    private boolean isGuaranteen_;
    /**
     * <code>optional bool isGuaranteen = 2;</code>
     *
     * <pre>
     *是否属于保底组（未实现）
     * </pre>
     */
    public boolean hasIsGuaranteen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool isGuaranteen = 2;</code>
     *
     * <pre>
     *是否属于保底组（未实现）
     * </pre>
     */
    public boolean getIsGuaranteen() {
      return isGuaranteen_;
    }

    private void initFields() {
      itemId_ = "";
      isGuaranteen_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasItemId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isGuaranteen_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getItemIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isGuaranteen_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.GambleServiceProtos.ItemPreviewData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.GambleServiceProtos.ItemPreviewData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ItemPreviewData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.GambleServiceProtos.ItemPreviewDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.GambleServiceProtos.internal_static_ItemPreviewData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.GambleServiceProtos.internal_static_ItemPreviewData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.GambleServiceProtos.ItemPreviewData.class, com.rwproto.GambleServiceProtos.ItemPreviewData.Builder.class);
      }

      // Construct using com.rwproto.GambleServiceProtos.ItemPreviewData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isGuaranteen_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.GambleServiceProtos.internal_static_ItemPreviewData_descriptor;
      }

      public com.rwproto.GambleServiceProtos.ItemPreviewData getDefaultInstanceForType() {
        return com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance();
      }

      public com.rwproto.GambleServiceProtos.ItemPreviewData build() {
        com.rwproto.GambleServiceProtos.ItemPreviewData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.GambleServiceProtos.ItemPreviewData buildPartial() {
        com.rwproto.GambleServiceProtos.ItemPreviewData result = new com.rwproto.GambleServiceProtos.ItemPreviewData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isGuaranteen_ = isGuaranteen_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.GambleServiceProtos.ItemPreviewData) {
          return mergeFrom((com.rwproto.GambleServiceProtos.ItemPreviewData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.GambleServiceProtos.ItemPreviewData other) {
        if (other == com.rwproto.GambleServiceProtos.ItemPreviewData.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          bitField0_ |= 0x00000001;
          itemId_ = other.itemId_;
          onChanged();
        }
        if (other.hasIsGuaranteen()) {
          setIsGuaranteen(other.getIsGuaranteen());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasItemId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.GambleServiceProtos.ItemPreviewData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.GambleServiceProtos.ItemPreviewData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string itemId = 1;
      private java.lang.Object itemId_ = "";
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public java.lang.String getItemId() {
        java.lang.Object ref = itemId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          itemId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public com.google.protobuf.ByteString
          getItemIdBytes() {
        java.lang.Object ref = itemId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          itemId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public Builder setItemId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = getDefaultInstance().getItemId();
        onChanged();
        return this;
      }
      /**
       * <code>required string itemId = 1;</code>
       *
       * <pre>
       *英雄或者物品的ID
       * </pre>
       */
      public Builder setItemIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }

      // optional bool isGuaranteen = 2;
      private boolean isGuaranteen_ ;
      /**
       * <code>optional bool isGuaranteen = 2;</code>
       *
       * <pre>
       *是否属于保底组（未实现）
       * </pre>
       */
      public boolean hasIsGuaranteen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool isGuaranteen = 2;</code>
       *
       * <pre>
       *是否属于保底组（未实现）
       * </pre>
       */
      public boolean getIsGuaranteen() {
        return isGuaranteen_;
      }
      /**
       * <code>optional bool isGuaranteen = 2;</code>
       *
       * <pre>
       *是否属于保底组（未实现）
       * </pre>
       */
      public Builder setIsGuaranteen(boolean value) {
        bitField0_ |= 0x00000002;
        isGuaranteen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isGuaranteen = 2;</code>
       *
       * <pre>
       *是否属于保底组（未实现）
       * </pre>
       */
      public Builder clearIsGuaranteen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isGuaranteen_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ItemPreviewData)
    }

    static {
      defaultInstance = new ItemPreviewData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ItemPreviewData)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GambleRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GambleRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GambleResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GambleResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DropData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DropData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GambleRewardData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GambleRewardData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GambleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GambleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PreviewData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PreviewData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ItemPreviewData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ItemPreviewData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023GambleService.proto\"\262\001\n\rGambleRequest\022" +
      "(\n\013requestType\030\001 \002(\0162\023.EGambleRequestTyp" +
      "e\022 \n\ngambleType\030\002 \001(\0162\014.EGambleType\022\"\n\013l" +
      "otteryType\030\003 \001(\0162\r.ELotteryType\022\024\n\014gambl" +
      "ePlanId\030\004 \001(\005\022\033\n\023cachePreviewListTag\030\005 \001" +
      "(\005\"\247\002\n\016GambleResponse\022&\n\nresultType\030\001 \002(" +
      "\0162\022.EGambleResultType\022\037\n\007request\030\002 \001(\0132\016" +
      ".GambleRequest\022#\n\010itemList\030\003 \003(\0132\021.Gambl" +
      "eRewardData\022\020\n\010heroList\030\004 \003(\t\022\037\n\ngambleD" +
      "ata\030\005 \001(\0132\013.GambleData\022\014\n\004tips\030\006 \001(\t\022\036\n\013",
      "dropHistory\030\007 \003(\0132\t.DropData\022%\n\017previewD" +
      "ataList\030\010 \003(\0132\014.PreviewData\022\037\n\027guarantee" +
      "nLeftCountList\030\t \003(\005\"b\n\010DropData\022\021\n\tfree" +
      "Count\030\001 \001(\005\022\024\n\014maxFreeCount\030\002 \001(\005\022\020\n\010lef" +
      "tTime\030\003 \001(\005\022\033\n\023guaranteenLeftCount\030\004 \001(\005" +
      "\"3\n\020GambleRewardData\022\016\n\006itemId\030\001 \002(\t\022\017\n\007" +
      "itemNum\030\002 \002(\005\"K\n\nGambleData\022\023\n\013primaryTi" +
      "me\030\001 \001(\005\022\024\n\014primaryCount\030\002 \001(\005\022\022\n\nmiddle" +
      "Time\030\003 \001(\005\"\213\001\n\013PreviewData\022\"\n\010heroList\030\001" +
      " \003(\0132\020.ItemPreviewData\022\"\n\010itemList\030\002 \003(\013",
      "2\020.ItemPreviewData\022\020\n\010dropType\030\003 \002(\005\022\020\n\010" +
      "minLevel\030\004 \002(\005\022\020\n\010maxLevel\030\005 \002(\005\"7\n\017Item" +
      "PreviewData\022\016\n\006itemId\030\001 \002(\t\022\024\n\014isGuarant" +
      "een\030\002 \001(\010*A\n\022EGambleRequestType\022\n\n\006GAMBL" +
      "E\020\001\022\016\n\nGAMBLE_GET\020\002\022\017\n\013GAMBLE_DATA\020\003**\n\021" +
      "EGambleResultType\022\013\n\007SUCCESS\020\001\022\010\n\004FAIL\020\002" +
      "*4\n\013EGambleType\022\013\n\007PRIMARY\020\001\022\n\n\006MIDDLE\020\002" +
      "\022\014\n\010ADVANCED\020\003*)\n\014ELotteryType\022\007\n\003ONE\020\001\022" +
      "\007\n\003SIX\020\002\022\007\n\003TEN\020\003B\"\n\013com.rwprotoB\023Gamble" +
      "ServiceProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GambleRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GambleRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GambleRequest_descriptor,
              new java.lang.String[] { "RequestType", "GambleType", "LotteryType", "GamblePlanId", "CachePreviewListTag", });
          internal_static_GambleResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GambleResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GambleResponse_descriptor,
              new java.lang.String[] { "ResultType", "Request", "ItemList", "HeroList", "GambleData", "Tips", "DropHistory", "PreviewDataList", "GuaranteenLeftCountList", });
          internal_static_DropData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_DropData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DropData_descriptor,
              new java.lang.String[] { "FreeCount", "MaxFreeCount", "LeftTime", "GuaranteenLeftCount", });
          internal_static_GambleRewardData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_GambleRewardData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GambleRewardData_descriptor,
              new java.lang.String[] { "ItemId", "ItemNum", });
          internal_static_GambleData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_GambleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GambleData_descriptor,
              new java.lang.String[] { "PrimaryTime", "PrimaryCount", "MiddleTime", });
          internal_static_PreviewData_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_PreviewData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PreviewData_descriptor,
              new java.lang.String[] { "HeroList", "ItemList", "DropType", "MinLevel", "MaxLevel", });
          internal_static_ItemPreviewData_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_ItemPreviewData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ItemPreviewData_descriptor,
              new java.lang.String[] { "ItemId", "IsGuaranteen", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
