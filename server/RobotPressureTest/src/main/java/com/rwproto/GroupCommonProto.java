// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GroupCommon.proto

package com.rwproto;

public final class GroupCommonProto {
  private GroupCommonProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code groupproto.GroupValidateType}
   *
   * <pre>
   *【加入帮派的验证类型】
   * </pre>
   */
  public enum GroupValidateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NON = 0;</code>
     *
     * <pre>
     *不是一个验证类型，仅仅只是为了生成CS文件的时候能有个默认值
     * </pre>
     */
    NON(0, 0),
    /**
     * <code>FIRST_VALIDATE = 1;</code>
     *
     * <pre>
     *验证通过
     * </pre>
     */
    FIRST_VALIDATE(1, 1),
    /**
     * <code>NON_VALIDATE = 2;</code>
     *
     * <pre>
     *毋须验证
     * </pre>
     */
    NON_VALIDATE(2, 2),
    /**
     * <code>JOIN_REFUSED = 3;</code>
     *
     * <pre>
     *拒绝加入
     * </pre>
     */
    JOIN_REFUSED(3, 3),
    ;

    /**
     * <code>NON = 0;</code>
     *
     * <pre>
     *不是一个验证类型，仅仅只是为了生成CS文件的时候能有个默认值
     * </pre>
     */
    public static final int NON_VALUE = 0;
    /**
     * <code>FIRST_VALIDATE = 1;</code>
     *
     * <pre>
     *验证通过
     * </pre>
     */
    public static final int FIRST_VALIDATE_VALUE = 1;
    /**
     * <code>NON_VALIDATE = 2;</code>
     *
     * <pre>
     *毋须验证
     * </pre>
     */
    public static final int NON_VALIDATE_VALUE = 2;
    /**
     * <code>JOIN_REFUSED = 3;</code>
     *
     * <pre>
     *拒绝加入
     * </pre>
     */
    public static final int JOIN_REFUSED_VALUE = 3;


    public final int getNumber() { return value; }

    public static GroupValidateType valueOf(int value) {
      switch (value) {
        case 0: return NON;
        case 1: return FIRST_VALIDATE;
        case 2: return NON_VALIDATE;
        case 3: return JOIN_REFUSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupValidateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupValidateType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupValidateType>() {
            public GroupValidateType findValueByNumber(int number) {
              return GroupValidateType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final GroupValidateType[] VALUES = values();

    public static GroupValidateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupValidateType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupValidateType)
  }

  /**
   * Protobuf enum {@code groupproto.GroupPost}
   *
   * <pre>
   *【帮派中的职位】
   * </pre>
   */
  public enum GroupPost
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEADER = 1;</code>
     *
     * <pre>
     *帮主
     * </pre>
     */
    LEADER(0, 1),
    /**
     * <code>ASSISTANT_LEADER = 2;</code>
     *
     * <pre>
     *副帮主
     * </pre>
     */
    ASSISTANT_LEADER(1, 2),
    /**
     * <code>OFFICEHOLDER = 3;</code>
     *
     * <pre>
     *官员
     * </pre>
     */
    OFFICEHOLDER(2, 3),
    /**
     * <code>MEMBER = 4;</code>
     *
     * <pre>
     *成员
     * </pre>
     */
    MEMBER(3, 4),
    ;

    /**
     * <code>LEADER = 1;</code>
     *
     * <pre>
     *帮主
     * </pre>
     */
    public static final int LEADER_VALUE = 1;
    /**
     * <code>ASSISTANT_LEADER = 2;</code>
     *
     * <pre>
     *副帮主
     * </pre>
     */
    public static final int ASSISTANT_LEADER_VALUE = 2;
    /**
     * <code>OFFICEHOLDER = 3;</code>
     *
     * <pre>
     *官员
     * </pre>
     */
    public static final int OFFICEHOLDER_VALUE = 3;
    /**
     * <code>MEMBER = 4;</code>
     *
     * <pre>
     *成员
     * </pre>
     */
    public static final int MEMBER_VALUE = 4;


    public final int getNumber() { return value; }

    public static GroupPost valueOf(int value) {
      switch (value) {
        case 1: return LEADER;
        case 2: return ASSISTANT_LEADER;
        case 3: return OFFICEHOLDER;
        case 4: return MEMBER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupPost>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupPost>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupPost>() {
            public GroupPost findValueByNumber(int number) {
              return GroupPost.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final GroupPost[] VALUES = values();

    public static GroupPost valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupPost(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupPost)
  }

  /**
   * Protobuf enum {@code groupproto.GroupState}
   *
   * <pre>
   *【帮派状态】
   * </pre>
   */
  public enum GroupState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NORMAL = 0;</code>
     *
     * <pre>
     *正常状态
     * </pre>
     */
    NORMAL(0, 0),
    /**
     * <code>DISOLUTION = 1;</code>
     *
     * <pre>
     *解散状态
     * </pre>
     */
    DISOLUTION(1, 1),
    ;

    /**
     * <code>NORMAL = 0;</code>
     *
     * <pre>
     *正常状态
     * </pre>
     */
    public static final int NORMAL_VALUE = 0;
    /**
     * <code>DISOLUTION = 1;</code>
     *
     * <pre>
     *解散状态
     * </pre>
     */
    public static final int DISOLUTION_VALUE = 1;


    public final int getNumber() { return value; }

    public static GroupState valueOf(int value) {
      switch (value) {
        case 0: return NORMAL;
        case 1: return DISOLUTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupState>() {
            public GroupState findValueByNumber(int number) {
              return GroupState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final GroupState[] VALUES = values();

    public static GroupState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupState)
  }

  /**
   * Protobuf enum {@code groupproto.GroupRecommentType}
   *
   * <pre>
   *【帮派推荐类型】
   * </pre>
   */
  public enum GroupRecommentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RANK_RECOMMENT = 1;</code>
     *
     * <pre>
     *排行榜推荐
     * </pre>
     */
    RANK_RECOMMENT(0, 1),
    /**
     * <code>RANDOM_RECOMMENT = 2;</code>
     *
     * <pre>
     *随机推荐
     * </pre>
     */
    RANDOM_RECOMMENT(1, 2),
    ;

    /**
     * <code>RANK_RECOMMENT = 1;</code>
     *
     * <pre>
     *排行榜推荐
     * </pre>
     */
    public static final int RANK_RECOMMENT_VALUE = 1;
    /**
     * <code>RANDOM_RECOMMENT = 2;</code>
     *
     * <pre>
     *随机推荐
     * </pre>
     */
    public static final int RANDOM_RECOMMENT_VALUE = 2;


    public final int getNumber() { return value; }

    public static GroupRecommentType valueOf(int value) {
      switch (value) {
        case 1: return RANK_RECOMMENT;
        case 2: return RANDOM_RECOMMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupRecommentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupRecommentType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupRecommentType>() {
            public GroupRecommentType findValueByNumber(int number) {
              return GroupRecommentType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final GroupRecommentType[] VALUES = values();

    public static GroupRecommentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupRecommentType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupRecommentType)
  }

  /**
   * Protobuf enum {@code groupproto.GroupSkillType}
   *
   * <pre>
   *【帮派技能的类型】
   * </pre>
   */
  public enum GroupSkillType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ATTACK = 1;</code>
     *
     * <pre>
     *攻击系
     * </pre>
     */
    ATTACK(0, 1),
    /**
     * <code>DEFENCE = 2;</code>
     *
     * <pre>
     *防御系
     * </pre>
     */
    DEFENCE(1, 2),
    /**
     * <code>UNIVERSAL = 3;</code>
     *
     * <pre>
     *通用系
     * </pre>
     */
    UNIVERSAL(2, 3),
    ;

    /**
     * <code>ATTACK = 1;</code>
     *
     * <pre>
     *攻击系
     * </pre>
     */
    public static final int ATTACK_VALUE = 1;
    /**
     * <code>DEFENCE = 2;</code>
     *
     * <pre>
     *防御系
     * </pre>
     */
    public static final int DEFENCE_VALUE = 2;
    /**
     * <code>UNIVERSAL = 3;</code>
     *
     * <pre>
     *通用系
     * </pre>
     */
    public static final int UNIVERSAL_VALUE = 3;


    public final int getNumber() { return value; }

    public static GroupSkillType valueOf(int value) {
      switch (value) {
        case 1: return ATTACK;
        case 2: return DEFENCE;
        case 3: return UNIVERSAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupSkillType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupSkillType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupSkillType>() {
            public GroupSkillType findValueByNumber(int number) {
              return GroupSkillType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(4);
    }

    private static final GroupSkillType[] VALUES = values();

    public static GroupSkillType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupSkillType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupSkillType)
  }

  /**
   * Protobuf enum {@code groupproto.GroupLogType}
   *
   * <pre>
   *【帮派日志的类型】
   * </pre>
   */
  public enum GroupLogType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NEW_JOIN_GROUP = 1;</code>
     *
     * <pre>
     *新加入帮派
     * </pre>
     */
    NEW_JOIN_GROUP(0, 1),
    /**
     * <code>QUIT_GROUP = 2;</code>
     *
     * <pre>
     *退去帮派
     * </pre>
     */
    QUIT_GROUP(1, 2),
    /**
     * <code>CHANGE_POST = 3;</code>
     *
     * <pre>
     *职位变动
     * </pre>
     */
    CHANGE_POST(2, 3),
    /**
     * <code>GROUP_UPGRADE = 4;</code>
     *
     * <pre>
     *帮派等级提升
     * </pre>
     */
    GROUP_UPGRADE(3, 4),
    /**
     * <code>GROUP_SKILL_REASERCH = 5;</code>
     *
     * <pre>
     *技能研发
     * </pre>
     */
    GROUP_SKILL_REASERCH(4, 5),
    /**
     * <code>LOG_CANCEL_NOMINATE = 6;</code>
     *
     * <pre>
     *取消任命
     * </pre>
     */
    LOG_CANCEL_NOMINATE(5, 6),
    /**
     * <code>LOG_KICK_GROUP = 7;</code>
     *
     * <pre>
     *踢出帮派
     * </pre>
     */
    LOG_KICK_GROUP(6, 7),
    /**
     * <code>LOG_LEADER_QUIT = 8;</code>
     *
     * <pre>
     *帮主离开帮派
     * </pre>
     */
    LOG_LEADER_QUIT(7, 8),
    /**
     * <code>LOG_LEADER_TIMEOUT_TRANSFER = 9;</code>
     *
     * <pre>
     *超时转让帮主
     * </pre>
     */
    LOG_LEADER_TIMEOUT_TRANSFER(8, 9),
    /**
     * <code>LOG_LEADER_TRANSFER = 10;</code>
     *
     * <pre>
     *主动转让帮主
     * </pre>
     */
    LOG_LEADER_TRANSFER(9, 10),
    ;

    /**
     * <code>NEW_JOIN_GROUP = 1;</code>
     *
     * <pre>
     *新加入帮派
     * </pre>
     */
    public static final int NEW_JOIN_GROUP_VALUE = 1;
    /**
     * <code>QUIT_GROUP = 2;</code>
     *
     * <pre>
     *退去帮派
     * </pre>
     */
    public static final int QUIT_GROUP_VALUE = 2;
    /**
     * <code>CHANGE_POST = 3;</code>
     *
     * <pre>
     *职位变动
     * </pre>
     */
    public static final int CHANGE_POST_VALUE = 3;
    /**
     * <code>GROUP_UPGRADE = 4;</code>
     *
     * <pre>
     *帮派等级提升
     * </pre>
     */
    public static final int GROUP_UPGRADE_VALUE = 4;
    /**
     * <code>GROUP_SKILL_REASERCH = 5;</code>
     *
     * <pre>
     *技能研发
     * </pre>
     */
    public static final int GROUP_SKILL_REASERCH_VALUE = 5;
    /**
     * <code>LOG_CANCEL_NOMINATE = 6;</code>
     *
     * <pre>
     *取消任命
     * </pre>
     */
    public static final int LOG_CANCEL_NOMINATE_VALUE = 6;
    /**
     * <code>LOG_KICK_GROUP = 7;</code>
     *
     * <pre>
     *踢出帮派
     * </pre>
     */
    public static final int LOG_KICK_GROUP_VALUE = 7;
    /**
     * <code>LOG_LEADER_QUIT = 8;</code>
     *
     * <pre>
     *帮主离开帮派
     * </pre>
     */
    public static final int LOG_LEADER_QUIT_VALUE = 8;
    /**
     * <code>LOG_LEADER_TIMEOUT_TRANSFER = 9;</code>
     *
     * <pre>
     *超时转让帮主
     * </pre>
     */
    public static final int LOG_LEADER_TIMEOUT_TRANSFER_VALUE = 9;
    /**
     * <code>LOG_LEADER_TRANSFER = 10;</code>
     *
     * <pre>
     *主动转让帮主
     * </pre>
     */
    public static final int LOG_LEADER_TRANSFER_VALUE = 10;


    public final int getNumber() { return value; }

    public static GroupLogType valueOf(int value) {
      switch (value) {
        case 1: return NEW_JOIN_GROUP;
        case 2: return QUIT_GROUP;
        case 3: return CHANGE_POST;
        case 4: return GROUP_UPGRADE;
        case 5: return GROUP_SKILL_REASERCH;
        case 6: return LOG_CANCEL_NOMINATE;
        case 7: return LOG_KICK_GROUP;
        case 8: return LOG_LEADER_QUIT;
        case 9: return LOG_LEADER_TIMEOUT_TRANSFER;
        case 10: return LOG_LEADER_TRANSFER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupLogType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupLogType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupLogType>() {
            public GroupLogType findValueByNumber(int number) {
              return GroupLogType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(5);
    }

    private static final GroupLogType[] VALUES = values();

    public static GroupLogType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupLogType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupLogType)
  }

  /**
   * Protobuf enum {@code groupproto.GroupFunction}
   *
   * <pre>
   *【帮派功能的枚举】
   * </pre>
   */
  public enum GroupFunction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRANSFER_LEADER_POST = 1;</code>
     *
     * <pre>
     *转让帮主
     * </pre>
     */
    TRANSFER_LEADER_POST(0, 1),
    /**
     * <code>NOMINATE_ASSISTANT_LEADER = 2;</code>
     *
     * <pre>
     *任命副帮主
     * </pre>
     */
    NOMINATE_ASSISTANT_LEADER(1, 2),
    /**
     * <code>NOMINATE_OFFICEHOLDER = 3;</code>
     *
     * <pre>
     *任命官员
     * </pre>
     */
    NOMINATE_OFFICEHOLDER(2, 3),
    /**
     * <code>CANCEL_NOMINATE = 4;</code>
     *
     * <pre>
     *取消任命
     * </pre>
     */
    CANCEL_NOMINATE(3, 4),
    /**
     * <code>KICK_OF_GROUP = 5;</code>
     *
     * <pre>
     *踢出帮派
     * </pre>
     */
    KICK_OF_GROUP(4, 5),
    /**
     * <code>MODIFY_ANNOUNCEMENT = 6;</code>
     *
     * <pre>
     *修改帮派公告
     * </pre>
     */
    MODIFY_ANNOUNCEMENT(5, 6),
    /**
     * <code>GROUP_SETTING = 7;</code>
     *
     * <pre>
     *帮派设置
     * </pre>
     */
    GROUP_SETTING(6, 7),
    /**
     * <code>GROUP_EMAIL_ALL = 8;</code>
     *
     * <pre>
     *全员帮派邮件
     * </pre>
     */
    GROUP_EMAIL_ALL(7, 8),
    /**
     * <code>MEMBER_RECEIVE = 9;</code>
     *
     * <pre>
     *成员接受
     * </pre>
     */
    MEMBER_RECEIVE(8, 9),
    /**
     * <code>GROUP_DONATE = 10;</code>
     *
     * <pre>
     *帮派贡献
     * </pre>
     */
    GROUP_DONATE(9, 10),
    /**
     * <code>RESEARCH_GROUP_SKILL = 11;</code>
     *
     * <pre>
     *研发帮派技能
     * </pre>
     */
    RESEARCH_GROUP_SKILL(10, 11),
    /**
     * <code>STUDY_GROUP_SKILL = 12;</code>
     *
     * <pre>
     *学习帮派技能
     * </pre>
     */
    STUDY_GROUP_SKILL(11, 12),
    /**
     * <code>GROUP_STORE = 13;</code>
     *
     * <pre>
     *帮派商店
     * </pre>
     */
    GROUP_STORE(12, 13),
    /**
     * <code>JOIN_SECERT_AREA = 14;</code>
     *
     * <pre>
     *参加帮派密境
     * </pre>
     */
    JOIN_SECERT_AREA(13, 14),
    /**
     * <code>OPEN_GROUP_DUPLICATE = 15;</code>
     *
     * <pre>
     *开启帮派副本
     * </pre>
     */
    OPEN_GROUP_DUPLICATE(14, 15),
    /**
     * <code>JOIN_GROUP_DUPLICATE = 16;</code>
     *
     * <pre>
     *参加帮派副本
     * </pre>
     */
    JOIN_GROUP_DUPLICATE(15, 16),
    /**
     * <code>JOIN_GROUP_BATTLE = 17;</code>
     *
     * <pre>
     *参加帮派战
     * </pre>
     */
    JOIN_GROUP_BATTLE(16, 17),
    /**
     * <code>MODIFY_GROUP_NAME = 18;</code>
     *
     * <pre>
     *修改帮派名字
     * </pre>
     */
    MODIFY_GROUP_NAME(17, 18),
    /**
     * <code>DISMISS_THE_GROUP = 19;</code>
     *
     * <pre>
     *解散帮派
     * </pre>
     */
    DISMISS_THE_GROUP(18, 19),
    /**
     * <code>CANCEL_DISMISS_THE_GROUP = 20;</code>
     *
     * <pre>
     *取消解散帮派
     * </pre>
     */
    CANCEL_DISMISS_THE_GROUP(19, 20),
    ;

    /**
     * <code>TRANSFER_LEADER_POST = 1;</code>
     *
     * <pre>
     *转让帮主
     * </pre>
     */
    public static final int TRANSFER_LEADER_POST_VALUE = 1;
    /**
     * <code>NOMINATE_ASSISTANT_LEADER = 2;</code>
     *
     * <pre>
     *任命副帮主
     * </pre>
     */
    public static final int NOMINATE_ASSISTANT_LEADER_VALUE = 2;
    /**
     * <code>NOMINATE_OFFICEHOLDER = 3;</code>
     *
     * <pre>
     *任命官员
     * </pre>
     */
    public static final int NOMINATE_OFFICEHOLDER_VALUE = 3;
    /**
     * <code>CANCEL_NOMINATE = 4;</code>
     *
     * <pre>
     *取消任命
     * </pre>
     */
    public static final int CANCEL_NOMINATE_VALUE = 4;
    /**
     * <code>KICK_OF_GROUP = 5;</code>
     *
     * <pre>
     *踢出帮派
     * </pre>
     */
    public static final int KICK_OF_GROUP_VALUE = 5;
    /**
     * <code>MODIFY_ANNOUNCEMENT = 6;</code>
     *
     * <pre>
     *修改帮派公告
     * </pre>
     */
    public static final int MODIFY_ANNOUNCEMENT_VALUE = 6;
    /**
     * <code>GROUP_SETTING = 7;</code>
     *
     * <pre>
     *帮派设置
     * </pre>
     */
    public static final int GROUP_SETTING_VALUE = 7;
    /**
     * <code>GROUP_EMAIL_ALL = 8;</code>
     *
     * <pre>
     *全员帮派邮件
     * </pre>
     */
    public static final int GROUP_EMAIL_ALL_VALUE = 8;
    /**
     * <code>MEMBER_RECEIVE = 9;</code>
     *
     * <pre>
     *成员接受
     * </pre>
     */
    public static final int MEMBER_RECEIVE_VALUE = 9;
    /**
     * <code>GROUP_DONATE = 10;</code>
     *
     * <pre>
     *帮派贡献
     * </pre>
     */
    public static final int GROUP_DONATE_VALUE = 10;
    /**
     * <code>RESEARCH_GROUP_SKILL = 11;</code>
     *
     * <pre>
     *研发帮派技能
     * </pre>
     */
    public static final int RESEARCH_GROUP_SKILL_VALUE = 11;
    /**
     * <code>STUDY_GROUP_SKILL = 12;</code>
     *
     * <pre>
     *学习帮派技能
     * </pre>
     */
    public static final int STUDY_GROUP_SKILL_VALUE = 12;
    /**
     * <code>GROUP_STORE = 13;</code>
     *
     * <pre>
     *帮派商店
     * </pre>
     */
    public static final int GROUP_STORE_VALUE = 13;
    /**
     * <code>JOIN_SECERT_AREA = 14;</code>
     *
     * <pre>
     *参加帮派密境
     * </pre>
     */
    public static final int JOIN_SECERT_AREA_VALUE = 14;
    /**
     * <code>OPEN_GROUP_DUPLICATE = 15;</code>
     *
     * <pre>
     *开启帮派副本
     * </pre>
     */
    public static final int OPEN_GROUP_DUPLICATE_VALUE = 15;
    /**
     * <code>JOIN_GROUP_DUPLICATE = 16;</code>
     *
     * <pre>
     *参加帮派副本
     * </pre>
     */
    public static final int JOIN_GROUP_DUPLICATE_VALUE = 16;
    /**
     * <code>JOIN_GROUP_BATTLE = 17;</code>
     *
     * <pre>
     *参加帮派战
     * </pre>
     */
    public static final int JOIN_GROUP_BATTLE_VALUE = 17;
    /**
     * <code>MODIFY_GROUP_NAME = 18;</code>
     *
     * <pre>
     *修改帮派名字
     * </pre>
     */
    public static final int MODIFY_GROUP_NAME_VALUE = 18;
    /**
     * <code>DISMISS_THE_GROUP = 19;</code>
     *
     * <pre>
     *解散帮派
     * </pre>
     */
    public static final int DISMISS_THE_GROUP_VALUE = 19;
    /**
     * <code>CANCEL_DISMISS_THE_GROUP = 20;</code>
     *
     * <pre>
     *取消解散帮派
     * </pre>
     */
    public static final int CANCEL_DISMISS_THE_GROUP_VALUE = 20;


    public final int getNumber() { return value; }

    public static GroupFunction valueOf(int value) {
      switch (value) {
        case 1: return TRANSFER_LEADER_POST;
        case 2: return NOMINATE_ASSISTANT_LEADER;
        case 3: return NOMINATE_OFFICEHOLDER;
        case 4: return CANCEL_NOMINATE;
        case 5: return KICK_OF_GROUP;
        case 6: return MODIFY_ANNOUNCEMENT;
        case 7: return GROUP_SETTING;
        case 8: return GROUP_EMAIL_ALL;
        case 9: return MEMBER_RECEIVE;
        case 10: return GROUP_DONATE;
        case 11: return RESEARCH_GROUP_SKILL;
        case 12: return STUDY_GROUP_SKILL;
        case 13: return GROUP_STORE;
        case 14: return JOIN_SECERT_AREA;
        case 15: return OPEN_GROUP_DUPLICATE;
        case 16: return JOIN_GROUP_DUPLICATE;
        case 17: return JOIN_GROUP_BATTLE;
        case 18: return MODIFY_GROUP_NAME;
        case 19: return DISMISS_THE_GROUP;
        case 20: return CANCEL_DISMISS_THE_GROUP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GroupFunction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GroupFunction>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GroupFunction>() {
            public GroupFunction findValueByNumber(int number) {
              return GroupFunction.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(6);
    }

    private static final GroupFunction[] VALUES = values();

    public static GroupFunction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GroupFunction(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.GroupFunction)
  }

  /**
   * Protobuf enum {@code groupproto.RequestType}
   *
   * <pre>
   *-----------------------【功能协议类型枚举】-----------------------
   * </pre>
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CREATE_GROUP_TYPE = 1;</code>
     *
     * <pre>
     *创建帮派
     * </pre>
     */
    CREATE_GROUP_TYPE(0, 1),
    /**
     * <code>GET_GROUP_INFO_TYPE = 2;</code>
     *
     * <pre>
     *获取帮派的信息
     * </pre>
     */
    GET_GROUP_INFO_TYPE(1, 2),
    /**
     * <code>GET_GROUP_RANK_INFO_TYPE = 3;</code>
     *
     * <pre>
     *获取帮派排行榜信息
     * </pre>
     */
    GET_GROUP_RANK_INFO_TYPE(2, 3),
    /**
     * <code>MODIFY_ANNOUNCEMENT_TYPE = 4;</code>
     *
     * <pre>
     *修改帮派公告
     * </pre>
     */
    MODIFY_ANNOUNCEMENT_TYPE(3, 4),
    /**
     * <code>MODIFY_GROUP_NAME_TYPE = 5;</code>
     *
     * <pre>
     *修改帮派名字
     * </pre>
     */
    MODIFY_GROUP_NAME_TYPE(4, 5),
    /**
     * <code>GROUP_SETTING_TYPE = 6;</code>
     *
     * <pre>
     *帮派设置
     * </pre>
     */
    GROUP_SETTING_TYPE(5, 6),
    /**
     * <code>FIND_GROUP_TYPE = 7;</code>
     *
     * <pre>
     *查找帮派
     * </pre>
     */
    FIND_GROUP_TYPE(6, 7),
    /**
     * <code>APPLY_JOIN_GROUP_TYPE = 8;</code>
     *
     * <pre>
     *申请加入帮派
     * </pre>
     */
    APPLY_JOIN_GROUP_TYPE(7, 8),
    /**
     * <code>GROUP_MEMBER_RECEIVE_TYPE = 9;</code>
     *
     * <pre>
     *接受帮派成员
     * </pre>
     */
    GROUP_MEMBER_RECEIVE_TYPE(8, 9),
    /**
     * <code>NOMINATE_POST_TYPE = 10;</code>
     *
     * <pre>
     *成员任命
     * </pre>
     */
    NOMINATE_POST_TYPE(9, 10),
    /**
     * <code>CANCEL_NOMINATE_TYPE = 11;</code>
     *
     * <pre>
     *任命取消
     * </pre>
     */
    CANCEL_NOMINATE_TYPE(10, 11),
    /**
     * <code>OPEN_DONATE_VIEW_TYPE = 12;</code>
     *
     * <pre>
     *打开捐献界面
     * </pre>
     */
    OPEN_DONATE_VIEW_TYPE(11, 12),
    /**
     * <code>GROUP_DONATE_TYPE = 13;</code>
     *
     * <pre>
     *帮派捐献
     * </pre>
     */
    GROUP_DONATE_TYPE(12, 13),
    /**
     * <code>TRANSFER_LEADER_POST_TYPE = 14;</code>
     *
     * <pre>
     *转让帮主
     * </pre>
     */
    TRANSFER_LEADER_POST_TYPE(13, 14),
    /**
     * <code>GROUP_EMAIL_FOR_ALL_TYPE = 15;</code>
     *
     * <pre>
     *全员邮件
     * </pre>
     */
    GROUP_EMAIL_FOR_ALL_TYPE(14, 15),
    /**
     * <code>RESEARCH_GROUP_SKILL_TYPE = 16;</code>
     *
     * <pre>
     *技能研发
     * </pre>
     */
    RESEARCH_GROUP_SKILL_TYPE(15, 16),
    /**
     * <code>STUDY_GROUP_SKILL_TYPE = 17;</code>
     *
     * <pre>
     *学习技能
     * </pre>
     */
    STUDY_GROUP_SKILL_TYPE(16, 17),
    /**
     * <code>THE_LOG_OF_GROUP_TYPE = 18;</code>
     *
     * <pre>
     *帮派日志
     * </pre>
     */
    THE_LOG_OF_GROUP_TYPE(17, 18),
    /**
     * <code>QUIT_GROUP_TYPE = 19;</code>
     *
     * <pre>
     *退出帮派
     * </pre>
     */
    QUIT_GROUP_TYPE(18, 19),
    /**
     * <code>KICK_MEMBER_TYPE = 20;</code>
     *
     * <pre>
     *踢出帮派成员
     * </pre>
     */
    KICK_MEMBER_TYPE(19, 20),
    /**
     * <code>DISMISS_THE_GROUP_TYPE = 21;</code>
     *
     * <pre>
     *解散帮派
     * </pre>
     */
    DISMISS_THE_GROUP_TYPE(20, 21),
    /**
     * <code>CANCEL_DISMISS_THE_GROUP_TYPE = 22;</code>
     *
     * <pre>
     *取消解散帮派
     * </pre>
     */
    CANCEL_DISMISS_THE_GROUP_TYPE(21, 22),
    /**
     * <code>GROUP_RECOMMENT_TYPE = 23;</code>
     *
     * <pre>
     *帮派推荐
     * </pre>
     */
    GROUP_RECOMMENT_TYPE(22, 23),
    /**
     * <code>GET_APPLY_MEMBER_LIST_TYPE = 24;</code>
     *
     * <pre>
     *获取帮派申请成员列表
     * </pre>
     */
    GET_APPLY_MEMBER_LIST_TYPE(23, 24),
    /**
     * <code>CHECK_GROUP_DATA_TYPE = 25;</code>
     *
     * <pre>
     *打开帮派建筑就请求这个信息
     * </pre>
     */
    CHECK_GROUP_DATA_TYPE(24, 25),
    /**
     * <code>OPEN_RESEARCH_SKILL_VIEW_TYPE = 26;</code>
     *
     * <pre>
     *打开研发帮派技能界面
     * </pre>
     */
    OPEN_RESEARCH_SKILL_VIEW_TYPE(25, 26),
    /**
     * <code>OPEN_STUDY_SKILL_VIEW_TYPE = 27;</code>
     *
     * <pre>
     *打开学习帮派技能界面
     * </pre>
     */
    OPEN_STUDY_SKILL_VIEW_TYPE(26, 27),
    ;

    /**
     * <code>CREATE_GROUP_TYPE = 1;</code>
     *
     * <pre>
     *创建帮派
     * </pre>
     */
    public static final int CREATE_GROUP_TYPE_VALUE = 1;
    /**
     * <code>GET_GROUP_INFO_TYPE = 2;</code>
     *
     * <pre>
     *获取帮派的信息
     * </pre>
     */
    public static final int GET_GROUP_INFO_TYPE_VALUE = 2;
    /**
     * <code>GET_GROUP_RANK_INFO_TYPE = 3;</code>
     *
     * <pre>
     *获取帮派排行榜信息
     * </pre>
     */
    public static final int GET_GROUP_RANK_INFO_TYPE_VALUE = 3;
    /**
     * <code>MODIFY_ANNOUNCEMENT_TYPE = 4;</code>
     *
     * <pre>
     *修改帮派公告
     * </pre>
     */
    public static final int MODIFY_ANNOUNCEMENT_TYPE_VALUE = 4;
    /**
     * <code>MODIFY_GROUP_NAME_TYPE = 5;</code>
     *
     * <pre>
     *修改帮派名字
     * </pre>
     */
    public static final int MODIFY_GROUP_NAME_TYPE_VALUE = 5;
    /**
     * <code>GROUP_SETTING_TYPE = 6;</code>
     *
     * <pre>
     *帮派设置
     * </pre>
     */
    public static final int GROUP_SETTING_TYPE_VALUE = 6;
    /**
     * <code>FIND_GROUP_TYPE = 7;</code>
     *
     * <pre>
     *查找帮派
     * </pre>
     */
    public static final int FIND_GROUP_TYPE_VALUE = 7;
    /**
     * <code>APPLY_JOIN_GROUP_TYPE = 8;</code>
     *
     * <pre>
     *申请加入帮派
     * </pre>
     */
    public static final int APPLY_JOIN_GROUP_TYPE_VALUE = 8;
    /**
     * <code>GROUP_MEMBER_RECEIVE_TYPE = 9;</code>
     *
     * <pre>
     *接受帮派成员
     * </pre>
     */
    public static final int GROUP_MEMBER_RECEIVE_TYPE_VALUE = 9;
    /**
     * <code>NOMINATE_POST_TYPE = 10;</code>
     *
     * <pre>
     *成员任命
     * </pre>
     */
    public static final int NOMINATE_POST_TYPE_VALUE = 10;
    /**
     * <code>CANCEL_NOMINATE_TYPE = 11;</code>
     *
     * <pre>
     *任命取消
     * </pre>
     */
    public static final int CANCEL_NOMINATE_TYPE_VALUE = 11;
    /**
     * <code>OPEN_DONATE_VIEW_TYPE = 12;</code>
     *
     * <pre>
     *打开捐献界面
     * </pre>
     */
    public static final int OPEN_DONATE_VIEW_TYPE_VALUE = 12;
    /**
     * <code>GROUP_DONATE_TYPE = 13;</code>
     *
     * <pre>
     *帮派捐献
     * </pre>
     */
    public static final int GROUP_DONATE_TYPE_VALUE = 13;
    /**
     * <code>TRANSFER_LEADER_POST_TYPE = 14;</code>
     *
     * <pre>
     *转让帮主
     * </pre>
     */
    public static final int TRANSFER_LEADER_POST_TYPE_VALUE = 14;
    /**
     * <code>GROUP_EMAIL_FOR_ALL_TYPE = 15;</code>
     *
     * <pre>
     *全员邮件
     * </pre>
     */
    public static final int GROUP_EMAIL_FOR_ALL_TYPE_VALUE = 15;
    /**
     * <code>RESEARCH_GROUP_SKILL_TYPE = 16;</code>
     *
     * <pre>
     *技能研发
     * </pre>
     */
    public static final int RESEARCH_GROUP_SKILL_TYPE_VALUE = 16;
    /**
     * <code>STUDY_GROUP_SKILL_TYPE = 17;</code>
     *
     * <pre>
     *学习技能
     * </pre>
     */
    public static final int STUDY_GROUP_SKILL_TYPE_VALUE = 17;
    /**
     * <code>THE_LOG_OF_GROUP_TYPE = 18;</code>
     *
     * <pre>
     *帮派日志
     * </pre>
     */
    public static final int THE_LOG_OF_GROUP_TYPE_VALUE = 18;
    /**
     * <code>QUIT_GROUP_TYPE = 19;</code>
     *
     * <pre>
     *退出帮派
     * </pre>
     */
    public static final int QUIT_GROUP_TYPE_VALUE = 19;
    /**
     * <code>KICK_MEMBER_TYPE = 20;</code>
     *
     * <pre>
     *踢出帮派成员
     * </pre>
     */
    public static final int KICK_MEMBER_TYPE_VALUE = 20;
    /**
     * <code>DISMISS_THE_GROUP_TYPE = 21;</code>
     *
     * <pre>
     *解散帮派
     * </pre>
     */
    public static final int DISMISS_THE_GROUP_TYPE_VALUE = 21;
    /**
     * <code>CANCEL_DISMISS_THE_GROUP_TYPE = 22;</code>
     *
     * <pre>
     *取消解散帮派
     * </pre>
     */
    public static final int CANCEL_DISMISS_THE_GROUP_TYPE_VALUE = 22;
    /**
     * <code>GROUP_RECOMMENT_TYPE = 23;</code>
     *
     * <pre>
     *帮派推荐
     * </pre>
     */
    public static final int GROUP_RECOMMENT_TYPE_VALUE = 23;
    /**
     * <code>GET_APPLY_MEMBER_LIST_TYPE = 24;</code>
     *
     * <pre>
     *获取帮派申请成员列表
     * </pre>
     */
    public static final int GET_APPLY_MEMBER_LIST_TYPE_VALUE = 24;
    /**
     * <code>CHECK_GROUP_DATA_TYPE = 25;</code>
     *
     * <pre>
     *打开帮派建筑就请求这个信息
     * </pre>
     */
    public static final int CHECK_GROUP_DATA_TYPE_VALUE = 25;
    /**
     * <code>OPEN_RESEARCH_SKILL_VIEW_TYPE = 26;</code>
     *
     * <pre>
     *打开研发帮派技能界面
     * </pre>
     */
    public static final int OPEN_RESEARCH_SKILL_VIEW_TYPE_VALUE = 26;
    /**
     * <code>OPEN_STUDY_SKILL_VIEW_TYPE = 27;</code>
     *
     * <pre>
     *打开学习帮派技能界面
     * </pre>
     */
    public static final int OPEN_STUDY_SKILL_VIEW_TYPE_VALUE = 27;


    public final int getNumber() { return value; }

    public static RequestType valueOf(int value) {
      switch (value) {
        case 1: return CREATE_GROUP_TYPE;
        case 2: return GET_GROUP_INFO_TYPE;
        case 3: return GET_GROUP_RANK_INFO_TYPE;
        case 4: return MODIFY_ANNOUNCEMENT_TYPE;
        case 5: return MODIFY_GROUP_NAME_TYPE;
        case 6: return GROUP_SETTING_TYPE;
        case 7: return FIND_GROUP_TYPE;
        case 8: return APPLY_JOIN_GROUP_TYPE;
        case 9: return GROUP_MEMBER_RECEIVE_TYPE;
        case 10: return NOMINATE_POST_TYPE;
        case 11: return CANCEL_NOMINATE_TYPE;
        case 12: return OPEN_DONATE_VIEW_TYPE;
        case 13: return GROUP_DONATE_TYPE;
        case 14: return TRANSFER_LEADER_POST_TYPE;
        case 15: return GROUP_EMAIL_FOR_ALL_TYPE;
        case 16: return RESEARCH_GROUP_SKILL_TYPE;
        case 17: return STUDY_GROUP_SKILL_TYPE;
        case 18: return THE_LOG_OF_GROUP_TYPE;
        case 19: return QUIT_GROUP_TYPE;
        case 20: return KICK_MEMBER_TYPE;
        case 21: return DISMISS_THE_GROUP_TYPE;
        case 22: return CANCEL_DISMISS_THE_GROUP_TYPE;
        case 23: return GROUP_RECOMMENT_TYPE;
        case 24: return GET_APPLY_MEMBER_LIST_TYPE;
        case 25: return CHECK_GROUP_DATA_TYPE;
        case 26: return OPEN_RESEARCH_SKILL_VIEW_TYPE;
        case 27: return OPEN_STUDY_SKILL_VIEW_TYPE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.GroupCommonProto.getDescriptor().getEnumTypes().get(7);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:groupproto.RequestType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021GroupCommon.proto\022\ngroupproto*T\n\021Group" +
      "ValidateType\022\007\n\003NON\020\000\022\022\n\016FIRST_VALIDATE\020" +
      "\001\022\020\n\014NON_VALIDATE\020\002\022\020\n\014JOIN_REFUSED\020\003*K\n" +
      "\tGroupPost\022\n\n\006LEADER\020\001\022\024\n\020ASSISTANT_LEAD" +
      "ER\020\002\022\020\n\014OFFICEHOLDER\020\003\022\n\n\006MEMBER\020\004*(\n\nGr" +
      "oupState\022\n\n\006NORMAL\020\000\022\016\n\nDISOLUTION\020\001*>\n\022" +
      "GroupRecommentType\022\022\n\016RANK_RECOMMENT\020\001\022\024" +
      "\n\020RANDOM_RECOMMENT\020\002*8\n\016GroupSkillType\022\n" +
      "\n\006ATTACK\020\001\022\013\n\007DEFENCE\020\002\022\r\n\tUNIVERSAL\020\003*\354" +
      "\001\n\014GroupLogType\022\022\n\016NEW_JOIN_GROUP\020\001\022\016\n\nQ",
      "UIT_GROUP\020\002\022\017\n\013CHANGE_POST\020\003\022\021\n\rGROUP_UP" +
      "GRADE\020\004\022\030\n\024GROUP_SKILL_REASERCH\020\005\022\027\n\023LOG" +
      "_CANCEL_NOMINATE\020\006\022\022\n\016LOG_KICK_GROUP\020\007\022\023" +
      "\n\017LOG_LEADER_QUIT\020\010\022\037\n\033LOG_LEADER_TIMEOU" +
      "T_TRANSFER\020\t\022\027\n\023LOG_LEADER_TRANSFER\020\n*\341\003" +
      "\n\rGroupFunction\022\030\n\024TRANSFER_LEADER_POST\020" +
      "\001\022\035\n\031NOMINATE_ASSISTANT_LEADER\020\002\022\031\n\025NOMI" +
      "NATE_OFFICEHOLDER\020\003\022\023\n\017CANCEL_NOMINATE\020\004" +
      "\022\021\n\rKICK_OF_GROUP\020\005\022\027\n\023MODIFY_ANNOUNCEME" +
      "NT\020\006\022\021\n\rGROUP_SETTING\020\007\022\023\n\017GROUP_EMAIL_A",
      "LL\020\010\022\022\n\016MEMBER_RECEIVE\020\t\022\020\n\014GROUP_DONATE" +
      "\020\n\022\030\n\024RESEARCH_GROUP_SKILL\020\013\022\025\n\021STUDY_GR" +
      "OUP_SKILL\020\014\022\017\n\013GROUP_STORE\020\r\022\024\n\020JOIN_SEC" +
      "ERT_AREA\020\016\022\030\n\024OPEN_GROUP_DUPLICATE\020\017\022\030\n\024" +
      "JOIN_GROUP_DUPLICATE\020\020\022\025\n\021JOIN_GROUP_BAT" +
      "TLE\020\021\022\025\n\021MODIFY_GROUP_NAME\020\022\022\025\n\021DISMISS_" +
      "THE_GROUP\020\023\022\034\n\030CANCEL_DISMISS_THE_GROUP\020" +
      "\024*\365\005\n\013RequestType\022\025\n\021CREATE_GROUP_TYPE\020\001" +
      "\022\027\n\023GET_GROUP_INFO_TYPE\020\002\022\034\n\030GET_GROUP_R" +
      "ANK_INFO_TYPE\020\003\022\034\n\030MODIFY_ANNOUNCEMENT_T",
      "YPE\020\004\022\032\n\026MODIFY_GROUP_NAME_TYPE\020\005\022\026\n\022GRO" +
      "UP_SETTING_TYPE\020\006\022\023\n\017FIND_GROUP_TYPE\020\007\022\031" +
      "\n\025APPLY_JOIN_GROUP_TYPE\020\010\022\035\n\031GROUP_MEMBE" +
      "R_RECEIVE_TYPE\020\t\022\026\n\022NOMINATE_POST_TYPE\020\n" +
      "\022\030\n\024CANCEL_NOMINATE_TYPE\020\013\022\031\n\025OPEN_DONAT" +
      "E_VIEW_TYPE\020\014\022\025\n\021GROUP_DONATE_TYPE\020\r\022\035\n\031" +
      "TRANSFER_LEADER_POST_TYPE\020\016\022\034\n\030GROUP_EMA" +
      "IL_FOR_ALL_TYPE\020\017\022\035\n\031RESEARCH_GROUP_SKIL" +
      "L_TYPE\020\020\022\032\n\026STUDY_GROUP_SKILL_TYPE\020\021\022\031\n\025" +
      "THE_LOG_OF_GROUP_TYPE\020\022\022\023\n\017QUIT_GROUP_TY",
      "PE\020\023\022\024\n\020KICK_MEMBER_TYPE\020\024\022\032\n\026DISMISS_TH" +
      "E_GROUP_TYPE\020\025\022!\n\035CANCEL_DISMISS_THE_GRO" +
      "UP_TYPE\020\026\022\030\n\024GROUP_RECOMMENT_TYPE\020\027\022\036\n\032G" +
      "ET_APPLY_MEMBER_LIST_TYPE\020\030\022\031\n\025CHECK_GRO" +
      "UP_DATA_TYPE\020\031\022!\n\035OPEN_RESEARCH_SKILL_VI" +
      "EW_TYPE\020\032\022\036\n\032OPEN_STUDY_SKILL_VIEW_TYPE\020" +
      "\033B\037\n\013com.rwprotoB\020GroupCommonProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
