// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HotPointService.proto

package com.rwproto;

public final class HotPointServiceProtos {
  private HotPointServiceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EHotPointRequestType}
   */
  public enum EHotPointRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CHANGE_HOT_POINT = 1;</code>
     *
     * <pre>
     *设置红点
     * </pre>
     */
    CHANGE_HOT_POINT(0, 1),
    ;

    /**
     * <code>CHANGE_HOT_POINT = 1;</code>
     *
     * <pre>
     *设置红点
     * </pre>
     */
    public static final int CHANGE_HOT_POINT_VALUE = 1;


    public final int getNumber() { return value; }

    public static EHotPointRequestType valueOf(int value) {
      switch (value) {
        case 1: return CHANGE_HOT_POINT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EHotPointRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EHotPointRequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EHotPointRequestType>() {
            public EHotPointRequestType findValueByNumber(int number) {
              return EHotPointRequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.HotPointServiceProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final EHotPointRequestType[] VALUES = values();

    public static EHotPointRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EHotPointRequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EHotPointRequestType)
  }

  public interface HotPointRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .EHotPointRequestType requestType = 1;
    /**
     * <code>required .EHotPointRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    boolean hasRequestType();
    /**
     * <code>required .EHotPointRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    com.rwproto.HotPointServiceProtos.EHotPointRequestType getRequestType();

    // required .HotPointInfo hotPointInfo = 2;
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    boolean hasHotPointInfo();
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointInfo();
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointInfoOrBuilder();
  }
  /**
   * Protobuf type {@code HotPointRequest}
   */
  public static final class HotPointRequest extends
      com.google.protobuf.GeneratedMessage
      implements HotPointRequestOrBuilder {
    // Use HotPointRequest.newBuilder() to construct.
    private HotPointRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HotPointRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HotPointRequest defaultInstance;
    public static HotPointRequest getDefaultInstance() {
      return defaultInstance;
    }

    public HotPointRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HotPointRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rwproto.HotPointServiceProtos.EHotPointRequestType value = com.rwproto.HotPointServiceProtos.EHotPointRequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                requestType_ = value;
              }
              break;
            }
            case 18: {
              com.rwproto.HotPointServiceProtos.HotPointInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = hotPointInfo_.toBuilder();
              }
              hotPointInfo_ = input.readMessage(com.rwproto.HotPointServiceProtos.HotPointInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hotPointInfo_);
                hotPointInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.HotPointServiceProtos.HotPointRequest.class, com.rwproto.HotPointServiceProtos.HotPointRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<HotPointRequest> PARSER =
        new com.google.protobuf.AbstractParser<HotPointRequest>() {
      public HotPointRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HotPointRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HotPointRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .EHotPointRequestType requestType = 1;
    public static final int REQUESTTYPE_FIELD_NUMBER = 1;
    private com.rwproto.HotPointServiceProtos.EHotPointRequestType requestType_;
    /**
     * <code>required .EHotPointRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public boolean hasRequestType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .EHotPointRequestType requestType = 1;</code>
     *
     * <pre>
     *请求类型
     * </pre>
     */
    public com.rwproto.HotPointServiceProtos.EHotPointRequestType getRequestType() {
      return requestType_;
    }

    // required .HotPointInfo hotPointInfo = 2;
    public static final int HOTPOINTINFO_FIELD_NUMBER = 2;
    private com.rwproto.HotPointServiceProtos.HotPointInfo hotPointInfo_;
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    public boolean hasHotPointInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    public com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointInfo() {
      return hotPointInfo_;
    }
    /**
     * <code>required .HotPointInfo hotPointInfo = 2;</code>
     *
     * <pre>
     *设置红点状态
     * </pre>
     */
    public com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointInfoOrBuilder() {
      return hotPointInfo_;
    }

    private void initFields() {
      requestType_ = com.rwproto.HotPointServiceProtos.EHotPointRequestType.CHANGE_HOT_POINT;
      hotPointInfo_ = com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRequestType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHotPointInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHotPointInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, hotPointInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, hotPointInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.HotPointServiceProtos.HotPointRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HotPointRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.HotPointServiceProtos.HotPointRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.HotPointServiceProtos.HotPointRequest.class, com.rwproto.HotPointServiceProtos.HotPointRequest.Builder.class);
      }

      // Construct using com.rwproto.HotPointServiceProtos.HotPointRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHotPointInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requestType_ = com.rwproto.HotPointServiceProtos.EHotPointRequestType.CHANGE_HOT_POINT;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (hotPointInfoBuilder_ == null) {
          hotPointInfo_ = com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance();
        } else {
          hotPointInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointRequest_descriptor;
      }

      public com.rwproto.HotPointServiceProtos.HotPointRequest getDefaultInstanceForType() {
        return com.rwproto.HotPointServiceProtos.HotPointRequest.getDefaultInstance();
      }

      public com.rwproto.HotPointServiceProtos.HotPointRequest build() {
        com.rwproto.HotPointServiceProtos.HotPointRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.HotPointServiceProtos.HotPointRequest buildPartial() {
        com.rwproto.HotPointServiceProtos.HotPointRequest result = new com.rwproto.HotPointServiceProtos.HotPointRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestType_ = requestType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (hotPointInfoBuilder_ == null) {
          result.hotPointInfo_ = hotPointInfo_;
        } else {
          result.hotPointInfo_ = hotPointInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.HotPointServiceProtos.HotPointRequest) {
          return mergeFrom((com.rwproto.HotPointServiceProtos.HotPointRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.HotPointServiceProtos.HotPointRequest other) {
        if (other == com.rwproto.HotPointServiceProtos.HotPointRequest.getDefaultInstance()) return this;
        if (other.hasRequestType()) {
          setRequestType(other.getRequestType());
        }
        if (other.hasHotPointInfo()) {
          mergeHotPointInfo(other.getHotPointInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequestType()) {
          
          return false;
        }
        if (!hasHotPointInfo()) {
          
          return false;
        }
        if (!getHotPointInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.HotPointServiceProtos.HotPointRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.HotPointServiceProtos.HotPointRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .EHotPointRequestType requestType = 1;
      private com.rwproto.HotPointServiceProtos.EHotPointRequestType requestType_ = com.rwproto.HotPointServiceProtos.EHotPointRequestType.CHANGE_HOT_POINT;
      /**
       * <code>required .EHotPointRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public boolean hasRequestType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .EHotPointRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.EHotPointRequestType getRequestType() {
        return requestType_;
      }
      /**
       * <code>required .EHotPointRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder setRequestType(com.rwproto.HotPointServiceProtos.EHotPointRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        requestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .EHotPointRequestType requestType = 1;</code>
       *
       * <pre>
       *请求类型
       * </pre>
       */
      public Builder clearRequestType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestType_ = com.rwproto.HotPointServiceProtos.EHotPointRequestType.CHANGE_HOT_POINT;
        onChanged();
        return this;
      }

      // required .HotPointInfo hotPointInfo = 2;
      private com.rwproto.HotPointServiceProtos.HotPointInfo hotPointInfo_ = com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> hotPointInfoBuilder_;
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public boolean hasHotPointInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointInfo() {
        if (hotPointInfoBuilder_ == null) {
          return hotPointInfo_;
        } else {
          return hotPointInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public Builder setHotPointInfo(com.rwproto.HotPointServiceProtos.HotPointInfo value) {
        if (hotPointInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hotPointInfo_ = value;
          onChanged();
        } else {
          hotPointInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public Builder setHotPointInfo(
          com.rwproto.HotPointServiceProtos.HotPointInfo.Builder builderForValue) {
        if (hotPointInfoBuilder_ == null) {
          hotPointInfo_ = builderForValue.build();
          onChanged();
        } else {
          hotPointInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public Builder mergeHotPointInfo(com.rwproto.HotPointServiceProtos.HotPointInfo value) {
        if (hotPointInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              hotPointInfo_ != com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance()) {
            hotPointInfo_ =
              com.rwproto.HotPointServiceProtos.HotPointInfo.newBuilder(hotPointInfo_).mergeFrom(value).buildPartial();
          } else {
            hotPointInfo_ = value;
          }
          onChanged();
        } else {
          hotPointInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public Builder clearHotPointInfo() {
        if (hotPointInfoBuilder_ == null) {
          hotPointInfo_ = com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance();
          onChanged();
        } else {
          hotPointInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo.Builder getHotPointInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHotPointInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointInfoOrBuilder() {
        if (hotPointInfoBuilder_ != null) {
          return hotPointInfoBuilder_.getMessageOrBuilder();
        } else {
          return hotPointInfo_;
        }
      }
      /**
       * <code>required .HotPointInfo hotPointInfo = 2;</code>
       *
       * <pre>
       *设置红点状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> 
          getHotPointInfoFieldBuilder() {
        if (hotPointInfoBuilder_ == null) {
          hotPointInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder>(
                  hotPointInfo_,
                  getParentForChildren(),
                  isClean());
          hotPointInfo_ = null;
        }
        return hotPointInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HotPointRequest)
    }

    static {
      defaultInstance = new HotPointRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HotPointRequest)
  }

  public interface HotPointResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .HotPointInfo hotPointList = 1;
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo> 
        getHotPointListList();
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointList(int index);
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    int getHotPointListCount();
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    java.util.List<? extends com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> 
        getHotPointListOrBuilderList();
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code HotPointResponse}
   */
  public static final class HotPointResponse extends
      com.google.protobuf.GeneratedMessage
      implements HotPointResponseOrBuilder {
    // Use HotPointResponse.newBuilder() to construct.
    private HotPointResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HotPointResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HotPointResponse defaultInstance;
    public static HotPointResponse getDefaultInstance() {
      return defaultInstance;
    }

    public HotPointResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HotPointResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hotPointList_ = new java.util.ArrayList<com.rwproto.HotPointServiceProtos.HotPointInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              hotPointList_.add(input.readMessage(com.rwproto.HotPointServiceProtos.HotPointInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          hotPointList_ = java.util.Collections.unmodifiableList(hotPointList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.HotPointServiceProtos.HotPointResponse.class, com.rwproto.HotPointServiceProtos.HotPointResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<HotPointResponse> PARSER =
        new com.google.protobuf.AbstractParser<HotPointResponse>() {
      public HotPointResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HotPointResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HotPointResponse> getParserForType() {
      return PARSER;
    }

    // repeated .HotPointInfo hotPointList = 1;
    public static final int HOTPOINTLIST_FIELD_NUMBER = 1;
    private java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo> hotPointList_;
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    public java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo> getHotPointListList() {
      return hotPointList_;
    }
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    public java.util.List<? extends com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> 
        getHotPointListOrBuilderList() {
      return hotPointList_;
    }
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    public int getHotPointListCount() {
      return hotPointList_.size();
    }
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    public com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointList(int index) {
      return hotPointList_.get(index);
    }
    /**
     * <code>repeated .HotPointInfo hotPointList = 1;</code>
     *
     * <pre>
     *推送红点列表
     * </pre>
     */
    public com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointListOrBuilder(
        int index) {
      return hotPointList_.get(index);
    }

    private void initFields() {
      hotPointList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getHotPointListCount(); i++) {
        if (!getHotPointList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < hotPointList_.size(); i++) {
        output.writeMessage(1, hotPointList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hotPointList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hotPointList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.HotPointServiceProtos.HotPointResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HotPointResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.HotPointServiceProtos.HotPointResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.HotPointServiceProtos.HotPointResponse.class, com.rwproto.HotPointServiceProtos.HotPointResponse.Builder.class);
      }

      // Construct using com.rwproto.HotPointServiceProtos.HotPointResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHotPointListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (hotPointListBuilder_ == null) {
          hotPointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hotPointListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointResponse_descriptor;
      }

      public com.rwproto.HotPointServiceProtos.HotPointResponse getDefaultInstanceForType() {
        return com.rwproto.HotPointServiceProtos.HotPointResponse.getDefaultInstance();
      }

      public com.rwproto.HotPointServiceProtos.HotPointResponse build() {
        com.rwproto.HotPointServiceProtos.HotPointResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.HotPointServiceProtos.HotPointResponse buildPartial() {
        com.rwproto.HotPointServiceProtos.HotPointResponse result = new com.rwproto.HotPointServiceProtos.HotPointResponse(this);
        int from_bitField0_ = bitField0_;
        if (hotPointListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            hotPointList_ = java.util.Collections.unmodifiableList(hotPointList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hotPointList_ = hotPointList_;
        } else {
          result.hotPointList_ = hotPointListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.HotPointServiceProtos.HotPointResponse) {
          return mergeFrom((com.rwproto.HotPointServiceProtos.HotPointResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.HotPointServiceProtos.HotPointResponse other) {
        if (other == com.rwproto.HotPointServiceProtos.HotPointResponse.getDefaultInstance()) return this;
        if (hotPointListBuilder_ == null) {
          if (!other.hotPointList_.isEmpty()) {
            if (hotPointList_.isEmpty()) {
              hotPointList_ = other.hotPointList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHotPointListIsMutable();
              hotPointList_.addAll(other.hotPointList_);
            }
            onChanged();
          }
        } else {
          if (!other.hotPointList_.isEmpty()) {
            if (hotPointListBuilder_.isEmpty()) {
              hotPointListBuilder_.dispose();
              hotPointListBuilder_ = null;
              hotPointList_ = other.hotPointList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hotPointListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHotPointListFieldBuilder() : null;
            } else {
              hotPointListBuilder_.addAllMessages(other.hotPointList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getHotPointListCount(); i++) {
          if (!getHotPointList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.HotPointServiceProtos.HotPointResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.HotPointServiceProtos.HotPointResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .HotPointInfo hotPointList = 1;
      private java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo> hotPointList_ =
        java.util.Collections.emptyList();
      private void ensureHotPointListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hotPointList_ = new java.util.ArrayList<com.rwproto.HotPointServiceProtos.HotPointInfo>(hotPointList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> hotPointListBuilder_;

      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo> getHotPointListList() {
        if (hotPointListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hotPointList_);
        } else {
          return hotPointListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public int getHotPointListCount() {
        if (hotPointListBuilder_ == null) {
          return hotPointList_.size();
        } else {
          return hotPointListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo getHotPointList(int index) {
        if (hotPointListBuilder_ == null) {
          return hotPointList_.get(index);
        } else {
          return hotPointListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder setHotPointList(
          int index, com.rwproto.HotPointServiceProtos.HotPointInfo value) {
        if (hotPointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHotPointListIsMutable();
          hotPointList_.set(index, value);
          onChanged();
        } else {
          hotPointListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder setHotPointList(
          int index, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder builderForValue) {
        if (hotPointListBuilder_ == null) {
          ensureHotPointListIsMutable();
          hotPointList_.set(index, builderForValue.build());
          onChanged();
        } else {
          hotPointListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder addHotPointList(com.rwproto.HotPointServiceProtos.HotPointInfo value) {
        if (hotPointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHotPointListIsMutable();
          hotPointList_.add(value);
          onChanged();
        } else {
          hotPointListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder addHotPointList(
          int index, com.rwproto.HotPointServiceProtos.HotPointInfo value) {
        if (hotPointListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHotPointListIsMutable();
          hotPointList_.add(index, value);
          onChanged();
        } else {
          hotPointListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder addHotPointList(
          com.rwproto.HotPointServiceProtos.HotPointInfo.Builder builderForValue) {
        if (hotPointListBuilder_ == null) {
          ensureHotPointListIsMutable();
          hotPointList_.add(builderForValue.build());
          onChanged();
        } else {
          hotPointListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder addHotPointList(
          int index, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder builderForValue) {
        if (hotPointListBuilder_ == null) {
          ensureHotPointListIsMutable();
          hotPointList_.add(index, builderForValue.build());
          onChanged();
        } else {
          hotPointListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder addAllHotPointList(
          java.lang.Iterable<? extends com.rwproto.HotPointServiceProtos.HotPointInfo> values) {
        if (hotPointListBuilder_ == null) {
          ensureHotPointListIsMutable();
          super.addAll(values, hotPointList_);
          onChanged();
        } else {
          hotPointListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder clearHotPointList() {
        if (hotPointListBuilder_ == null) {
          hotPointList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hotPointListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public Builder removeHotPointList(int index) {
        if (hotPointListBuilder_ == null) {
          ensureHotPointListIsMutable();
          hotPointList_.remove(index);
          onChanged();
        } else {
          hotPointListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo.Builder getHotPointListBuilder(
          int index) {
        return getHotPointListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder getHotPointListOrBuilder(
          int index) {
        if (hotPointListBuilder_ == null) {
          return hotPointList_.get(index);  } else {
          return hotPointListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public java.util.List<? extends com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> 
           getHotPointListOrBuilderList() {
        if (hotPointListBuilder_ != null) {
          return hotPointListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hotPointList_);
        }
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo.Builder addHotPointListBuilder() {
        return getHotPointListFieldBuilder().addBuilder(
            com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public com.rwproto.HotPointServiceProtos.HotPointInfo.Builder addHotPointListBuilder(
          int index) {
        return getHotPointListFieldBuilder().addBuilder(
            index, com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .HotPointInfo hotPointList = 1;</code>
       *
       * <pre>
       *推送红点列表
       * </pre>
       */
      public java.util.List<com.rwproto.HotPointServiceProtos.HotPointInfo.Builder> 
           getHotPointListBuilderList() {
        return getHotPointListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder> 
          getHotPointListFieldBuilder() {
        if (hotPointListBuilder_ == null) {
          hotPointListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rwproto.HotPointServiceProtos.HotPointInfo, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder, com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder>(
                  hotPointList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          hotPointList_ = null;
        }
        return hotPointListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HotPointResponse)
    }

    static {
      defaultInstance = new HotPointResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HotPointResponse)
  }

  public interface HotPointInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    int getType();

    // required bool value = 2;
    /**
     * <code>required bool value = 2;</code>
     *
     * <pre>
     *红点值
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>required bool value = 2;</code>
     *
     * <pre>
     *红点值
     * </pre>
     */
    boolean getValue();
  }
  /**
   * Protobuf type {@code HotPointInfo}
   */
  public static final class HotPointInfo extends
      com.google.protobuf.GeneratedMessage
      implements HotPointInfoOrBuilder {
    // Use HotPointInfo.newBuilder() to construct.
    private HotPointInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HotPointInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HotPointInfo defaultInstance;
    public static HotPointInfo getDefaultInstance() {
      return defaultInstance;
    }

    public HotPointInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HotPointInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rwproto.HotPointServiceProtos.internal_static_HotPointInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rwproto.HotPointServiceProtos.HotPointInfo.class, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<HotPointInfo> PARSER =
        new com.google.protobuf.AbstractParser<HotPointInfo>() {
      public HotPointInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HotPointInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HotPointInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *红点类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required bool value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean value_;
    /**
     * <code>required bool value = 2;</code>
     *
     * <pre>
     *红点值
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool value = 2;</code>
     *
     * <pre>
     *红点值
     * </pre>
     */
    public boolean getValue() {
      return value_;
    }

    private void initFields() {
      type_ = 0;
      value_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rwproto.HotPointServiceProtos.HotPointInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rwproto.HotPointServiceProtos.HotPointInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HotPointInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rwproto.HotPointServiceProtos.HotPointInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rwproto.HotPointServiceProtos.HotPointInfo.class, com.rwproto.HotPointServiceProtos.HotPointInfo.Builder.class);
      }

      // Construct using com.rwproto.HotPointServiceProtos.HotPointInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rwproto.HotPointServiceProtos.internal_static_HotPointInfo_descriptor;
      }

      public com.rwproto.HotPointServiceProtos.HotPointInfo getDefaultInstanceForType() {
        return com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance();
      }

      public com.rwproto.HotPointServiceProtos.HotPointInfo build() {
        com.rwproto.HotPointServiceProtos.HotPointInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rwproto.HotPointServiceProtos.HotPointInfo buildPartial() {
        com.rwproto.HotPointServiceProtos.HotPointInfo result = new com.rwproto.HotPointServiceProtos.HotPointInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rwproto.HotPointServiceProtos.HotPointInfo) {
          return mergeFrom((com.rwproto.HotPointServiceProtos.HotPointInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rwproto.HotPointServiceProtos.HotPointInfo other) {
        if (other == com.rwproto.HotPointServiceProtos.HotPointInfo.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rwproto.HotPointServiceProtos.HotPointInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rwproto.HotPointServiceProtos.HotPointInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *红点类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      // required bool value = 2;
      private boolean value_ ;
      /**
       * <code>required bool value = 2;</code>
       *
       * <pre>
       *红点值
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool value = 2;</code>
       *
       * <pre>
       *红点值
       * </pre>
       */
      public boolean getValue() {
        return value_;
      }
      /**
       * <code>required bool value = 2;</code>
       *
       * <pre>
       *红点值
       * </pre>
       */
      public Builder setValue(boolean value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool value = 2;</code>
       *
       * <pre>
       *红点值
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HotPointInfo)
    }

    static {
      defaultInstance = new HotPointInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HotPointInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HotPointRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HotPointRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HotPointResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HotPointResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HotPointInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HotPointInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025HotPointService.proto\"b\n\017HotPointReque" +
      "st\022*\n\013requestType\030\001 \002(\0162\025.EHotPointReque" +
      "stType\022#\n\014hotPointInfo\030\002 \002(\0132\r.HotPointI" +
      "nfo\"7\n\020HotPointResponse\022#\n\014hotPointList\030" +
      "\001 \003(\0132\r.HotPointInfo\"+\n\014HotPointInfo\022\014\n\004" +
      "type\030\001 \002(\005\022\r\n\005value\030\002 \002(\010*,\n\024EHotPointRe" +
      "questType\022\024\n\020CHANGE_HOT_POINT\020\001B$\n\013com.r" +
      "wprotoB\025HotPointServiceProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_HotPointRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_HotPointRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HotPointRequest_descriptor,
              new java.lang.String[] { "RequestType", "HotPointInfo", });
          internal_static_HotPointResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_HotPointResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HotPointResponse_descriptor,
              new java.lang.String[] { "HotPointList", });
          internal_static_HotPointInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_HotPointInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HotPointInfo_descriptor,
              new java.lang.String[] { "Type", "Value", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
