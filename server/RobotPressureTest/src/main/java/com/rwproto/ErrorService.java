// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorService.proto

package com.rwproto;

public final class ErrorService {
  private ErrorService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ErrorService.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 0;</code>
     */
    SUCCESS(0, 0),
    /**
     * <code>FAIL = -1;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    FAIL(1, -1),
    /**
     * <code>NOT_ENOUGH_VIP = -2;</code>
     *
     * <pre>
     *Vip等级不足
     * </pre>
     */
    NOT_ENOUGH_VIP(2, -2),
    /**
     * <code>NOT_ENOUGH_COIN = -3;</code>
     *
     * <pre>
     *铜钱不足
     * </pre>
     */
    NOT_ENOUGH_COIN(3, -3),
    /**
     * <code>NOT_ENOUGH_LEVEL = -4;</code>
     *
     * <pre>
     *等级不足
     * </pre>
     */
    NOT_ENOUGH_LEVEL(4, -4),
    /**
     * <code>NOT_ENOUGH_GOLD = -5;</code>
     *
     * <pre>
     *钻石不足
     * </pre>
     */
    NOT_ENOUGH_GOLD(5, -5),
    /**
     * <code>NOT_ROLE = -6;</code>
     *
     * <pre>
     *角色不存在
     * </pre>
     */
    NOT_ROLE(6, -6),
    /**
     * <code>NOT_EQUIP = -7;</code>
     *
     * <pre>
     *没有装备
     * </pre>
     */
    NOT_EQUIP(7, -7),
    /**
     * <code>NONE_NEXT_QUALITY = -8;</code>
     *
     * <pre>
     *没有下一阶角色品质
     * </pre>
     */
    NONE_NEXT_QUALITY(8, -8),
    /**
     * <code>NOT_EQUIP_ADVANCE = -9;</code>
     *
     * <pre>
     *装备未满6个不能进阶
     * </pre>
     */
    NOT_EQUIP_ADVANCE(9, -9),
    /**
     * <code>NOT_ENOUGH_MATE = -10;</code>
     *
     * <pre>
     *材料不足
     * </pre>
     */
    NOT_ENOUGH_MATE(10, -10),
    /**
     * <code>NOT_SKILL = -11;</code>
     *
     * <pre>
     *技能不存在
     * </pre>
     */
    NOT_SKILL(11, -11),
    /**
     * <code>NOT_ENOUGH_SKILL_LEVEL = -12;</code>
     *
     * <pre>
     *技能等级不够
     * </pre>
     */
    NOT_ENOUGH_SKILL_LEVEL(12, -12),
    /**
     * <code>NOT_OPEN_SKILL = -13;</code>
     *
     * <pre>
     *技能未开启
     * </pre>
     */
    NOT_OPEN_SKILL(13, -13),
    /**
     * <code>IS_MAX_SKILL_LEVEL = -14;</code>
     *
     * <pre>
     *技能最高等级
     * </pre>
     */
    IS_MAX_SKILL_LEVEL(14, -14),
    /**
     * <code>SKILL_LEVEL_EQUAL_ROLE_LEVEL = -15;</code>
     *
     * <pre>
     *技能等级大于等于人物特级
     * </pre>
     */
    SKILL_LEVEL_EQUAL_ROLE_LEVEL(15, -15),
    /**
     * <code>CONFIG_ERROR = -16;</code>
     *
     * <pre>
     *配置错误
     * </pre>
     */
    CONFIG_ERROR(16, -16),
    /**
     * <code>NOT_ENOUGH_SKILL_POINT = -17;</code>
     *
     * <pre>
     *技能点不足
     * </pre>
     */
    NOT_ENOUGH_SKILL_POINT(17, -17),
    /**
     * <code>NOT_CONFORM_CONDITIONS = -18;</code>
     *
     * <pre>
     *条件不符合
     * </pre>
     */
    NOT_CONFORM_CONDITIONS(18, -18),
    /**
     * <code>FUNCTION_NOT_OPEN = -19;</code>
     *
     * <pre>
     *根据openlevellimit.csv 功能未开放
     * </pre>
     */
    FUNCTION_NOT_OPEN(19, -19),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>FAIL = -1;</code>
     *
     * <pre>
     *失败
     * </pre>
     */
    public static final int FAIL_VALUE = -1;
    /**
     * <code>NOT_ENOUGH_VIP = -2;</code>
     *
     * <pre>
     *Vip等级不足
     * </pre>
     */
    public static final int NOT_ENOUGH_VIP_VALUE = -2;
    /**
     * <code>NOT_ENOUGH_COIN = -3;</code>
     *
     * <pre>
     *铜钱不足
     * </pre>
     */
    public static final int NOT_ENOUGH_COIN_VALUE = -3;
    /**
     * <code>NOT_ENOUGH_LEVEL = -4;</code>
     *
     * <pre>
     *等级不足
     * </pre>
     */
    public static final int NOT_ENOUGH_LEVEL_VALUE = -4;
    /**
     * <code>NOT_ENOUGH_GOLD = -5;</code>
     *
     * <pre>
     *钻石不足
     * </pre>
     */
    public static final int NOT_ENOUGH_GOLD_VALUE = -5;
    /**
     * <code>NOT_ROLE = -6;</code>
     *
     * <pre>
     *角色不存在
     * </pre>
     */
    public static final int NOT_ROLE_VALUE = -6;
    /**
     * <code>NOT_EQUIP = -7;</code>
     *
     * <pre>
     *没有装备
     * </pre>
     */
    public static final int NOT_EQUIP_VALUE = -7;
    /**
     * <code>NONE_NEXT_QUALITY = -8;</code>
     *
     * <pre>
     *没有下一阶角色品质
     * </pre>
     */
    public static final int NONE_NEXT_QUALITY_VALUE = -8;
    /**
     * <code>NOT_EQUIP_ADVANCE = -9;</code>
     *
     * <pre>
     *装备未满6个不能进阶
     * </pre>
     */
    public static final int NOT_EQUIP_ADVANCE_VALUE = -9;
    /**
     * <code>NOT_ENOUGH_MATE = -10;</code>
     *
     * <pre>
     *材料不足
     * </pre>
     */
    public static final int NOT_ENOUGH_MATE_VALUE = -10;
    /**
     * <code>NOT_SKILL = -11;</code>
     *
     * <pre>
     *技能不存在
     * </pre>
     */
    public static final int NOT_SKILL_VALUE = -11;
    /**
     * <code>NOT_ENOUGH_SKILL_LEVEL = -12;</code>
     *
     * <pre>
     *技能等级不够
     * </pre>
     */
    public static final int NOT_ENOUGH_SKILL_LEVEL_VALUE = -12;
    /**
     * <code>NOT_OPEN_SKILL = -13;</code>
     *
     * <pre>
     *技能未开启
     * </pre>
     */
    public static final int NOT_OPEN_SKILL_VALUE = -13;
    /**
     * <code>IS_MAX_SKILL_LEVEL = -14;</code>
     *
     * <pre>
     *技能最高等级
     * </pre>
     */
    public static final int IS_MAX_SKILL_LEVEL_VALUE = -14;
    /**
     * <code>SKILL_LEVEL_EQUAL_ROLE_LEVEL = -15;</code>
     *
     * <pre>
     *技能等级大于等于人物特级
     * </pre>
     */
    public static final int SKILL_LEVEL_EQUAL_ROLE_LEVEL_VALUE = -15;
    /**
     * <code>CONFIG_ERROR = -16;</code>
     *
     * <pre>
     *配置错误
     * </pre>
     */
    public static final int CONFIG_ERROR_VALUE = -16;
    /**
     * <code>NOT_ENOUGH_SKILL_POINT = -17;</code>
     *
     * <pre>
     *技能点不足
     * </pre>
     */
    public static final int NOT_ENOUGH_SKILL_POINT_VALUE = -17;
    /**
     * <code>NOT_CONFORM_CONDITIONS = -18;</code>
     *
     * <pre>
     *条件不符合
     * </pre>
     */
    public static final int NOT_CONFORM_CONDITIONS_VALUE = -18;
    /**
     * <code>FUNCTION_NOT_OPEN = -19;</code>
     *
     * <pre>
     *根据openlevellimit.csv 功能未开放
     * </pre>
     */
    public static final int FUNCTION_NOT_OPEN_VALUE = -19;


    public final int getNumber() { return value; }

    public static ErrorType valueOf(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case -1: return FAIL;
        case -2: return NOT_ENOUGH_VIP;
        case -3: return NOT_ENOUGH_COIN;
        case -4: return NOT_ENOUGH_LEVEL;
        case -5: return NOT_ENOUGH_GOLD;
        case -6: return NOT_ROLE;
        case -7: return NOT_EQUIP;
        case -8: return NONE_NEXT_QUALITY;
        case -9: return NOT_EQUIP_ADVANCE;
        case -10: return NOT_ENOUGH_MATE;
        case -11: return NOT_SKILL;
        case -12: return NOT_ENOUGH_SKILL_LEVEL;
        case -13: return NOT_OPEN_SKILL;
        case -14: return IS_MAX_SKILL_LEVEL;
        case -15: return SKILL_LEVEL_EQUAL_ROLE_LEVEL;
        case -16: return CONFIG_ERROR;
        case -17: return NOT_ENOUGH_SKILL_POINT;
        case -18: return NOT_CONFORM_CONDITIONS;
        case -19: return FUNCTION_NOT_OPEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            public ErrorType findValueByNumber(int number) {
              return ErrorType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.rwproto.ErrorService.getDescriptor().getEnumTypes().get(0);
    }

    private static final ErrorType[] VALUES = values();

    public static ErrorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ErrorType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ErrorService.ErrorType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ErrorService.proto\022\014ErrorService*\333\004\n\tE" +
      "rrorType\022\013\n\007SUCCESS\020\000\022\021\n\004FAIL\020\377\377\377\377\377\377\377\377\377\001" +
      "\022\033\n\016NOT_ENOUGH_VIP\020\376\377\377\377\377\377\377\377\377\001\022\034\n\017NOT_ENO" +
      "UGH_COIN\020\375\377\377\377\377\377\377\377\377\001\022\035\n\020NOT_ENOUGH_LEVEL\020" +
      "\374\377\377\377\377\377\377\377\377\001\022\034\n\017NOT_ENOUGH_GOLD\020\373\377\377\377\377\377\377\377\377\001" +
      "\022\025\n\010NOT_ROLE\020\372\377\377\377\377\377\377\377\377\001\022\026\n\tNOT_EQUIP\020\371\377\377" +
      "\377\377\377\377\377\377\001\022\036\n\021NONE_NEXT_QUALITY\020\370\377\377\377\377\377\377\377\377\001\022" +
      "\036\n\021NOT_EQUIP_ADVANCE\020\367\377\377\377\377\377\377\377\377\001\022\034\n\017NOT_E" +
      "NOUGH_MATE\020\366\377\377\377\377\377\377\377\377\001\022\026\n\tNOT_SKILL\020\365\377\377\377\377" +
      "\377\377\377\377\001\022#\n\026NOT_ENOUGH_SKILL_LEVEL\020\364\377\377\377\377\377\377\377",
      "\377\001\022\033\n\016NOT_OPEN_SKILL\020\363\377\377\377\377\377\377\377\377\001\022\037\n\022IS_MA" +
      "X_SKILL_LEVEL\020\362\377\377\377\377\377\377\377\377\001\022)\n\034SKILL_LEVEL_" +
      "EQUAL_ROLE_LEVEL\020\361\377\377\377\377\377\377\377\377\001\022\031\n\014CONFIG_ER" +
      "ROR\020\360\377\377\377\377\377\377\377\377\001\022#\n\026NOT_ENOUGH_SKILL_POINT" +
      "\020\357\377\377\377\377\377\377\377\377\001\022#\n\026NOT_CONFORM_CONDITIONS\020\356\377" +
      "\377\377\377\377\377\377\377\001\022\036\n\021FUNCTION_NOT_OPEN\020\355\377\377\377\377\377\377\377\377\001" +
      "B\033\n\013com.rwprotoB\014ErrorService"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
